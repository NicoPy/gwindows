--  Warning: This lexical scanner is automatically generated by AFLEX.
--           It is useless to modify it. Change the ".Y" & ".L" files instead.
with Text_IO; use Text_IO;
with rc_dfa; use rc_dfa; 
with rc_io; use rc_io; 
--# line 1 "rc.l"
--------------------------------------------------------------------------
--  RC.l
--
--  Resource Compiler script lexer file (AFLEX)
--
--  Copyright (c) Gautier de Montmollin 2008..2009
--  SWITZERLAND
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
-- NB: this is the MIT License, as found 28-Jul-2008 on the site
-- http://www.opensource.org/licenses/mit-license.php
--------------------------------------------------------------------------
--
-- Change log:
--
-- 30-Apr-2009 GdM: Some additions for matching ResEdit 1.4.4.19 suppl. tags
-- ...
-- 28-Jul-2008 GdM: Created
--
--# line 52 "rc.l"


with RC_Tokens; use RC_Tokens;
with RC_Help;   use RC_Help;

function YYLex return Token is
subtype Short is Integer range -32768..32767;
    yy_act : Integer;
    yy_c   : Short;

-- returned upon end-of-file
YY_END_TOK : constant Integer := 0;
YY_END_OF_BUFFER : constant := 259;
subtype yy_state_type is Integer;
yy_current_state : yy_state_type;
INITIAL : constant := 0;
yy_accept : constant array(0..1868) of Short :=
    (   0,
      250,  250,  259,  258,  255,  256,  258,  258,    4,  250,
      250,  258,  247,  248,  258,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,    5,    3,    6,  255,    0,
      252,    0,    0,    0,    0,    0,  250,  250,  248,    0,
      250,    0,    0,  249,    0,  248,    0,  253,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,    0,  250,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,    0,    0,    0,    0,    0,    0,    0,  250,
        0,    0,    0,    2,  249,  251,  254,   71,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,   41,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,    8,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,    0,    0,    0,    0,    0,   11,    0,    0,    0,
        0,    0,    0,    1,  251,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,   36,  254,  254,  254,  254,  254,
       58,   83,  254,  254,  254,  254,  254,  254,  254,  254,
       20,  254,  254,  254,  254,  254,  254,  254,  254,   27,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  245,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  254,  254,   68,  254,
      254,  254,   40,  254,   81,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
       35,  254,  254,   38,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  246,  254,  254,  254,  254,
      254,   28,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   37,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,   63,  254,  254,  254,  254,  254,  254,

       39,  254,  254,  254,   72,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
       32,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,   82,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,    0,    0,   15,    0,
       14,    0,    0,    0,    0,    0,    0,  254,  254,  254,
      254,  254,   84,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  177,  254,   87,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,   85,  254,  254,  254,   18,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   57,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,   52,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,    0,    0,   16,    0,   11,    0,    0,    0,    0,
       10,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  167,  168,  254,  254,  254,  254,  254,  176,
      254,   34,  254,  254,  254,  254,  254,  254,  254,  254,
      254,   56,  254,   42,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  150,  254,  254,  254,  254,  254,
      254,  254,  254,   33,  254,    0,   78,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,   46,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,   29,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      138,  139,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  205,  254,  254,  254,   86,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,   67,   69,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
        0,    9,    0,   11,    7,    0,   17,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  175,  254,  254,  254,
      254,  254,  254,  254,  186,  254,   49,   44,  254,  254,
      254,   19,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,   43,  254,  254,  254,

      254,  254,  254,  254,  254,  156,  254,  254,  254,  254,
      254,  254,   45,  254,  254,  254,  254,   59,   31,  254,
      254,  254,  254,  254,  254,  254,  254,  196,  254,  254,
      254,  213,  214,  254,  254,  254,  254,  254,  254,  254,
      254,   62,  254,   26,   70,  254,  254,  254,  254,  254,
      254,  199,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  143,  254,  254,  254,  254,  254,  202,
      254,  254,  254,  204,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  207,  254,  209,  254,
      254,  254,  254,  254,  254,  254,  254,  102,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  107,  254,  254,  254,  111,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  159,  254,  254,
      254,  163,  164,  165,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  118,  119,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  149,
      254,  152,  254,  254,  254,  254,  254,  254,  254,    0,
       79,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  193,  254,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,   61,  254,  254,  254,  254,
      254,  254,  254,   55,   64,  131,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  144,  145,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   99,
      254,  254,  100,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   51,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  178,  254,  254,  254,  254,  254,  180,  254,

      254,  254,   24,  254,   21,  254,  254,  121,  254,  254,
      254,  254,  129,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,    0,   77,  254,  254,  254,
      254,  254,  254,   23,  244,  254,  254,  254,  254,  254,
      254,  194,  254,  254,  254,  254,  254,  216,  254,  254,
      254,  254,  254,  254,  254,  254,  254,   53,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  201,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  101,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  254,  254,  254,  254,  254,  108,  254,
      254,  112,  113,  114,  254,  115,  116,  254,  254,  254,
      254,  254,  254,  254,  254,  169,  254,  254,  254,  173,
      254,  254,  254,  254,  254,  254,  254,  254,  254,   30,
      254,  254,  122,  254,  254,  254,  254,  254,  130,  254,
      254,  254,  254,  254,  154,  155,  254,  254,  254,  254,
      254,  254,  232,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  229,  254,  254,
      254,  254,  254,   47,   25,  254,  254,  254,  254,  254,
      137,  254,  141,  254,  254,   89,  254,  203,  254,  254,

       22,  254,  254,  254,  254,  221,  254,  254,  254,  254,
      254,  254,  254,   73,   96,  254,   98,  254,  254,  105,
      106,  254,  254,  254,  254,  254,  254,  239,  254,  254,
      254,  254,  254,  254,  254,   65,  254,   50,  254,  254,
      254,  254,  254,  170,  171,  254,  254,  254,  254,  182,
      254,  254,  254,  254,  254,  254,  254,  123,  254,  125,
      254,  128,  254,  254,  254,  151,  254,  157,  254,  254,
        0,   80,  254,    0,   74,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,   60,  254,  198,  254,  254,  254,  133,  254,  254,

      136,  254,  254,  146,  254,  206,  230,  254,  254,  254,
      223,  254,  225,  254,  254,  254,  254,   95,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,   90,  254,  160,  254,  254,  254,
      172,  254,  254,  254,  254,  254,  254,  254,  254,   54,
      254,  254,  124,  254,  254,  254,  254,  153,  158,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  212,
      254,  254,  254,  218,  254,  254,  254,  254,  132,  254,
      254,  254,  254,  200,  254,  254,  254,  254,  254,  254,
      208,  254,   97,  254,  254,  254,  254,  254,  254,  254,

      254,  254,  254,  242,  254,  254,  254,  117,  254,  254,
      254,  254,  174,  254,  254,  254,  184,  254,  254,  254,
      120,  127,  254,  228,  147,  148,    0,   76,  254,  254,
      254,  254,  189,  254,  254,  254,  254,  254,  254,  254,
      254,  254,   92,  254,   93,  134,  135,  254,  254,   94,
      220,  222,  254,  226,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  110,  109,   48,
      161,  254,  254,  179,  254,  254,  254,   66,  254,  254,
      231,  254,  188,  191,  190,  254,  254,  197,  211,  254,
      254,  254,    0,   75,  254,  254,  254,  224,  254,  210,

      103,  104,  254,  234,  254,  254,  254,  254,  254,  254,
      254,  254,  166,  254,  183,  254,  254,  126,  254,  254,
      254,  215,  254,  254,  254,  142,  254,  254,  235,  254,
      254,  254,  240,  241,  254,  254,  254,  254,  254,  254,
      254,  254,  217,  219,  140,  227,  233,  236,  254,  254,
      243,  162,  254,  185,   91,  254,  254,  195,  254,  254,
      181,  187,  254,  237,  254,  192,  238,    0
    ) ;

yy_ec : constant array(ASCII.NUL..Character'Last) of short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   13,
       14,   13,   13,   13,   13,   15,   15,    1,    1,   16,
        1,   17,    1,    1,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       28,   35,   36,   37,   38,   39,   40,   41,   42,   43,
        1,    1,    1,    1,   18,    1,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   28,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,    1,    1, others=> 1

    ) ;

yy_meta : constant array(0..46) of short :=
    (   0,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        1,    4,    4,    4,    4,    1,    1,    3,    4,    4,
        4,    4,    4,    4,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    1,    1,    1
    ) ;

yy_base : constant array(0..1898) of Short :=
    (   0,
        0,    0, 2268, 2269, 2265, 2269, 2262,   25, 2269,   41,
       53,   51,   67,   60, 2248,    0,   57,   61,   90,   75,
      122,   73,   79, 2241,   28,  106,   80, 2230,  118,   67,
      129,  139,   85,  148,  103, 2269, 2269, 2269, 2260, 2257,
     2256, 2236,   39,   98, 2223, 2225,  167,  173,  179,  191,
      195, 2250, 2252,  201,    0,  207, 2237, 2269,    0, 2232,
     2215, 2224, 2229, 2212, 2223, 2210, 2213, 2227, 2207, 2209,
     2206,  123, 2222,  109, 2217, 2204, 2201,  133,  128, 2212,
     2218, 2199,  213,  219, 2207, 2211, 2214, 2195, 2200,   55,
     2197,   99, 2210, 2200, 2196, 2192, 2203, 2204, 2190, 2185,

     2184, 2196, 2182, 2181, 2184,  129,  202, 2179, 2180,  212,
      141, 2191,  218, 2176, 2176, 2176, 2182, 2190,  218, 2171,
     2170, 2164, 2171,  204, 2167, 2166, 2179, 2170, 2164, 2163,
     2179, 2178, 2171,  211, 2172,  237, 2172, 2173, 2169,  236,
     2184,  246, 2186, 2269,  251, 2158, 2164,    0, 2155, 2158,
     2151, 2156, 2151, 2160,  261, 2143, 2142, 2160, 2142, 2155,
     2139, 2154, 2136, 2131, 2135, 2147, 2135, 2141, 2137, 2145,
     2138,  287, 2146, 2126,    0,  305, 2125, 2125, 2137, 2136,
     2121, 2115, 2118,  149, 2133, 2120, 2121, 2134, 2130, 2125,
     2131, 2111, 2106, 2128, 2127, 2106, 2106, 2119, 2109,    0,

     2122, 2101, 2108,   36, 2114, 2110, 2108, 2103, 2092, 2114,
     2098, 2111, 2105,  326, 2091, 2100, 2096, 2107, 2106, 2086,
     2092, 2100, 2097, 2101, 2100, 2084, 2078, 2079, 2077,  240,
      347, 2086, 2088, 2088, 2083, 2106, 2269,  255,  240, 2078,
     2082, 2083, 2099, 2269, 2269, 2074, 2084, 2075,  258, 2069,
     2081, 2070, 2062, 2059,  168, 2073, 2072, 2064, 2070, 2054,
     2051, 2052,  227,  264, 2068, 2055, 2060,  280, 2067, 2056,
     2048, 2050, 2047, 2044, 2047, 2042, 2040, 2052, 2043, 2056,
     2042, 2051,  281, 2045, 2038, 2037, 2036,  263, 2033, 2030,
     2028, 2042, 2041, 2025, 2024, 2038, 2041,  244, 2025, 2039,

     2015, 2033,  352, 2033,    0, 2031, 2019, 2019, 2028, 2027,
        0,    0, 2013, 2011, 2009,  370, 2026, 2008,  380, 2012,
      283, 2017, 2023, 2002, 2001, 2005, 2005, 1999, 2001,    0,
     2015, 2001, 2014, 1995, 1992, 2000, 1994, 1991,  282, 2004,
     1994, 1990, 2003, 2000, 1989,  261,  217, 1995, 1997, 1987,
     1995,  385, 1991, 1989, 1995, 1985,    0,  400,  301, 1973,
     1989, 1984, 1981, 1982, 1971,  296, 1974,  302,  295, 1965,
     1970, 1968,  315, 1970,  170,  329,  323, 1970, 1998, 1997,
     1975,  341,  351, 1960, 1966, 1972, 1972, 1957,    0, 1957,
     1966, 1972,    0, 1956,    0, 1952, 1951, 1950, 1949, 1953,

     1960, 1964, 1958, 1951, 1948, 1943, 1956, 1952, 1935, 1941,
     1951, 1941, 1939, 1933,  325, 1951, 1929,  330, 1947,  357,
        0, 1947, 1933,    0, 1930, 1937, 1927, 1930, 1936, 1925,
     1938, 1928, 1925, 1924, 1914, 1933, 1931, 1925, 1914, 1927,
     1913, 1921, 1924, 1909, 1913, 1920, 1913, 1911, 1910, 1904,
     1920, 1913, 1903, 1904, 1905,    0, 1904, 1897, 1894, 1889,
     1907,    0, 1907, 1908, 1897, 1907, 1895, 1887, 1896, 1903,
     1894, 1879, 1900, 1880, 1884, 1876, 1882, 1878, 1880,    0,
      341, 1891, 1884, 1877, 1886,  387, 1875,  363, 1870, 1885,
     1885, 1881, 1880,    0, 1883, 1880, 1877, 1861, 1878, 1865,

        0, 1873, 1865, 1875,    0, 1856, 1873, 1859, 1868, 1870,
     1855, 1863, 1852, 1866, 1859, 1852, 1850, 1854, 1866, 1854,
        0, 1840, 1844, 1843, 1842, 1851, 1840, 1840, 1852, 1850,
     1847, 1849, 1835, 1839, 1832, 1838, 1828, 1829, 1828, 1825,
     1827,    0, 1825, 1834, 1820, 1836, 1834, 1830, 1817, 1817,
     1823, 1822, 1812, 1822, 1828, 1812, 1823, 1802, 1810, 1807,
     1797, 1803, 1818, 1810, 1800, 1814, 1811, 1830, 2269, 1829,
     2269, 1828, 1827,  387, 1807, 1809, 1824, 1791, 1802, 1787,
     1800, 1800,    0, 1802, 1787, 1788, 1781, 1780, 1782, 1778,
     1777, 1776, 1789, 1785, 1783, 1783, 1771,    0, 1775,    0,

     1774, 1768, 1768, 1770, 1766, 1769, 1769, 1764, 1761, 1764,
     1774, 1762, 1764,    0, 1762, 1766, 1764, 1767, 1767, 1758,
     1754, 1749, 1748, 1761, 1764, 1763, 1759, 1756, 1749, 1747,
     1640, 1619, 1626, 1621, 1620, 1619, 1635, 1633,   85,  126,
      147,  176,  219,  245,  254,  436,  270,  273,  294,    0,
      297,  326,  353,  360,  375,  356,  372,  364,  372,  382,
      389,  398,  389,  393,  406,  390,  406,  409,  415,  413,
      414,  417,  421,  423,  421,  420,  423,  436,  437,  442,
      432,  428,  429,  443,  429,  431,  431,  431,  443,  436,
      452,  436,  443,  454,  439,  454,  436,  447,  446,  449,

      455,  460,  453,  459,  452,    0,  453,  454,  455,  456,
      461,  461,  460,  477,  464,  481,  474,  466,  479,  472,
      469,  474,  473,  474,  473,  492,  494,  481,  472,  478,
      479,  496,  495,  497,  483,  491,  488,  504,  500,  506,
      488,  493,  502,  503,  493,  509,  502,  498,  514,  509,
      502,  536,  537, 2269,  541, 2269,  542,  523,  544,  545,
     2269,  530,  532,  532,  531,  526,  517,  541,  537,  524,
      535,  521,    0,  523,  534,  528,  544,  532,  529,    0,
      530,    0,  535,  550,  536,  535,  549,  539,  538,  554,
      537,    0,  538,    0,  557,  561,  550,  542,  565,  547,

      553,  564,  565,  567,  560,  561,  562,  560,  564,  562,
      570,  560,  572,  576,    0,  574,  579,  570,  564,  572,
      569,  572,  573,    0,  584,  607, 2269,  611,  584,  600,
      588,  584,  595,  596,  598,  594,  609,  610,  615,  612,
      600,  600,  606,  616,  613,  618,  605,  606,    0,  619,
      612,  614,  610,  615,  616,  610,  626,  615,  620,  634,
      639,  628,  630,  638,  625,  626,    0,  625,  629,  629,
      630,  644,  632,  651,  638,  653,  644,  651,  645,  652,
        0,  645,  655,  643,  643,  651,  659,  660,  665,  652,
      660,  661,  659,    0,  653,  654,  662,    0,  658,  657,

      675,  663,  675,  678,  667,  661,  669,  660,  678,  672,
      686,  681,    0,  670,  683,  678,  673,  690,  687,  693,
      695,  697,  683,  698,  690,  688,  695,  687,  692,  692,
      695,  698,  699,  699,  714,  712,  699,  708,  718,  706,
      737, 2269,  738, 2269, 2269,  739, 2269,  706,  723,  708,
      717,  714,  725,  713,  724,  732,  718,  722,  719,  719,
      733,  727,  736,  721,  733,  741,    0,  739,  737,  744,
      743,  729,  732,  738,    0,  734,    0,    0,  736,  733,
      748,    0,  753,  752,  746,  741,  736,  745,  743,  757,
      757,  759,  751,  760,  763,  750,    0,  752,  753,  755,

      761,  757,  761,  761,  763,    0,  775,  774,  762,  757,
      799,  782,    0,  779,  780,  790,  787,    0,    0,  797,
      786,  782,  793,  784,  792,  799,  789,    0,  806,  794,
      808,    0,    0,  793,  794,  794,  801,  813,  811,  799,
      806,    0,  818,    0,    0,  810,  815,  821,  807,  804,
      819,    0,  811,  812,  814,  825,  815,  821,  817,  830,
      821,  831,  829,    0,  834,  826,  824,  841,  825,    0,
      830,  843,  828,    0,  831,  829,  850,  839,  832,  844,
      835,  837,  839,  842,  840,  837,    0,  845,    0,  849,
      848,  854,  861,  851,  857,  850,  853,    0,  861,  861,

      859,  871,  870,  858,  866,  862,  861,  871,  878,  865,
      881,    0,  871,  875,  876,    0,  871,  873,  873,  883,
      878,  879,  877,  881,  889,  893,  894,    0,  878,  893,
      895,    0,    0,    0,  892,  878,  893,  886,  885,  894,
      886,  890,  890,  897,  895,  894,  908,  908,  905,  906,
      897,  902,  906,  914,    0,  907,  902,  910,  899,  920,
      908,  913,  908,  923,  914,  929,  930,  929,  930,    0,
      925,    0,  914,  919,  925,  937,  920,  957,  933,  966,
     2269, 1003,  937,  941,  942,  939,  955,  947,  956,  944,
      959,  958,    0,  940,  961,  964,  955,  951,  950,  952,

      967,  968,  956,  975,  972,    0,  975,  976,  963,  978,
      968,  980,  979,    0,    0,    0,  981,  994,  991,  994,
     1003, 1002,  984,  998,  983,    0,    0, 1004,  998, 1002,
      999, 1002, 1005, 1014, 1012, 1014, 1017, 1000, 1006, 1012,
     1021, 1008, 1012, 1020, 1015, 1007, 1027, 1026, 1028,    0,
     1015, 1030,    0, 1022, 1028, 1036, 1034, 1027, 1036, 1020,
     1038, 1025, 1044, 1038, 1028, 1036, 1036, 1036, 1039, 1027,
     1028, 1031, 1035, 1040, 1040, 1053, 1047, 1043, 1060,    0,
     1047, 1043, 1063, 1062, 1057, 1065, 1049, 1055, 1069, 1052,
     1067, 1054,    0, 1071, 1070, 1054, 1068, 1061,    0, 1061,

     1077, 1062,    0, 1077,    0, 1068, 1076,    0, 1067, 1077,
     1086, 1070,    0, 1082, 1076, 1079, 1080, 1076, 1077, 1081,
     1091, 1093, 1074, 1081, 1080, 1116, 2269, 1119, 1110, 1108,
     1100, 1114, 1092,    0,    0, 1114, 1115, 1112, 1107, 1111,
     1117,    0, 1108, 1108, 1122, 1111, 1121,    0, 1118, 1113,
     1129, 1109, 1133, 1123, 1135, 1119, 1126,    0, 1125, 1121,
     1140, 1139, 1130, 1128, 1135, 1130, 1135, 1128, 1147, 1150,
     1149, 1152,    0, 1138, 1141, 1155, 1154, 1148, 1159, 1143,
     1158, 1148, 1146, 1154, 1148, 1156, 1164, 1152, 1153, 1157,
     1151, 1157, 1153,    0, 1164, 1165, 1174, 1174, 1164, 1172,

     1168, 1178, 1167, 1166, 1177, 1165, 1173, 1171,    0, 1185,
     1186,    0,    0,    0, 1191,    0,    0, 1175, 1176, 1173,
     1178, 1179, 1188, 1185, 1181,    0, 1197, 1181, 1189,    0,
     1186, 1189, 1193, 1194, 1195, 1209, 1192, 1201, 1198,    0,
     1194, 1210,    0, 1197, 1204, 1211, 1202, 1201,    0, 1212,
     1207, 1208, 1219, 1208,    0,    0, 1221, 1210, 1210, 1246,
     1292, 1236,    0, 1226, 1237, 1228, 1231, 1241, 1230, 1247,
     1230, 1244, 1250, 1247, 1252, 1249, 1250,    0, 1245, 1256,
     1246, 1250, 1259,    0,    0, 1248, 1243, 1262, 1246, 1260,
        0, 1249,    0, 1258, 1249,    0, 1258,    0, 1252, 1260,

        0, 1283, 1281, 1272, 1270,    0, 1272, 1280, 1284, 1293,
     1271, 1295, 1279,    0,    0, 1283,    0, 1295, 1291,    0,
        0, 1282, 1288, 1284, 1281, 1290, 1301,    0, 1304, 1299,
     1291, 1294, 1309, 1310, 1300,    0, 1296,    0, 1296, 1311,
     1315, 1319, 1303,    0,    0, 1309, 1309, 1310, 1311, 1315,
     1321, 1307, 1321, 1331, 1318, 1315, 1322,    0, 1330,    0,
     1321,    0, 1330, 1326, 1327,    0, 1321,    0, 1327, 1331,
     1358, 2269, 1361, 1368, 2269, 1407, 1350, 1341, 1339, 1351,
     1341, 1344, 1362, 1342, 1350, 1347, 1353, 1367, 1357, 1358,
     1357,    0, 1354,    0, 1358, 1356, 1370,    0, 1369, 1368,

        0, 1374, 1366,    0, 1362,    0,    0, 1363, 1370, 1369,
        0, 1369,    0, 1369, 1374, 1381, 1387,    0, 1390, 1386,
     1390, 1401, 1404, 1404, 1391, 1399, 1398, 1408, 1400, 1396,
     1415, 1402, 1403, 1414,    0, 1405,    0, 1406, 1402, 1404,
        0, 1410, 1413, 1408, 1418, 1410, 1423, 1427, 1428,    0,
     1427, 1420,    0, 1417, 1424, 1427, 1428,    0,    0, 1458,
     1438, 1434, 1448, 1436, 1442, 1453, 1447, 1454, 1445,    0,
     1455, 1459, 1442,    0, 1461, 1448, 1453, 1450,    0, 1464,
     1452, 1449, 1471,    0, 1455, 1456, 1457, 1461, 1459, 1456,
        0, 1475,    0, 1475, 1474, 1473, 1468, 1483, 1480, 1473,

     1471, 1487, 1488,    0, 1476, 1471, 1472,    0, 1482, 1474,
     1479, 1484,    0, 1488, 1498, 1484,    0, 1494, 1486, 1493,
        0,    0, 1492,    0,    0,    0, 1522, 2269, 1525, 1499,
     1516, 1508,    0, 1507, 1510, 1517, 1517, 1509, 1523, 1524,
     1529, 1522,    0, 1571,    0,    0,    0, 1515, 1526,    0,
        0,    0, 1515,    0, 1534, 1518, 1523, 1520, 1527, 1518,
     1534, 1537, 1542, 1530, 1538, 1531, 1542,    0,    0,    0,
        0, 1529, 1535,    0, 1533, 1544, 1542,    0, 1565, 1563,
        0, 1551,    0,    0,    0, 1566, 1549,    0,    0, 1556,
     1550, 1561, 1591, 2269, 1617, 1576, 1573,    0, 1555,    0,

        0,    0, 1575,    0, 1576, 1570, 1566, 1569, 1580, 1564,
     1573, 1573,    0, 1574,    0, 1585, 1573,    0, 1577, 1584,
     1589,    0, 1577, 1589, 1593,    0, 1593, 1594,    0, 1597,
     1609, 1598,    0,    0, 1599, 1605, 1608, 1617, 1604, 1611,
     1617, 1621,    0,    0,    0,    0,    0,    0, 1612, 1618,
        0,    0, 1616,    0,    0, 1617, 1622,    0, 1612, 1626,
        0,    0, 1614,    0, 1610,    0,    0, 2269, 1663, 1667,
     1669, 1673, 1677, 1649, 1681, 1685, 1689, 1693, 1697, 1701,
     1705, 1709, 1713, 1717, 1721, 1725, 1729, 1733, 1737, 1741,
     1745, 1749, 1753, 1757, 1761, 1765, 1769, 1773

    ) ;

yy_def : constant array(0..1898) of Short :=
    (   0,
     1868,    1, 1868, 1868, 1868, 1868, 1869, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1870, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1868, 1868, 1868, 1868, 1869,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1872, 1873, 1868, 1874, 1868, 1870, 1868, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1868, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1868, 1868, 1868, 1875, 1868, 1868, 1868, 1868,
     1872, 1876, 1873, 1868, 1868, 1874, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1868, 1868, 1868, 1868, 1875, 1868, 1875, 1875, 1868,
     1868, 1868, 1872, 1868, 1868, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1868, 1877, 1878,
     1868, 1875, 1875, 1868, 1868, 1868, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1868, 1877, 1868, 1878,
     1868, 1879, 1880, 1875, 1868, 1868, 1881, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1882, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1883, 1879, 1868, 1880, 1868, 1884, 1868, 1885, 1881,
     1868, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1886, 1868, 1882, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1883, 1868, 1884, 1868, 1868, 1885, 1868, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1887, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1888, 1871, 1889,
     1868, 1887, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1890, 1868, 1888, 1328, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1328, 1891,
     1892, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1328,
     1893, 1868, 1891, 1894, 1868, 1892, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1895,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1896, 1868, 1895, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1897, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1898, 1868, 1897, 1871, 1871, 1871, 1871, 1871,

     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871,    0, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868

    ) ;

yy_nxt : constant array(0..2315) of Short :=
    (   0,
        4,    5,    6,    7,    8,    4,    4,    9,   10,   11,
       12,   13,   14,   14,   14,   15,    4,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   25,   16,   16,   26,
       27,   28,   16,   29,   30,   31,   32,   33,   34,   35,
       16,   16,   16,   36,   37,   38,   42,   43,   96,   97,
       47,   44,   48,   49,   49,   49,   52,  328,   45,   98,
      329,   53,   46,   50,   51,   51,   51,   51,  134,   47,
      135,   56,   56,   56,   56,   50,   47,   60,   48,   54,
       54,   48,   50,   65,  179,  112,   61,   66,   62,   50,
       67,   89,   63,   77,   64,  180,   68,   78,   69,   90,

      104,   79,  105,  113,   80,   91,  126,   55,   70,   71,
       81,   82,  106,   92,   93,   72,   94,  182,  127,   73,
      819,  136,   74,  131,   99,  100,   75,   76,   83,  137,
       83,  183,  101,   84,   84,   84,   84,  108,  132,  162,
      163,  159,  102,   85,  103,  160,  169,  820,  114,  115,
      109,  116,  110,   86,  117,  111,  167,   87,  120,  121,
      197,  122,   88,  170,  118,  119,  128,  198,  168,  308,
      129,  123,  821,  124,  130,  205,  206,  125,   51,   51,
       51,   51,   47,  309,   48,   48,   48,   48,   47,   50,
       56,   56,   56,   56,  398,   50,  561,   83,  822,   83,

      399,   50,  140,  140,  140,  140,   51,   51,   51,   51,
       47,  562,  145,  145,  145,   48,   47,   50,   56,   56,
       56,   56,  222,   50,  140,  140,  140,  140,  199,   50,
       84,   84,   84,   84,  203,  208,  215,  233,  200,  237,
      209,  223,  237,  516,  204,  407,  234,  140,  140,  140,
      140,  142,  216,  408,  517,  823,  244,  237,  238,  217,
       47,  383,  145,  145,  145,   48,  451,  824,  239,  364,
      452,  390,  825,   50,  253,  365,  366,  382,  391,  254,
      255,  256,  257,  514,  258,  439,  409,  515,  440,  829,
      259,  260,  392,  261,  262,  263,  410,  264,  414,  265,

      282,  415,  488,  433,  441,  416,  830,  283,  506,  489,
      284,  507,  417,  434,  547,  418,  285,  286,  287,  537,
      550,  553,  288,  291,  554,  292,  538,  551,  831,  832,
      548,  552,  539,  558,  293,  294,  295,  296,  297,  298,
      540,  559,  299,  237,  300,  339,  340,  563,  341,  565,
      342,  603,  343,  237,  564,  344,  607,  345,  566,  604,
      346,  347,  608,  833,  573,  348,  367,  368,  369,  370,
      667,  371,  372,  574,  834,  457,  610,  373,  668,  611,
      374,  677,  375,  376,  458,  377,  835,  459,  460,  237,
      461,  471,  472,  836,  837,  473,  838,  678,  481,  839,

      474,  475,  476,  522,  523,  477,  482,  478,  840,  483,
      757,  484,  673,  674,  485,  486,  524,  841,  842,  675,
      846,  525,  531,  526,  843,  532,  533,  847,  848,  534,
      849,  535,  850,  844,  845,  536,  826,  826,  827,  826,
      826,  826,  826,  826,  826,  851,  826,  852,  853,  854,
      855,  826,  826,  856,  857,  858,  859,  860,  861,  862,
      863,  864,  865,  866,  867,  868,  869,  870,  871,  872,
      873,  874,  875,  876,  877,  878,  879,  880,  881,  826,
      826,  826,  882,  883,  884,  885,  886,  887,  888,  889,
      890,  891,  892,  893,  894,  895,  896,  897,  898,  899,

      900,  901,  902,  903,  904,  905,  906,  907,  908,  909,
      910,  911,  912,  913,  914,  915,  916,  917,  918,  919,
      920,  921,  922,  923,  924,  930,  925,  931,  932,  933,
      934,  935,  936,  937,  938,  939,  940,  926,  942,  754,
      927,  928,  929,  756,  944,  945,  947,  761,  948,  949,
      950,  951,  952,  953,  954,  957,  958,  959,  960,  961,
      962,  955,  963,  964,  966,  967,  968,  969,  970,  971,
      972,  973,  974,  965,  975,  956,  976,  977,  978,  979,
      980,  981,  982,  983,  984,  985,  986,  987,  989,  990,
      991,  992,  993,  994,  995,  996,  997,  998, 1000,  988,

     1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,  827,
      999,  826,  826,  827,  826,  826,  826,  826,  826,  826,
     1010,  826, 1011, 1012, 1013, 1014,  826,  826, 1015, 1016,
     1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
     1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
     1037, 1038, 1039, 1040,  826,  826,  826, 1041, 1042, 1043,
     1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
     1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064,
     1065, 1066, 1067, 1068, 1069, 1070, 1060, 1072, 1073, 1074,
     1075, 1076, 1077, 1078, 1079, 1081, 1071, 1082, 1083, 1084,

     1085, 1086, 1087, 1088, 1080, 1089, 1090, 1091, 1092, 1093,
     1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1105,
     1107, 1108, 1106, 1109, 1110, 1112, 1111, 1113, 1114, 1115,
     1100, 1104, 1116, 1117, 1118, 1119, 1120, 1121, 1122,  942,
      944,  947, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
     1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
     1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
     1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
     1161, 1162, 1163, 1165, 1166, 1164, 1167, 1168, 1169, 1170,
     1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,

     1180, 1181, 1180, 1180, 1180, 1180, 1180, 1180, 1183, 1180,
     1184, 1185, 1186, 1187, 1180, 1180, 1188, 1189, 1190, 1191,
     1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
     1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
     1212, 1213, 1180, 1180, 1180, 1214, 1215, 1216, 1217, 1219,
     1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1218,
     1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
     1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
     1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
     1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,

     1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
     1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
     1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
     1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
     1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1326, 1327,
     1326, 1326, 1326, 1326, 1326, 1326, 1330, 1326, 1181, 1331,
     1332, 1333, 1326, 1326, 1334, 1335, 1336, 1337, 1338, 1339,
     1341, 1342, 1343, 1344, 1345, 1346, 1347, 1329, 1348, 1349,
     1350, 1351, 1340, 1352, 1353, 1354, 1355, 1356, 1357, 1358,

     1326, 1326, 1326, 1180, 1180, 1181, 1180, 1180, 1180, 1180,
     1180, 1180, 1359, 1180, 1360, 1361, 1362, 1363, 1180, 1180,
     1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
     1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
     1384, 1385, 1386, 1387, 1388, 1389, 1180, 1180, 1180, 1390,
     1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
     1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
     1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
     1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
     1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,

     1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
     1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1327, 1326,
     1326, 1327, 1326, 1326, 1326, 1326, 1326, 1326, 1459, 1326,
     1460, 1461, 1462, 1463, 1326, 1326, 1464, 1465, 1466, 1467,
     1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
     1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
     1488, 1489, 1326, 1326, 1326, 1490, 1491, 1492, 1493, 1494,
     1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
     1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
     1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,

     1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
     1536, 1537, 1526, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
     1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
     1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
     1565, 1566, 1567, 1568, 1569, 1570, 1571, 1571, 1572, 1571,
     1571, 1571, 1571, 1571, 1571, 1577, 1571, 1578, 1579, 1580,
     1581, 1571, 1571, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
     1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
     1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1571,
     1571, 1571, 1574, 1574, 1575, 1574, 1574, 1574, 1574, 1574,

     1574, 1608, 1574, 1609, 1610, 1611, 1612, 1574, 1574, 1613,
     1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
     1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
     1634, 1635, 1636, 1637, 1638, 1574, 1574, 1574, 1639, 1640,
     1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
     1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
     1572, 1571, 1571, 1572, 1571, 1571, 1571, 1571, 1571, 1571,
     1575, 1571, 1661, 1662, 1663, 1664, 1571, 1571, 1665, 1666,
     1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
     1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,

     1687, 1688, 1689, 1690, 1571, 1571, 1571, 1574, 1574, 1575,
     1574, 1574, 1574, 1574, 1574, 1574, 1691, 1574, 1692, 1693,
     1694, 1695, 1574, 1574, 1696, 1697, 1698, 1699, 1700, 1701,
     1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
     1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
     1574, 1574, 1574, 1722, 1723, 1724, 1725, 1726, 1727, 1727,
     1728, 1727, 1727, 1727, 1727, 1727, 1727, 1730, 1727, 1731,
     1732, 1733, 1734, 1727, 1727, 1735, 1736, 1737, 1738, 1739,
     1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
     1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,

     1760, 1727, 1727, 1727, 1761, 1762, 1763, 1764, 1765, 1766,
     1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
     1777, 1778, 1779, 1780, 1728, 1727, 1727, 1728, 1727, 1727,
     1727, 1727, 1727, 1727, 1781, 1727, 1782, 1783, 1784, 1785,
     1727, 1727, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1796,
     1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
     1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1727, 1727,
     1727, 1793, 1793, 1794, 1793, 1793, 1793, 1793, 1793, 1793,
     1815, 1793, 1816, 1817, 1818, 1819, 1793, 1793, 1820, 1821,
     1822, 1823, 1824, 1794, 1825, 1826, 1827, 1828, 1829, 1830,

     1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
     1841, 1842, 1843, 1844, 1793, 1793, 1793, 1793, 1793, 1794,
     1793, 1793, 1793, 1793, 1793, 1793, 1845, 1793, 1846, 1847,
     1848, 1849, 1793, 1793, 1850, 1851, 1852, 1853, 1854, 1855,
     1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
     1866, 1867,  146,  818,  817,  816,  815,  814,  813,  812,
     1793, 1793, 1793,   40,  811,   40,   40,   57,   57,   57,
       57,   59,   59,  141,  141,  141,  141,  143,  143,  143,
      143,  236,  236,  236,  236,  243,  243,  243,  243,  568,
      568,  568,  568,  570,  570,  570,  570,  753,  753,  753,

      753,  755,  755,  755,  755,  760,  760,  760,  760,  828,
      828,  828,  828,  941,  941,  941,  941,  943,  943,  943,
      943,  946,  946,  946,  946,  826,  826,  826,  826, 1182,
     1182, 1182, 1182, 1328, 1328, 1328, 1328, 1180, 1180, 1180,
     1180, 1326, 1326, 1326, 1326, 1573, 1573, 1573, 1573, 1576,
     1576, 1576, 1576, 1571, 1571, 1571, 1571, 1574, 1574, 1574,
     1574, 1729, 1729, 1729, 1729, 1727, 1727, 1727, 1727, 1795,
     1795, 1795, 1795, 1793, 1793, 1793, 1793,  810,  809,  808,
      807,  806,  805,  804,  803,  802,  801,  800,  799,  798,
      797,  796,  795,  794,  793,  792,  791,  790,  789,  788,

      787,  786,  785,  784,  783,  782,  781,  780,  779,  778,
      777,  776,  775,  774,  773,  772,  771,  770,  769,  768,
      767,  766,  765,  764,  763,  762,  761,  759,  758,  756,
      754,  571,  569,  752,  751,  750,  749,  748,  747,  746,
      745,  744,  743,  742,  741,  740,  739,  738,  737,  736,
      735,  734,  733,  732,  731,  730,  729,  728,  727,  726,
      725,  724,  723,  722,  721,  720,  719,  718,  717,  716,
      715,  714,  713,  712,  711,  710,  709,  708,  707,  706,
      705,  704,  703,  702,  701,  700,  699,  698,  697,  696,
      695,  694,  693,  692,  691,  690,  689,  688,  687,  686,

      685,  684,  683,  682,  681,  680,  679,  676,  672,  671,
      670,  669,  666,  665,  664,  663,  662,  661,  660,  659,
      658,  657,  656,  655,  654,  653,  652,  651,  650,  649,
      648,  647,  646,  645,  644,  643,  642,  641,  640,  639,
      638,  637,  636,  635,  634,  633,  632,  631,  630,  629,
      628,  627,  626,  625,  624,  623,  622,  621,  620,  619,
      618,  617,  616,  615,  614,  613,  612,  609,  606,  605,
      602,  601,  600,  599,  598,  597,  596,  595,  594,  593,
      592,  591,  590,  589,  588,  587,  586,  585,  584,  583,
      582,  581,  580,  579,  578,  577,  576,  575,  572,  571,

      569,  567,  560,  557,  556,  555,  549,  546,  545,  544,
      543,  542,  541,  530,  529,  528,  527,  521,  520,  519,
      518,  513,  512,  511,  510,  509,  508,  505,  504,  503,
      502,  501,  500,  499,  498,  497,  496,  495,  494,  493,
      492,  491,  490,  487,  480,  479,  470,  469,  468,  467,
      466,  465,  464,  463,  462,  456,  455,  454,  453,  450,
      449,  448,  447,  446,  445,  444,  443,  442,  438,  437,
      436,  435,  432,  431,  430,  429,  428,  427,  426,  425,
      424,  423,  422,  421,  420,  419,  413,  412,  411,  406,
      405,  404,  403,  402,  401,  400,  397,  396,  395,  394,

      393,  389,  388,  387,  142,  386,  385,  384,  237,  381,
      380,  379,  378,  363,  362,  361,  360,  359,  358,  357,
      356,  355,  354,  353,  352,  351,  350,  349,  338,  337,
      336,  335,  334,  333,  332,  331,  330,  327,  326,  325,
      324,  323,  322,  321,  320,  319,  318,  317,  316,  315,
      314,  313,  312,  311,  310,  307,  306,  305,  304,  303,
      302,  301,  290,  289,  281,  280,  279,  278,  277,  276,
      275,  274,  273,  272,  271,  270,  269,  268,  267,  266,
      252,  251,  250,  249,  248,  247,  246,  245,  144,  142,
      242,  241,  240,  235,  232,  231,  230,  229,  228,  227,

      226,  225,  224,  221,  220,  219,  218,  214,  213,  212,
      211,  210,  207,  202,  201,  196,  195,  194,  193,  192,
      191,  190,  189,  188,  187,  186,  185,  184,  181,  178,
      177,  176,  175,  174,  173,  172,  171,  166,  165,  164,
      161,  158,  157,  156,  155,  154,  153,  152,  151,  150,
      149,  148,  147,   58,  144,  142,  139,  138,  133,   40,
       41,   39,  107,   95,   58,   41,   39, 1868,    3, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,

     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868
    ) ;

yy_chk : constant array(0..2315) of Short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    8,    8,   25,   25,
       10,    8,   10,   10,   10,   10,   12,  204,    8,   25,
      204,   12,    8,   10,   11,   11,   11,   11,   43,   14,
       43,   14,   14,   14,   14,   11,   13,   17,   13,   13,
       13,   13,   14,   18,   90,   30,   17,   18,   17,   13,
       18,   22,   17,   20,   17,   90,   18,   20,   18,   22,

       27,   20,   27,   30,   20,   22,   33,   13,   19,   19,
       20,   20,   27,   23,   23,   19,   23,   92,   33,   19,
      639,   44,   19,   35,   26,   26,   19,   19,   21,   44,
       21,   92,   26,   21,   21,   21,   21,   29,   35,   74,
       74,   72,   26,   21,   26,   72,   79,  640,   31,   31,
       29,   31,   29,   21,   31,   29,   78,   21,   32,   32,
      106,   32,   21,   79,   31,   31,   34,  106,   78,  184,
       34,   32,  641,   32,   34,  111,  111,   32,   47,   47,
       47,   47,   48,  184,   48,   48,   48,   48,   49,   47,
       49,   49,   49,   49,  255,   48,  375,   50,  642,   50,

      255,   49,   50,   50,   50,   50,   51,   51,   51,   51,
       54,  375,   54,   54,   54,   54,   56,   51,   56,   56,
       56,   56,  124,   54,   83,   83,   83,   83,  107,   56,
       84,   84,   84,   84,  110,  113,  119,  134,  107,  136,
      113,  124,  239,  347,  110,  263,  134,  140,  140,  140,
      140,  142,  119,  263,  347,  643,  142,  238,  136,  119,
      145,  239,  145,  145,  145,  145,  298,  644,  136,  230,
      298,  249,  645,  145,  155,  230,  230,  238,  249,  155,
      155,  155,  155,  346,  155,  288,  264,  346,  288,  647,
      155,  155,  249,  155,  155,  155,  264,  155,  268,  155,

      172,  268,  321,  283,  288,  268,  648,  172,  339,  321,
      172,  339,  268,  283,  366,  268,  172,  172,  172,  359,
      368,  369,  172,  176,  369,  176,  359,  368,  649,  651,
      366,  368,  359,  373,  176,  176,  176,  176,  176,  176,
      359,  373,  176,  382,  176,  214,  214,  376,  214,  377,
      214,  415,  214,  383,  376,  214,  418,  214,  377,  415,
      214,  214,  418,  652,  382,  214,  231,  231,  231,  231,
      481,  231,  231,  383,  653,  303,  420,  231,  481,  420,
      231,  488,  231,  231,  303,  231,  654,  303,  303,  574,
      303,  316,  316,  655,  656,  316,  657,  488,  319,  658,

      316,  316,  316,  352,  352,  316,  319,  316,  659,  319,
      574,  319,  486,  486,  319,  319,  352,  660,  661,  486,
      663,  352,  358,  352,  662,  358,  358,  664,  665,  358,
      666,  358,  667,  662,  662,  358,  646,  646,  646,  646,
      646,  646,  646,  646,  646,  668,  646,  669,  670,  671,
      672,  646,  646,  673,  674,  675,  676,  677,  678,  679,
      680,  681,  682,  683,  684,  685,  686,  687,  688,  689,
      690,  691,  692,  693,  694,  695,  696,  697,  698,  646,
      646,  646,  699,  700,  701,  702,  703,  704,  705,  707,
      708,  709,  710,  711,  711,  712,  713,  714,  715,  716,

      717,  718,  719,  720,  721,  721,  722,  723,  724,  725,
      726,  727,  728,  729,  730,  731,  732,  733,  734,  735,
      736,  737,  738,  739,  740,  741,  740,  742,  743,  744,
      745,  746,  747,  748,  749,  750,  751,  740,  752,  753,
      740,  740,  740,  755,  757,  758,  759,  760,  762,  763,
      764,  765,  766,  767,  768,  769,  770,  771,  772,  774,
      775,  768,  776,  777,  778,  779,  781,  783,  784,  785,
      786,  787,  788,  777,  789,  768,  790,  791,  793,  795,
      796,  797,  798,  799,  800,  801,  802,  803,  804,  805,
      806,  807,  808,  809,  810,  811,  812,  813,  814,  803,

      816,  817,  818,  819,  820,  821,  822,  823,  825,  826,
      813,  828,  828,  828,  828,  828,  828,  828,  828,  828,
      829,  828,  830,  831,  832,  833,  828,  828,  834,  835,
      836,  837,  838,  839,  840,  841,  842,  843,  844,  845,
      846,  847,  848,  850,  851,  852,  853,  854,  855,  856,
      857,  858,  859,  860,  828,  828,  828,  861,  862,  863,
      864,  865,  866,  868,  869,  870,  871,  872,  873,  874,
      875,  876,  877,  878,  879,  880,  882,  883,  884,  885,
      886,  887,  888,  889,  890,  891,  880,  892,  893,  895,
      896,  897,  899,  900,  901,  902,  891,  903,  904,  905,

      906,  907,  908,  909,  901,  910,  911,  912,  914,  915,
      916,  917,  918,  919,  920,  921,  922,  923,  924,  925,
      926,  927,  925,  928,  929,  930,  929,  931,  932,  933,
      921,  924,  934,  935,  936,  937,  938,  939,  940,  941,
      943,  946,  948,  949,  950,  951,  952,  953,  954,  955,
      956,  957,  958,  959,  960,  961,  962,  963,  964,  965,
      966,  968,  969,  970,  971,  972,  973,  974,  976,  979,
      980,  981,  983,  984,  985,  986,  987,  988,  989,  990,
      991,  992,  993,  994,  995,  993,  996,  998,  999, 1000,
     1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011,

     1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1012, 1011,
     1014, 1015, 1016, 1017, 1011, 1011, 1020, 1021, 1022, 1023,
     1024, 1025, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1036,
     1037, 1038, 1039, 1040, 1041, 1043, 1046, 1047, 1048, 1049,
     1050, 1051, 1011, 1011, 1011, 1053, 1054, 1055, 1056, 1057,
     1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1056,
     1068, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079,
     1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1090, 1091,
     1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102,
     1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1110, 1111,

     1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
     1124, 1125, 1126, 1127, 1129, 1130, 1131, 1135, 1136, 1137,
     1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
     1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158,
     1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
     1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1179, 1178, 1180, 1183,
     1184, 1185, 1178, 1178, 1186, 1187, 1188, 1189, 1190, 1191,
     1192, 1194, 1195, 1196, 1197, 1198, 1199, 1178, 1200, 1201,
     1202, 1203, 1191, 1204, 1205, 1207, 1208, 1209, 1210, 1211,

     1178, 1178, 1178, 1182, 1182, 1182, 1182, 1182, 1182, 1182,
     1182, 1182, 1212, 1182, 1213, 1217, 1218, 1219, 1182, 1182,
     1220, 1221, 1222, 1223, 1224, 1225, 1228, 1229, 1230, 1231,
     1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
     1242, 1243, 1244, 1245, 1246, 1247, 1182, 1182, 1182, 1248,
     1249, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
     1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
     1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281,
     1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
     1292, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1304,

     1306, 1307, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317,
     1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328,
     1328, 1328, 1328, 1328, 1328, 1328, 1328, 1328, 1329, 1328,
     1330, 1331, 1332, 1333, 1328, 1328, 1336, 1337, 1338, 1339,
     1340, 1341, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351,
     1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362,
     1363, 1364, 1328, 1328, 1328, 1365, 1366, 1367, 1368, 1369,
     1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
     1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
     1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1401,

     1402, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1411, 1415,
     1418, 1419, 1402, 1420, 1421, 1422, 1423, 1424, 1425, 1427,
     1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
     1439, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1450, 1451,
     1452, 1453, 1454, 1457, 1458, 1459, 1460, 1460, 1460, 1460,
     1460, 1460, 1460, 1460, 1460, 1462, 1460, 1464, 1465, 1466,
     1467, 1460, 1460, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
     1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1486, 1487,
     1488, 1489, 1490, 1492, 1494, 1495, 1497, 1499, 1500, 1460,
     1460, 1460, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,

     1461, 1502, 1461, 1503, 1504, 1505, 1507, 1461, 1461, 1508,
     1509, 1510, 1511, 1512, 1513, 1516, 1518, 1519, 1522, 1523,
     1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534,
     1535, 1537, 1539, 1540, 1541, 1461, 1461, 1461, 1542, 1543,
     1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
     1556, 1557, 1559, 1561, 1563, 1564, 1565, 1567, 1569, 1570,
     1571, 1573, 1573, 1573, 1573, 1573, 1573, 1573, 1573, 1573,
     1574, 1573, 1577, 1578, 1579, 1580, 1573, 1573, 1581, 1582,
     1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593,
     1595, 1596, 1597, 1599, 1600, 1602, 1603, 1605, 1608, 1609,

     1610, 1612, 1614, 1615, 1573, 1573, 1573, 1576, 1576, 1576,
     1576, 1576, 1576, 1576, 1576, 1576, 1616, 1576, 1617, 1619,
     1620, 1621, 1576, 1576, 1622, 1623, 1624, 1625, 1626, 1627,
     1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1638, 1639,
     1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651,
     1576, 1576, 1576, 1652, 1654, 1655, 1656, 1657, 1660, 1660,
     1660, 1660, 1660, 1660, 1660, 1660, 1660, 1661, 1660, 1662,
     1663, 1664, 1665, 1660, 1660, 1666, 1667, 1668, 1669, 1671,
     1672, 1673, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683,
     1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1695, 1696,

     1697, 1660, 1660, 1660, 1698, 1699, 1700, 1701, 1702, 1703,
     1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1715, 1716,
     1718, 1719, 1720, 1723, 1727, 1729, 1729, 1729, 1729, 1729,
     1729, 1729, 1729, 1729, 1730, 1729, 1731, 1732, 1734, 1735,
     1729, 1729, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1748,
     1749, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
     1763, 1764, 1765, 1766, 1767, 1772, 1773, 1775, 1729, 1729,
     1729, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
     1776, 1744, 1777, 1779, 1780, 1782, 1744, 1744, 1786, 1787,
     1790, 1791, 1792, 1793, 1796, 1797, 1799, 1803, 1805, 1806,

     1807, 1808, 1809, 1810, 1811, 1812, 1814, 1816, 1817, 1819,
     1820, 1821, 1823, 1824, 1744, 1744, 1744, 1795, 1795, 1795,
     1795, 1795, 1795, 1795, 1795, 1795, 1825, 1795, 1827, 1828,
     1830, 1831, 1795, 1795, 1832, 1835, 1836, 1837, 1838, 1839,
     1840, 1841, 1842, 1849, 1850, 1853, 1856, 1857, 1859, 1860,
     1863, 1865, 1874,  638,  637,  636,  635,  634,  633,  632,
     1795, 1795, 1795, 1869,  631, 1869, 1869, 1870, 1870, 1870,
     1870, 1871, 1871, 1872, 1872, 1872, 1872, 1873, 1873, 1873,
     1873, 1875, 1875, 1875, 1875, 1876, 1876, 1876, 1876, 1877,
     1877, 1877, 1877, 1878, 1878, 1878, 1878, 1879, 1879, 1879,

     1879, 1880, 1880, 1880, 1880, 1881, 1881, 1881, 1881, 1882,
     1882, 1882, 1882, 1883, 1883, 1883, 1883, 1884, 1884, 1884,
     1884, 1885, 1885, 1885, 1885, 1886, 1886, 1886, 1886, 1887,
     1887, 1887, 1887, 1888, 1888, 1888, 1888, 1889, 1889, 1889,
     1889, 1890, 1890, 1890, 1890, 1891, 1891, 1891, 1891, 1892,
     1892, 1892, 1892, 1893, 1893, 1893, 1893, 1894, 1894, 1894,
     1894, 1895, 1895, 1895, 1895, 1896, 1896, 1896, 1896, 1897,
     1897, 1897, 1897, 1898, 1898, 1898, 1898,  630,  629,  628,
      627,  626,  625,  624,  623,  622,  621,  620,  619,  618,
      617,  616,  615,  613,  612,  611,  610,  609,  608,  607,

      606,  605,  604,  603,  602,  601,  599,  597,  596,  595,
      594,  593,  592,  591,  590,  589,  588,  587,  586,  585,
      584,  582,  581,  580,  579,  578,  577,  576,  575,  573,
      572,  570,  568,  567,  566,  565,  564,  563,  562,  561,
      560,  559,  558,  557,  556,  555,  554,  553,  552,  551,
      550,  549,  548,  547,  546,  545,  544,  543,  541,  540,
      539,  538,  537,  536,  535,  534,  533,  532,  531,  530,
      529,  528,  527,  526,  525,  524,  523,  522,  520,  519,
      518,  517,  516,  515,  514,  513,  512,  511,  510,  509,
      508,  507,  506,  504,  503,  502,  500,  499,  498,  497,

      496,  495,  493,  492,  491,  490,  489,  487,  485,  484,
      483,  482,  479,  478,  477,  476,  475,  474,  473,  472,
      471,  470,  469,  468,  467,  466,  465,  464,  463,  461,
      460,  459,  458,  457,  455,  454,  453,  452,  451,  450,
      449,  448,  447,  446,  445,  444,  443,  442,  441,  440,
      439,  438,  437,  436,  435,  434,  433,  432,  431,  430,
      429,  428,  427,  426,  425,  423,  422,  419,  417,  416,
      414,  413,  412,  411,  410,  409,  408,  407,  406,  405,
      404,  403,  402,  401,  400,  399,  398,  397,  396,  394,
      392,  391,  390,  388,  387,  386,  385,  384,  381,  380,

      379,  378,  374,  372,  371,  370,  367,  365,  364,  363,
      362,  361,  360,  356,  355,  354,  353,  351,  350,  349,
      348,  345,  344,  343,  342,  341,  340,  338,  337,  336,
      335,  334,  333,  332,  331,  329,  328,  327,  326,  325,
      324,  323,  322,  320,  318,  317,  315,  314,  313,  310,
      309,  308,  307,  306,  304,  302,  301,  300,  299,  297,
      296,  295,  294,  293,  292,  291,  290,  289,  287,  286,
      285,  284,  282,  281,  280,  279,  278,  277,  276,  275,
      274,  273,  272,  271,  270,  269,  267,  266,  265,  262,
      261,  260,  259,  258,  257,  256,  254,  253,  252,  251,

      250,  248,  247,  246,  243,  242,  241,  240,  236,  235,
      234,  233,  232,  229,  228,  227,  226,  225,  224,  223,
      222,  221,  220,  219,  218,  217,  216,  215,  213,  212,
      211,  210,  209,  208,  207,  206,  205,  203,  202,  201,
      199,  198,  197,  196,  195,  194,  193,  192,  191,  190,
      189,  188,  187,  186,  185,  183,  182,  181,  180,  179,
      178,  177,  174,  173,  171,  170,  169,  168,  167,  166,
      165,  164,  163,  162,  161,  160,  159,  158,  157,  156,
      154,  153,  152,  151,  150,  149,  147,  146,  143,  141,
      139,  138,  137,  135,  133,  132,  131,  130,  129,  128,

      127,  126,  125,  123,  122,  121,  120,  118,  117,  116,
      115,  114,  112,  109,  108,  105,  104,  103,  102,  101,
      100,   99,   98,   97,   96,   95,   94,   93,   91,   89,
       88,   87,   86,   85,   82,   81,   80,   77,   76,   75,
       73,   71,   70,   69,   68,   67,   66,   65,   64,   63,
       62,   61,   60,   57,   53,   52,   46,   45,   42,   41,
       40,   39,   28,   24,   15,    7,    5,    3, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,

     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868
    ) ;


-- copy whatever the last rule matched to the standard output

procedure ECHO is
begin
   if Text_IO.is_open(user_output_file) then
     Text_IO.put( user_output_file, yytext );
   else
     Text_IO.put( yytext );
   end if;
end ECHO;

-- enter a start condition.
-- Using procedure requires a () after the ENTER, but makes everything
-- much neater.

procedure ENTER( state : integer ) is
begin
     yy_start := 1 + 2 * state;
end ENTER;

-- action number for EOF rule of a given start state
function YY_STATE_EOF(state : integer) return integer is
begin
     return YY_END_OF_BUFFER + state + 1;
end YY_STATE_EOF;

-- return all but the first 'n' matched characters back to the input stream
procedure yyless(n : integer) is
begin
        yy_ch_buf(yy_cp) := yy_hold_char; -- undo effects of setting up yytext
        yy_cp := yy_bp + n;
        yy_c_buf_p := yy_cp;
        YY_DO_BEFORE_ACTION; -- set up yytext again
end yyless;

-- redefine this if you have something you want each time.
procedure YY_USER_ACTION is
begin
        null;
end;

-- yy_get_previous_state - get the state just before the EOB char was reached

function yy_get_previous_state return yy_state_type is
    yy_current_state : yy_state_type;
    yy_c : short;
begin
    yy_current_state := yy_start;

    for yy_cp in yytext_ptr..yy_c_buf_p - 1 loop
	yy_c := yy_ec(yy_ch_buf(yy_cp));
	if yy_accept(yy_current_state) /= 0 then
	    yy_last_accepting_state := yy_current_state;
	    yy_last_accepting_cpos := yy_cp;
	end if;
	while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
	    yy_current_state := yy_def(yy_current_state);
	    if ( yy_current_state >= 1869 ) then
		yy_c := yy_meta(yy_c);
	    end if;
	end loop;
	yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
    end loop;

    return yy_current_state;
end yy_get_previous_state;

procedure yyrestart( input_file : file_type ) is
begin
   open_input(Text_IO.name(input_file));
end yyrestart;

begin -- of YYLex
<<new_file>>
        -- this is where we enter upon encountering an end-of-file and
        -- yywrap() indicating that we should continue processing

    if yy_init then
        if yy_start = 0 then
            yy_start := 1;      -- first start state
        end if;

        -- we put in the '\n' and start reading from [1] so that an
        -- initial match-at-newline will be true.

        yy_ch_buf(0) := ASCII.LF;
        yy_n_chars := 1;

        -- we always need two end-of-buffer characters. The first causes
        -- a transition to the end-of-buffer state. The second causes
        -- a jam in that state.

        yy_ch_buf(yy_n_chars) := YY_END_OF_BUFFER_CHAR;
        yy_ch_buf(yy_n_chars + 1) := YY_END_OF_BUFFER_CHAR;

        yy_eof_has_been_seen := false;

        yytext_ptr := 1;
        yy_c_buf_p := yytext_ptr;
        yy_hold_char := yy_ch_buf(yy_c_buf_p);
        yy_init := false;
-- UMASS CODES :
--   Initialization
        tok_begin_line := 1;
        tok_end_line := 1;
        tok_begin_col := 0;
        tok_end_col := 0;
        token_at_end_of_line := false;
        line_number_of_saved_tok_line1 := 0;
        line_number_of_saved_tok_line2 := 0;
-- END OF UMASS CODES.
    end if; -- yy_init

    loop                -- loops until end-of-file is reached

-- UMASS CODES :
--    if last matched token is end_of_line, we must
--    update the token_end_line and reset tok_end_col.
    if Token_At_End_Of_Line then
      Tok_End_Line := Tok_End_Line + 1;
      Tok_End_Col := 0;
      Token_At_End_Of_Line := False;
    end if;
-- END OF UMASS CODES.

        yy_cp := yy_c_buf_p;

        -- support of yytext
        yy_ch_buf(yy_cp) := yy_hold_char;

        -- yy_bp points to the position in yy_ch_buf of the start of the
        -- current run.
	yy_bp := yy_cp;
	yy_current_state := yy_start;
	loop
		yy_c := yy_ec(yy_ch_buf(yy_cp));
		if yy_accept(yy_current_state) /= 0 then
		    yy_last_accepting_state := yy_current_state;
		    yy_last_accepting_cpos := yy_cp;
		end if;
		while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
		    yy_current_state := yy_def(yy_current_state);
		    if ( yy_current_state >= 1869 ) then
			yy_c := yy_meta(yy_c);
		    end if;
		end loop;
		yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
	    yy_cp := yy_cp + 1;
if ( yy_current_state = 1868 ) then
    exit;
end if;
	end loop;
	yy_cp := yy_last_accepting_cpos;
	yy_current_state := yy_last_accepting_state;

<<next_action>>
	    yy_act := yy_accept(yy_current_state);
            YY_DO_BEFORE_ACTION;
            YY_USER_ACTION;

        if aflex_debug then  -- output acceptance info. for (-d) debug mode
            Text_IO.put( Standard_Error, "--accepting rule #" );
            Text_IO.put( Standard_Error, INTEGER'IMAGE(yy_act) );
            Text_IO.put_line( Standard_Error, "(""" & yytext & """)");
        end if;

-- UMASS CODES :
--   Update tok_begin_line, tok_end_line, tok_begin_col and tok_end_col
--   after matching the token.
        if yy_act /= YY_END_OF_BUFFER and then yy_act /= 0 then
-- Token are matched only when yy_act is not yy_end_of_buffer or 0.
          Tok_Begin_Line := Tok_End_Line;
          Tok_Begin_Col := Tok_End_Col + 1;
          Tok_End_Col := Tok_Begin_Col + yy_cp - yy_bp - 1;
          if yy_ch_buf ( yy_bp ) = ASCII.LF then
            Token_At_End_Of_Line := True;
          end if;
        end if;
-- END OF UMASS CODES.

<<do_action>>   -- this label is used only to access EOF actions
            case yy_act is
		when 0 => -- must backtrack
		-- undo the effects of YY_DO_BEFORE_ACTION
		yy_ch_buf(yy_cp) := yy_hold_char;
		yy_cp := yy_last_accepting_cpos;
		yy_current_state := yy_last_accepting_state;
		goto next_action;



-- /* ... */ -style comments
when 1 => 
--# line 55 "rc.l"

         RC_Help.RC_Comment(YYText(3..YYLength-2));
         

-- // -style comment -> skip rest of line.
when 2 => 
--# line 60 "rc.l"

         RC_Help.RC_Comment(YYText);
                      linenum:= linenum + 1;
         

when 3 => 
--# line 65 "rc.l"
 return BAR_t; 

when 4 => 
--# line 66 "rc.l"
 return COMMA_t; 

when 5 => 
--# line 67 "rc.l"
 return LBRACE_t; 

when 6 => 
--# line 68 "rc.l"
 return RBRACE_t; 

when 7 => 
--# line 69 "rc.l"
 return C_INCLUDE_t; 

when 8 => 
--# line 70 "rc.l"
 return NOT_t; 

-----------
-- Noise --
-----------
when 9 => 
--# line 76 "rc.l"
 null;  -- skip rest of line - was  return C_CRAP_t; 

when 10 => 
--# line 77 "rc.l"
 null; 

when 11 => 
--# line 78 "rc.l"
 null; 

when 12 => 
--# line 79 "rc.l"
 null; 

when 13 => 
--# line 80 "rc.l"
 null; 

when 14 => 
--# line 81 "rc.l"
 null; 

when 15 => 
--# line 82 "rc.l"
 null; 

when 16 => 
--# line 83 "rc.l"
 null; 

when 17 => 
--# line 84 "rc.l"
 null; 

---------------
-- Resources --
---------------
when 18 => 
--# line 90 "rc.l"
 return DIALOG_t; 

when 19 => 
--# line 91 "rc.l"
 return DIALOGEX_t; 

when 20 => 
--# line 92 "rc.l"
 return MENU_t; 

when 21 => 
--# line 93 "rc.l"
 return DLGINCLUDE_t; 

when 22 => 
--# line 94 "rc.l"
 return TEXTINCLUDE_t; 

when 23 => 
--# line 95 "rc.l"
 return GUIDELINES_t; 

when 24 => 
--# line 96 "rc.l"
 return DESIGNINFO_t; 

when 25 => 
--# line 97 "rc.l"
 return RT_MANIFEST_t;     

when 26 => 
--# line 98 "rc.l"
 return MOVEABLE_t; 

when 27 => 
--# line 99 "rc.l"
 return PURE_t; 

when 28 => 
--# line 100 "rc.l"
 return FIXED_t; 

when 29 => 
--# line 101 "rc.l"
 return PRELOAD_t; 

when 30 => 
--# line 102 "rc.l"
 return DISCARDABLE_t; 

when 31 => 
--# line 103 "rc.l"
 return LANGUAGE_t; 

when 32 => 
--# line 104 "rc.l"
 return STYLE_t; 

when 33 => 
--# line 105 "rc.l"
 return EXSTYLE_t; 

when 34 => 
--# line 106 "rc.l"
 return CAPTION_t; 

when 35 => 
--# line 107 "rc.l"
 return CLASS_t; 

when 36 => 
--# line 108 "rc.l"
 return FONT_t; 

when 37 => 
--# line 109 "rc.l"
 return LTEXT_t; 

when 38 => 
--# line 110 "rc.l"
 return CTEXT_t; 

when 39 => 
--# line 111 "rc.l"
 return RTEXT_t; 

when 40 => 
--# line 113 "rc.l"
 return BEGIN_t; 

when 41 => 
--# line 114 "rc.l"
 return END_t; 

when 42 => 
--# line 116 "rc.l"
 return CONTROL_t; 

when 43 => 
--# line 117 "rc.l"
 return EDITTEXT_t; 

when 44 => 
--# line 118 "rc.l"
 return COMBOBOX_t; 

when 45 => 
--# line 119 "rc.l"
 return GROUPBOX_t; 

when 46 => 
--# line 120 "rc.l"
 return LISTBOX_t; 

when 47 => 
--# line 122 "rc.l"
 return RADIOBUTTON_t; 

when 48 => 
--# line 123 "rc.l"
 return AUTORADIOBUTTON_t; 

when 49 => 
--# line 125 "rc.l"
 return CHECKBOX_t; 

when 50 => 
--# line 126 "rc.l"
 return AUTOCHECKBOX_t; 

when 51 => 
--# line 127 "rc.l"
 return AUTO3STATE_t; 

when 52 => 
--# line 128 "rc.l"
 return STATE3_t; 

when 53 => 
--# line 130 "rc.l"
 return PUSHBUTTON_t; 

when 54 => 
--# line 131 "rc.l"
 return DEFPUSHBUTTON_t; 

when 55 => 
--# line 133 "rc.l"
 return SCROLLBAR_t; 

-----------
-- Menus --
-----------
when 56 => 
--# line 138 "rc.l"
 return CHECKED_t; 

when 57 => 
--# line 139 "rc.l"
 return GRAYED_t; 

when 58 => 
--# line 140 "rc.l"
 return HELP_t; 

when 59 => 
--# line 141 "rc.l"
 return INACTIVE_t; 

when 60 => 
--# line 142 "rc.l"
 return MENUBARBREAK_t; 

when 61 => 
--# line 143 "rc.l"
 return MENUBREAK_t; 

when 62 => 
--# line 144 "rc.l"
 return MENUITEM_t; 

when 63 => 
--# line 145 "rc.l"
 return POPUP_t; 

when 64 => 
--# line 146 "rc.l"
 return SEPARATOR_t; 

------------------
-- Accelerators --
------------------
when 65 => 
--# line 151 "rc.l"
 return ACCELERATORS_t; 

when 66 => 
--# line 152 "rc.l"
 return CHARACTERISTICS_t; 

when 67 => 
--# line 153 "rc.l"
 return VERSION_t; 

when 68 => 
--# line 154 "rc.l"
 return ASCII_t; 

when 69 => 
--# line 155 "rc.l"
 return VIRTKEY_t; 

when 70 => 
--# line 156 "rc.l"
 return NOINVERT_t; 

when 71 => 
--# line 157 "rc.l"
 return ALT_t; 

when 72 => 
--# line 158 "rc.l"
 return SHIFT_t; 

--------------
-- Versions --
--------------
when 73 => 
--# line 164 "rc.l"
 return VERSIONINFO_t; 

when 74 => 
--# line 165 "rc.l"
 return FILEVERSION_t; 

when 75 => 
--# line 166 "rc.l"
 return PRODUCTVERSION_t; 

when 76 => 
--# line 167 "rc.l"
 return FILEFLAGSMASK_t; 

when 77 => 
--# line 168 "rc.l"
 return FILEFLAGS_t; 

when 78 => 
--# line 169 "rc.l"
 return FILEOS_t; 

when 79 => 
--# line 170 "rc.l"
 return FILETYPE_t; 

when 80 => 
--# line 171 "rc.l"
 return FILESUBTYPE_t; 

when 81 => 
--# line 172 "rc.l"
 return BLOCK_t; 

when 82 => 
--# line 173 "rc.l"
 return VALUE_t; 

-------------------
-- Graphic items --
-------------------
when 83 => 
--# line 178 "rc.l"
 return ICON_t; 

when 84 => 
--# line 179 "rc.l"
 return BITMAP_t; 

when 85 => 
--# line 180 "rc.l"
 return CURSOR_t; 

--------------
-- Toolbars --
--------------
when 86 => 
--# line 185 "rc.l"
 return TOOLBAR_t; 

when 87 => 
--# line 186 "rc.l"
 return BUTTON_t; 

when 88 => 
--# line 187 "rc.l"
 return SEPARATOR_t; 

when 89 => 
--# line 189 "rc.l"
 return STRINGTABLE_t; 

------------------
-- Window Class --
------------------
when 90 => 
--# line 194 "rc.l"
 return ANIMATE_CLASS_t; 

when 91 => 
--# line 195 "rc.l"
 return DATETIMEPICK_CLASS_t; 

when 92 => 
--# line 196 "rc.l"
 return MONTHCAL_CLASS_t; 

when 93 => 
--# line 197 "rc.l"
 return PROGRESS_CLASS_t; 

when 94 => 
--# line 198 "rc.l"
 return TRACKBAR_CLASS_t; 

when 95 => 
--# line 199 "rc.l"
 return UPDOWN_CLASS_t; 

when 96 => 
--# line 200 "rc.l"
 return WC_LISTVIEW_t; 

when 97 => 
--# line 201 "rc.l"
 return WC_TABCONTROL_t; 

when 98 => 
--# line 202 "rc.l"
 return WC_TREEVIEW_t; 

when 99 => 
--# line 203 "rc.l"
 return WC_STATIC_t; 

------------
-- Styles --
------------
-- Window style
when 100 => 
--# line 210 "rc.l"
 return WS_BORDER_t; 

when 101 => 
--# line 211 "rc.l"
 return WS_CAPTION_t; 

when 102 => 
--# line 212 "rc.l"
 return WS_CHILD_t; 

when 103 => 
--# line 213 "rc.l"
 return WS_CLIPCHILDREN_t; 

when 104 => 
--# line 214 "rc.l"
 return WS_CLIPSIBLINGS_t; 

when 105 => 
--# line 215 "rc.l"
 return WS_DISABLED_t; 

when 106 => 
--# line 216 "rc.l"
 return WS_DLGFRAME_t; 

when 107 => 
--# line 217 "rc.l"
 return WS_GROUP_t; 

when 108 => 
--# line 218 "rc.l"
 return WS_HSCROLL_t; 

when 109 => 
--# line 219 "rc.l"
 return WS_MINIMIZEBOX_t; 

when 110 => 
--# line 220 "rc.l"
 return WS_MAXIMIZEBOX_t; 

when 111 => 
--# line 221 "rc.l"
 return WS_POPUP_t; 

when 112 => 
--# line 222 "rc.l"
 return WS_SIZEBOX_t; 

when 113 => 
--# line 223 "rc.l"
 return WS_SYSMENU_t; 

when 114 => 
--# line 224 "rc.l"
 return WS_TABSTOP_t; 

when 115 => 
--# line 225 "rc.l"
 return WS_VISIBLE_t; 

when 116 => 
--# line 226 "rc.l"
 return WS_VSCROLL_t; 

when 117 => 
--# line 227 "rc.l"
 return WS_THICKFRAME_t; 

-- Dialog style
when 118 => 
--# line 230 "rc.l"
 return DS_3DLOOK_t; 

when 119 => 
--# line 231 "rc.l"
 return DS_CENTER_t; 

when 120 => 
--# line 232 "rc.l"
 return DS_CENTERMOUSE_t; 

when 121 => 
--# line 233 "rc.l"
 return DS_CONTROL_t; 

when 122 => 
--# line 234 "rc.l"
 return DS_FIXEDSYS_t; 

when 123 => 
--# line 235 "rc.l"
 return DS_LOCALEDIT_t; 

when 124 => 
--# line 236 "rc.l"
 return DS_MODALFRAME_t; 

when 125 => 
--# line 237 "rc.l"
 return DS_NOIDLEMSG_t; 

when 126 => 
--# line 238 "rc.l"
 return DS_SETFOREGROUND_t; 

when 127 => 
--# line 239 "rc.l"
 return DS_CONTEXTHELP_t; 

when 128 => 
--# line 240 "rc.l"
 return DS_SHELLFONT_t; 

when 129 => 
--# line 241 "rc.l"
 return DS_SETFONT_t; 

when 130 => 
--# line 242 "rc.l"
 return DS_SYSMODAL_t; 

-- Static styles
when 131 => 
--# line 245 "rc.l"
 return SS_BITMAP_t; 

when 132 => 
--# line 246 "rc.l"
 return SS_BLACKFRAME_t; 

when 133 => 
--# line 247 "rc.l"
 return SS_BLACKRECT_t; 

when 134 => 
--# line 248 "rc.l"
 return SS_CENTERIMAGE_t; 

when 135 => 
--# line 249 "rc.l"
 return SS_ENDELLIPSIS_t; 

when 136 => 
--# line 250 "rc.l"
 return SS_GRAYFRAME_t; 

when 137 => 
--# line 251 "rc.l"
 return SS_GRAYRECT_t; 

when 138 => 
--# line 252 "rc.l"
 return SS_ICON_t; 

when 139 => 
--# line 253 "rc.l"
 return SS_LEFT_t; 

when 140 => 
--# line 254 "rc.l"
 return SS_LEFTNOWORDWRAP_t; 

when 141 => 
--# line 255 "rc.l"
 return SS_NOPREFIX_t; 

when 142 => 
--# line 256 "rc.l"
 return SS_REALSIZEIMAGE_t; 

when 143 => 
--# line 257 "rc.l"
 return SS_RIGHT_t; 

when 144 => 
--# line 258 "rc.l"
 return SS_SIMPLE_t; 

when 145 => 
--# line 259 "rc.l"
 return SS_SUNKEN_t; 

when 146 => 
--# line 260 "rc.l"
 return SS_WHITERECT_t; 

-- Edit styles
when 147 => 
--# line 263 "rc.l"
 return ES_AUTOHSCROLL_t; 

when 148 => 
--# line 264 "rc.l"
 return ES_AUTOVSCROLL_t; 

when 149 => 
--# line 265 "rc.l"
 return ES_CENTER_t; 

when 150 => 
--# line 266 "rc.l"
 return ES_LEFT_t; 

when 151 => 
--# line 267 "rc.l"
 return ES_MULTILINE_t; 

when 152 => 
--# line 268 "rc.l"
 return ES_NUMBER_t; 

when 153 => 
--# line 269 "rc.l"
 return ES_OEMCONVERT_t; 

when 154 => 
--# line 270 "rc.l"
 return ES_PASSWORD_t; 

when 155 => 
--# line 271 "rc.l"
 return ES_READONLY_t; 

when 156 => 
--# line 272 "rc.l"
 return ES_RIGHT_t; 

when 157 => 
--# line 273 "rc.l"
 return ES_UPPERCASE_t; 

when 158 => 
--# line 274 "rc.l"
 return ES_WANTRETURN_t; 

-- Box/Button styles
when 159 => 
--# line 277 "rc.l"
 return BS_3STATE_t; 

when 160 => 
--# line 278 "rc.l"
 return BS_AUTO3STATE_t; 

when 161 => 
--# line 279 "rc.l"
 return BS_AUTOCHECKBOX_t; 

when 162 => 
--# line 280 "rc.l"
 return BS_AUTORADIOBUTTON_t; 

when 163 => 
--# line 281 "rc.l"
 return BS_BITMAP_t; 

when 164 => 
--# line 282 "rc.l"
 return BS_BOTTOM_t; 

when 165 => 
--# line 283 "rc.l"
 return BS_CENTER_t; 

when 166 => 
--# line 284 "rc.l"
 return BS_DEFPUSHBUTTON_t; 

when 167 => 
--# line 285 "rc.l"
 return BS_FLAT_t; 

when 168 => 
--# line 286 "rc.l"
 return BS_LEFT_t; 

when 169 => 
--# line 287 "rc.l"
 return BS_LEFTTEXT_t; 

when 170 => 
--# line 288 "rc.l"
 return BS_MULTILINE_t; 

when 171 => 
--# line 289 "rc.l"
 return BS_OWNERDRAW_t; 

when 172 => 
--# line 290 "rc.l"
 return BS_PUSHBUTTON_t; 

when 173 => 
--# line 291 "rc.l"
 return BS_PUSHLIKE_t; 

when 174 => 
--# line 292 "rc.l"
 return BS_RADIOBUTTON_t; 

when 175 => 
--# line 293 "rc.l"
 return BS_RIGHT_t; 

when 176 => 
--# line 294 "rc.l"
 return BS_TEXT_t; 

when 177 => 
--# line 295 "rc.l"
 return BS_TOP_t; 

when 178 => 
--# line 296 "rc.l"
 return BS_VCENTER_t; 

-- Combo-box styles
when 179 => 
--# line 299 "rc.l"
 return CBS_AUTOHSCROLL_t; 

when 180 => 
--# line 300 "rc.l"
 return CBS_SIMPLE_t; 

when 181 => 
--# line 301 "rc.l"
 return CBS_DISABLENOSCROLL_t; 

when 182 => 
--# line 302 "rc.l"
 return CBS_DROPDOWN_t; 

when 183 => 
--# line 303 "rc.l"
 return CBS_DROPDOWNLIST_t; 

when 184 => 
--# line 304 "rc.l"
 return CBS_HASSTRINGS_t; 

when 185 => 
--# line 305 "rc.l"
 return CBS_OWNERDRAWFIXED_t; 

when 186 => 
--# line 306 "rc.l"
 return CBS_SORT_t; 

-- Listbox styles
when 187 => 
--# line 309 "rc.l"
 return LBS_DISABLENOSCROLL_t; 

when 188 => 
--# line 310 "rc.l"
 return LBS_EXTENDEDSEL_t; 

when 189 => 
--# line 311 "rc.l"
 return LBS_HASSTRINGS_t; 

when 190 => 
--# line 312 "rc.l"
 return LBS_MULTIPLESEL_t; 

when 191 => 
--# line 313 "rc.l"
 return LBS_MULTICOLUMN_t; 

when 192 => 
--# line 314 "rc.l"
 return LBS_NOINTEGRALHEIGHT_t; 

when 193 => 
--# line 315 "rc.l"
 return LBS_NOSEL_t; 

when 194 => 
--# line 316 "rc.l"
 return LBS_NOTIFY_t; 

when 195 => 
--# line 317 "rc.l"
 return LBS_OWNERDRAWFIXED_t; 

when 196 => 
--# line 318 "rc.l"
 return LBS_SORT_t; 

when 197 => 
--# line 319 "rc.l"
 return LBS_USETABSTOPS_t; 

-- Progress bar styles
when 198 => 
--# line 322 "rc.l"
 return PBS_VERTICAL_t;

-- Scrollbar styles
when 199 => 
--# line 325 "rc.l"
 return SBS_VERT_t; 

-- Trackbar styles
when 200 => 
--# line 328 "rc.l"
 return TBS_AUTOTICKS_t; 

when 201 => 
--# line 329 "rc.l"
 return TBS_BOTTOM_t; 

when 202 => 
--# line 330 "rc.l"
 return TBS_BOTH_t; 

when 203 => 
--# line 331 "rc.l"
 return TBS_NOTICKS_t; 

when 204 => 
--# line 332 "rc.l"
 return TBS_VERT_t; 

when 205 => 
--# line 333 "rc.l"
 return TBS_TOP_t; 

when 206 => 
--# line 334 "rc.l"
 return TBS_TOOLTIPS_t; 

-- Up-down styles
when 207 => 
--# line 337 "rc.l"
 return UDS_HORZ_t; 

when 208 => 
--# line 338 "rc.l"
 return UDS_ARROWKEYS_t; 

when 209 => 
--# line 339 "rc.l"
 return UDS_WRAP_t; 

when 210 => 
--# line 340 "rc.l"
 return UDS_NOTHOUSANDS_t; 

-- Listview styles
when 211 => 
--# line 343 "rc.l"
 return LVS_AUTOARRANGE_t; 

when 212 => 
--# line 344 "rc.l"
 return LVS_ALIGNLEFT_t; 

when 213 => 
--# line 345 "rc.l"
 return LVS_ICON_t; 

when 214 => 
--# line 346 "rc.l"
 return LVS_LIST_t; 

when 215 => 
--# line 347 "rc.l"
 return LVS_NOSORTHEADER_t; 

when 216 => 
--# line 348 "rc.l"
 return LVS_REPORT_t; 

when 217 => 
--# line 349 "rc.l"
 return LVS_SHOWSELALWAYS_t; 

when 218 => 
--# line 350 "rc.l"
 return LVS_SINGLESEL_t; 

when 219 => 
--# line 351 "rc.l"
 return LVS_SORTASCENDING_t; 

-- Treeview styles
when 220 => 
--# line 354 "rc.l"
 return TVS_EDITLABELS_t; 

when 221 => 
--# line 355 "rc.l"
 return TVS_INFOTIP_t; 

when 222 => 
--# line 356 "rc.l"
 return TVS_HASBUTTONS_t; 

when 223 => 
--# line 357 "rc.l"
 return TVS_HASLINES_t; 

when 224 => 
--# line 358 "rc.l"
 return TVS_LINESATROOT_t; 

when 225 => 
--# line 359 "rc.l"
 return TVS_NOSCROLL_t; 

when 226 => 
--# line 360 "rc.l"
 return TVS_NOTOOLTIPS_t; 

when 227 => 
--# line 361 "rc.l"
 return TVS_SHOWSELALWAYS_t; 

-- Date time picker styles
when 228 => 
--# line 364 "rc.l"
 return DTS_RIGHTALIGN_t; 

-- Month calendar styles
when 229 => 
--# line 367 "rc.l"
 return MCS_NOTODAY_t; 

-- Tab Control Styles
when 230 => 
--# line 370 "rc.l"
 return TCS_HOTTRACK_t; 

-- Grid Styles
when 231 => 
--# line 373 "rc.l"
 return GS_COLUMNLABELS_t; 

when 232 => 
--# line 374 "rc.l"
 return GS_READONLY_t; 

-- Extended styles
when 233 => 
--# line 378 "rc.l"
 return WS_EX_ACCEPTFILES_t; 

when 234 => 
--# line 379 "rc.l"
 return WS_EX_APPWINDOW_t; 

when 235 => 
--# line 380 "rc.l"
 return WS_EX_CLIENTEDGE_t; 

when 236 => 
--# line 381 "rc.l"
 return WS_EX_CONTEXTHELP_t; 

when 237 => 
--# line 382 "rc.l"
 return WS_EX_CONTROLPARENT_t; 

when 238 => 
--# line 383 "rc.l"
 return WS_EX_NOPARENTNOTIFY_t; 

when 239 => 
--# line 384 "rc.l"
 return WS_EX_RIGHT_t; 

when 240 => 
--# line 385 "rc.l"
 return WS_EX_STATICEDGE_t; 

when 241 => 
--# line 386 "rc.l"
 return WS_EX_TOOLWINDOW_t; 

when 242 => 
--# line 387 "rc.l"
 return WS_EX_TOPMOST_t; 

when 243 => 
--# line 388 "rc.l"
 return WS_EX_TRANSPARENT_t; 

-- Misc --
when 244 => 
--# line 391 "rc.l"
 return IDC_STATIC_t; 

when 245 => 
--# line 393 "rc.l"
 yylval.intval := 0; return NUMBER; 

when 246 => 
--# line 394 "rc.l"
 yylval.intval := 1; return NUMBER; 

when 247 => 
--# line 396 "rc.l"
 yylval.intval   := 0;
                   yylval.floatval := 0.0;
                   return NUMBER;
                 

when 248 => 
--# line 401 "rc.l"
 begin
                     yylval.intval := Long_Long_Integer'Value(yytext);
                   exception
                     when Constraint_Error =>
                      -- declare
                      --   msg: constant String:=
                      --    "Error with integer ? [" & yytext & ']';
                      -- begin
                      --   Put_Line(Standard_Error, msg);
                      --   raise Constraint_Error with msg;
                      -- end;
                      yylval.intval := -1;
                      -- not nice at all, but a >2**31 number
                      -- seems to appear only at top (some checksum)
                   end;
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 249 => 
--# line 419 "rc.l"
 yylval.intval := Long_Long_Integer'Value("8#"&yytext&'#');
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 250 => 
--# line 423 "rc.l"

                   yylval.floatval := Long_Float'Value(yytext);
                   return FLOAT_t;
                   

when 251 => 
--# line 428 "rc.l"
 declare
                     hexa_c: String:= yytext;
                     hexa_last: Integer:= hexa_c'Last;
                   begin
                     if hexa_c(hexa_last)='L' then
                       hexa_last:= hexa_last - 1;
                     end if;
                     yylval.intval := Long_Long_Integer'Value("16#" & hexa_c(hexa_c'First+2 .. hexa_last) & '#');
                     yylval.floatval:= Long_Float( yylval.intval );
                     return NUMBER;
                   end;
                

when 252 => 
--# line 441 "rc.l"
return RCString; -- borrowed from ada95.l

-- Doesn't work with double quotes
-- \"({NOTGUIL})*\"    {return RCString;}
when 253 => 
--# line 446 "rc.l"
return INCString;

when 254 => 
--# line 448 "rc.l"
 return IDENT_t; 

when 255 => 
--# line 451 "rc.l"
 null; -- \t  ;

when 256 => 
--# line 452 "rc.l"
linenum:= linenum+1;

when 257 => 
--# line 454 "rc.l"
 null; -- ??
                     -- C: return *yytext;
                   

-- "("                { return '('; }
-- ")"                { return ')'; }
-- "}"                { return '}'; }
-- "{"                { return '{'; }
when 258 => 
--# line 462 "rc.l"
ECHO;
when YY_END_OF_BUFFER + INITIAL + 1 => 
    return End_Of_Input;
                when YY_END_OF_BUFFER =>
                    -- undo the effects of YY_DO_BEFORE_ACTION
                    yy_ch_buf(yy_cp) := yy_hold_char;

                    yytext_ptr := yy_bp;

                    case yy_get_next_buffer is
                        when EOB_ACT_END_OF_FILE =>
                            begin
                            if yywrap then
                                -- note: because we've taken care in
                                -- yy_get_next_buffer() to have set up yytext,
                                -- we can now set up yy_c_buf_p so that if some
                                -- total hoser (like aflex itself) wants
                                -- to call the scanner after we return the
                                -- End_Of_Input, it'll still work - another
                                -- End_Of_Input will get returned.

                                yy_c_buf_p := yytext_ptr;

                                yy_act := YY_STATE_EOF((yy_start - 1) / 2);

                                goto do_action;
                            else
                                --  start processing a new file
                                yy_init := true;
                                goto new_file;
                            end if;
                            end;
                        when EOB_ACT_RESTART_SCAN =>
                            yy_c_buf_p := yytext_ptr;
                            yy_hold_char := yy_ch_buf(yy_c_buf_p);
                        when EOB_ACT_LAST_MATCH =>
                            yy_c_buf_p := yy_n_chars;
                            yy_current_state := yy_get_previous_state;

                            yy_cp := yy_c_buf_p;
                            yy_bp := yytext_ptr;
                            goto next_action;
                        when others => null;
                        end case; -- case yy_get_next_buffer()
                when others =>
                    Text_IO.put( "action # " );
                    Text_IO.put( INTEGER'IMAGE(yy_act) );
                    Text_IO.new_line;
                    raise AFLEX_INTERNAL_ERROR;
            end case; -- case (yy_act)
        end loop; -- end of loop waiting for end of file
end YYLex;
--# line 462 "rc.l"
