--  Warning: This lexical scanner is automatically generated by AFLEX.
--           It is useless to modify it. Change the ".Y" & ".L" files instead.
with Text_IO; use Text_IO;
with rc_dfa; use rc_dfa; 
with rc_io; use rc_io; 
--# line 1 "rc.l"
--------------------------------------------------------------------------
--  RC.l
--
--  Resource Compiler script lexer file (AFLEX)
--
--  Copyright (c) Gautier de Montmollin 2008..2009
--  SWITZERLAND
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
-- NB: this is the MIT License, as found 28-Jul-2008 on the site
-- http://www.opensource.org/licenses/mit-license.php
--------------------------------------------------------------------------
--
-- Change log:
--
-- 30-Apr-2009 GdM: Some additions for matching ResEdit 1.4.4.19 suppl. tags
-- ...
-- 28-Jul-2008 GdM: Created
--
--# line 52 "rc.l"


with RC_Tokens; use RC_Tokens;
with RC_Help;   use RC_Help;

function YYLex return Token is
subtype Short is Integer range -32768..32767;
    yy_act : Integer;
    yy_c   : Short;

-- returned upon end-of-file
YY_END_TOK : constant Integer := 0;
YY_END_OF_BUFFER : constant := 283;
subtype yy_state_type is Integer;
yy_current_state : yy_state_type;
INITIAL : constant := 0;
yy_accept : constant array(0..2061) of Short :=
    (   0,
      274,  274,  283,  282,  279,  280,  282,  282,    4,  274,
      274,  282,  271,  272,  282,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,    5,    3,    6,  279,    0,
      276,    0,    0,    0,    0,    0,  274,  274,  272,    0,
      274,    0,    0,  273,    0,  272,    0,  277,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,    0,  274,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,    0,    0,    0,    0,    0,    0,    0,
      274,    0,    0,    0,    2,  273,  275,  278,   72,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,   42,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,    8,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,    0,    0,    0,    0,    0,   11,    0,
        0,    0,    0,    0,    0,    1,  275,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,   37,  278,
      278,  278,  278,  278,   59,   84,  278,  278,  278,  278,
      278,  278,  278,  278,  278,   20,  278,  278,  278,  278,
      278,  278,  278,  278,   27,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  269,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  278,  278,   69,  278,  278,  278,   41,  278,

       82,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
       36,  278,  278,   39,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  270,  278,  278,  278,
      278,  278,   29,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,   38,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,   64,  278,  278,
      278,  278,  278,  278,   40,  278,  278,  278,   73,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,   33,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,   83,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,    0,    0,   15,
        0,   14,    0,    0,    0,    0,    0,    0,  278,  278,

      278,  278,  278,   85,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  188,  278,   88,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,   86,  278,
      278,  278,   18,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,   58,  278,  278,  278,  278,
      278,   28,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,   53,  101,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,    0,    0,   16,    0,   11,    0,    0,    0,    0,

       10,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  176,  175,  177,  278,  278,  278,  278,
      278,  278,  187,  278,   35,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,   57,  278,   43,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  156,  278,
      278,  278,  278,  278,  278,  278,  278,  278,   34,  278,
        0,   79,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,   47,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,   30,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      143,  144,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  219,  278,  278,  278,  278,   87,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,   68,
       70,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

        0,    9,    0,   11,    7,    0,   17,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  185,  278,
      278,  278,  278,  278,  278,  278,  197,  278,  278,   50,
       45,  278,  278,  278,   19,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,   44,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  163,
      278,  278,  278,  278,  278,  278,   46,  278,  278,  278,
      278,   60,   32,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  209,  278,  278,  278,  278,  231,  232,  278,

      278,  278,  278,  278,  278,  278,  278,  278,   63,  278,
       26,   71,  278,  278,  278,  278,  278,  278,  278,  213,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  149,  278,  278,  278,  278,  278,  216,
      278,  278,  278,  218,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  223,  278,  278,  225,  278,  278,  278,  278,
      278,  278,  278,  278,  104,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  109,
      278,  278,  278,  278,  114,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  166,  278,  278,  278,
      170,  171,  172,  278,  278,  278,  278,  180,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  121,  122,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  155,  278,  278,  159,  278,  278,  278,  278,
      278,  278,  278,    0,   80,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  206,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,   62,  278,  278,  278,  278,  278,  278,  278,

      278,   56,   65,  134,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  147,  278,  150,  151,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  100,  278,  278,  102,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,   52,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  189,  278,  278,  278,  278,  278,  191,

      278,  278,  278,  278,   24,  278,   21,  278,  278,  124,
      278,  278,  278,  278,  132,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,    0,   78,
      278,  278,  278,  278,  278,  278,   23,  268,  278,  278,
      278,  278,  278,  278,  278,  207,  278,  278,  278,  278,
      278,  278,  278,  235,  278,  278,  278,  278,  278,  278,
      211,  278,  278,  278,   54,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  215,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,  278,  103,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  110,  278,  278,  278,  115,
      116,  117,  278,  118,  119,  278,  278,  278,  278,  278,
      278,  278,  173,  278,  178,  278,  278,  278,  183,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
       31,  278,  278,  125,  278,  278,  278,  278,  278,  133,
      278,  278,  278,  278,  278,  278,  161,  162,  278,  278,
      278,  278,  278,  278,  255,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  251,  278,  278,  278,  278,  278,   48,   25,
      278,  278,  278,  278,  278,  278,  278,  142,  278,  146,
      278,  278,   90,  278,  217,  278,  253,  278,   22,  278,
      278,  278,  278,  278,  241,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,   74,   97,  278,
       99,  278,  278,  107,  108,  278,  278,  278,  278,  278,
      278,  278,  263,  278,  278,  278,  278,  278,  278,  278,
      278,   66,  278,   51,  278,  278,  278,  278,  278,  179,
      181,  278,  278,  278,  278,  278,  193,  278,  278,  278,
      278,  278,  278,  278,  278,  126,  278,  128,  278,  131,

      278,  278,  278,  157,  158,  278,  164,  278,  278,    0,
       81,  278,    0,   75,  278,  278,  278,  278,  278,  278,
      278,  278,  205,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,   61,  278,  212,  278,  278,  278,  136,
      278,  278,  278,  278,  141,  278,  278,  152,  278,  220,
      252,  278,  278,  278,  278,  243,  278,  245,  278,  278,
      278,  278,  278,  278,  278,  278,  278,   96,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,   91,  278,  167,  278,
      278,  278,  182,  278,  278,  278,  278,  278,  278,  278,

      198,  278,  278,   55,  278,  278,  127,  278,  278,  278,
      278,  160,  165,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  229,  278,  278,  278,  278,  278,  237,
      278,  278,  278,  278,  135,  278,  278,  139,  140,  278,
      278,  214,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  224,  222,  278,  278,   98,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  266,  278,
      278,  278,  113,  120,  278,  278,  278,  278,  184,  186,
      278,  278,  278,  195,  278,  278,  278,  123,  130,  278,
      250,  153,  154,    0,   77,  278,  278,  278,  278,  201,

      278,  278,  278,  278,  278,  278,  230,  278,  278,  278,
      278,   93,  278,   94,  137,  138,  278,  278,   95,  278,
      240,  242,  278,  246,  278,  278,  278,  221,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  112,  111,   49,  168,  278,  278,  190,  278,
      278,  278,   67,  278,  278,  254,  278,  200,  203,  202,
      278,  278,  210,  228,  278,  278,  278,  278,    0,   76,
      278,  278,  278,  278,  244,  278,  278,  249,  226,  227,
      105,  106,  278,  257,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  174,  278,  194,  278,  278,  129,  278,

      278,  278,  278,  234,  278,  278,  278,  148,  278,  278,
      248,  278,  258,  278,  278,  278,  278,  264,  265,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  236,  238,
      145,  278,  247,  256,  259,  278,  278,  278,  267,  169,
      278,  196,   92,  278,  278,  208,  233,  278,  278,  278,
      278,  192,  199,  278,  239,  260,  261,  278,  204,  262,
        0
    ) ;

yy_ec : constant array(ASCII.NUL..Character'Last) of short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   13,
       14,   13,   13,   13,   13,   15,   15,    1,    1,   16,
        1,   17,    1,    1,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       28,   35,   36,   37,   38,   39,   40,   41,   42,   43,
        1,    1,    1,    1,   18,    1,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   28,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,    1,    1, others=> 1

    ) ;

yy_meta : constant array(0..46) of short :=
    (   0,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        1,    4,    4,    4,    4,    1,    1,    3,    4,    4,
        4,    4,    4,    4,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    1,    1,    1
    ) ;

yy_base : constant array(0..2091) of Short :=
    (   0,
        0,    0, 2461, 2462, 2458, 2462, 2455,   25, 2462,   41,
       53,   51,   67,   60, 2441,    0,   57,   61,   90,   75,
      122,   73,   79, 2434,  111,  120,   80, 2423,  118,   67,
      129,  141,   27,   99,  109, 2462, 2462, 2462, 2453, 2450,
     2449, 2429,   28,  136, 2416, 2418,  158,  172,  178,  190,
      194, 2443, 2445,  200,    0,  206, 2430, 2462,    0, 2425,
     2408, 2417, 2422, 2405, 2416, 2403, 2406, 2420, 2400, 2402,
     2399,  102, 2415,  146, 2410, 2397, 2394,   83,  105, 2405,
     2411, 2392,  212,  218, 2400, 2404, 2407, 2388, 2393,   55,
     2390,  150, 2403, 2393, 2389, 2385, 2396, 2382, 2396, 2382,

     2377, 2376, 2388, 2374, 2373, 2376,  157,  201, 2371, 2372,
      211,  200, 2383,  219, 2368, 2368, 2368, 2374, 2382,  220,
     2363, 2362, 2356, 2363,   31, 2359, 2358, 2371, 2362, 2356,
     2355, 2371, 2370, 2363,  213, 2364,  219, 2364, 2365, 2361,
      233, 2376,  246, 2378, 2462,  246, 2350, 2356,    0, 2347,
     2350, 2343, 2348, 2343, 2352,  256, 2335, 2334, 2352, 2334,
     2347, 2331, 2346, 2328, 2323, 2327, 2339, 2327, 2333, 2329,
     2337, 2330,  282, 2338, 2318,    0,  300, 2317, 2317, 2329,
     2328, 2313, 2307, 2310,  229, 2325, 2312, 2313, 2326, 2305,
     2321, 2316, 2322, 2302, 2297, 2319, 2318, 2297, 2297, 2310,

     2300,    0, 2313, 2292, 2299,  241, 2305, 2301, 2299, 2294,
     2283, 2305, 2289, 2302, 2296,  321, 2282, 2291, 2287, 2298,
     2297, 2277, 2283, 2291, 2288, 2292, 2291, 2275, 2269, 2270,
     2268,  235,  342, 2277, 2279, 2279, 2274, 2297, 2462,  250,
      145, 2269, 2273, 2274, 2290, 2462, 2462, 2265, 2275, 2266,
      280, 2260, 2272, 2261, 2253, 2250,  167,  256, 2264, 2256,
     2264, 2261, 2245, 2249, 2241, 2242,  265,  274, 2258, 2245,
     2250,  333, 2257, 2246, 2238, 2240, 2237, 2234, 2237, 2232,
     2230, 2242, 2233, 2246, 2232, 2241,  275, 2235, 2228, 2227,
     2226,  294, 2223, 2220, 2218, 2232, 2231, 2215,  266, 2229,

     2232,  152, 2216, 2230, 2206, 2224,  350, 2224,    0, 2222,
     2210, 2210, 2219, 2218,    0,    0, 2204, 2204, 2201, 2199,
      368, 2216, 2198,  388, 2202,  247, 2207, 2213, 2192,  266,
     2196, 2196, 2190, 2192,    0, 2206, 2192, 2205, 2186, 2183,
     2191, 2185, 2182,  295, 2195,  279, 2182, 2195, 2192, 2181,
      258,  216, 2187,  300, 2180, 2188,  373,  317, 2183, 2189,
     2179,    0,  403,  377, 2167, 2183, 2178, 2175, 2176, 2165,
      291, 2168,  328,  350, 2159, 2164, 2162,  389, 2158, 2163,
      282,  369,  392, 2163, 2191, 2190, 2168,  325,  347, 2153,
     2159, 2165, 2165, 2150,    0, 2150, 2159, 2165,    0, 2149,

        0, 2145, 2144, 2143, 2142, 2146, 2154, 2152, 2156, 2141,
     2149, 2142, 2134, 2138, 2133, 2146, 2142, 2125, 2131, 2141,
     2131, 2129, 2123,  387, 2141, 2119,  312, 2124, 2136,  362,
        0, 2136, 2122,    0, 2119, 2126, 2116, 2119, 2125, 2114,
     2127, 2117, 2114, 2113, 2103, 2122, 2120, 2114, 2103, 2116,
     2102, 2110, 2113, 2098, 2102, 2109, 2102, 2105, 2099, 2098,
     2092, 2108, 2101, 2091, 2092, 2093,    0, 2092, 2085, 2082,
     2077, 2095,    0, 2095, 2096, 2085, 2095, 2083, 2075, 2088,
     2083, 2090, 2081, 2066, 2087, 2067, 2071, 2063, 2069, 2065,
     2067,    0,  404, 2077, 2077, 2070, 2063, 2072,  405, 2061,

      402, 2056, 2071, 2071, 2067, 2058, 2065,    0, 2068, 2065,
     2062, 2046, 2063, 2050,    0, 2058, 2050, 2060,    0, 2041,
     2058, 2044, 2053, 2053, 2054, 2039, 2047,  407, 2051, 2044,
     2037, 2035, 2039, 2051, 2043, 2038,    0, 2024, 2028, 2027,
     2026, 2035, 2019, 2023, 2023, 2035, 2033, 2025, 2029, 2031,
     2017, 2021, 2014,  371, 2011,  413, 2012, 2011, 2020, 2007,
     2009,    0, 2007, 2016, 2002, 2018, 2016, 2012, 1999, 1999,
     2005, 2004, 1994, 2004, 2010, 1994, 2005, 1984, 1992, 2000,
     1988, 1978, 1984, 1999, 1991, 1981, 1995, 1992, 2011, 2462,
     2010, 2462, 2009, 2008,  433, 1988, 1990, 2005, 1972, 1983,

     1968, 1981, 1981,    0, 1983, 1968, 1969, 1962, 1961, 1976,
     1962, 1958, 1962, 1956, 1955, 1964, 1967, 1963, 1961, 1961,
     1949,    0, 1953,    0, 1952, 1946, 1946, 1948, 1944, 1947,
     1947, 1942, 1942, 1938, 1941, 1951, 1939, 1941,    0, 1939,
     1943, 1941, 1944, 1944, 1935, 1931, 1926,   34,  123,  179,
      192,  246,  276,  299,  329,  347,  343,  369,  390,  408,
      409,  420,  429,  429,  416,  431,  428,  432,  419,  435,
      440,  459,  449,  437,  437,    0,  440,  436,  455,  451,
      460,    0,  441,  456,  446,  446,  448,  455,  459,  455,
      453,  466,  449,  464,  455,  466,  464,  462,  478,  466,

      468,  470,  471,  470,  473,  486,  487,  492,  482,  478,
      482,  481,  495,  481,  483,  483,  483,  495,  488,  504,
      488,  495,  506,  491,  506,  504,  489,  500,  496,  499,
      508,  506,  511,  504,  510,  503,    0,    0,  504,  505,
      506,  507,  512,  512,  511,  512,  529,  516,  533,  517,
      527,  519,  532,  525,  522,  527,  529,  543,  536,  529,
      528,  531,  530,  531,  550,  552,  539,  530,  536,  537,
      554,  553,  555,  541,  549,  546,  562,  558,  564,  546,
      552,  561,  562,  555,  553,  569,  562,  558,  574,  570,
      563,  599,  600, 2462,  601, 2462,  602,  583,  604,  605,

     2462,  590,  592,  592,  591,  586,  577,  601,  597,  584,
      595,  590,  582,    0,    0,  584,  596,  600,  590,  607,
      593,  591,    0,  592,    0,  597,  612,  598,  597,  611,
      601,  601,  616,  617,  600,    0,  601,    0,  620,  624,
      613,  605,  628,  610,  616,  627,  628,  630,  623,  624,
      625,  623,  627,  625,  633,  623,  635,  639,    0,  637,
      643,  643,  634,  628,  636,  633,  636,  637,    0,  648,
      672, 2462,  675,  648,  664,  652,  648,  659,  660,  662,
      658,  673,  674,  679,  676,  664,  664,  670,  680,  681,
      678,  683,  670,  671,    0,  684,  677,  674,  680,  676,

      681,  682,  683,  677,  693,  685,  690,  704,  706,  695,
      697,  705,  692,  697,  694,    0,  693,  697,  697,  698,
      712,  700,  719,  706,  721,  712,  719,  713,  721,  721,
        0,  714,  724,  724,  713,  713,  721,  729,  730,  735,
      722,  731,  731,  729,    0,  723,  724,  725,  733,    0,
      729,  746,  729,  747,  736,  747,  750,  739,  733,  749,
      754,  751,  745,  746,  737,  755,  762,  749,  763,  758,
        0,  747,  760,  755,  750,  767,  764,  770,  772,  774,
      760,  775,  767,  768,  766,  774,  765,  770,  770,  773,
      776,  779,  781,  778,  793,  791,  778,  787,  797,  785,

      816, 2462,  817, 2462, 2462,  818, 2462,  785,  802,  787,
      796,  793,  804,  792,  803,  811,  797,  801,  798,  814,
      799,  813,  807,  796,  817,  802,  814,  822,  823,  821,
      819,  826,  825,  811,  814,  820,    0,  816,  817,    0,
        0,  819,  816,  831,    0,  836,  835,  829,  824,  819,
      828,  826,  840,  840,  842,  834,  843,  846,  833,    0,
      835,  836,  838,  844,  852,  841,  845,  845,  847,    0,
      859,  858,  846,  841,  883,  866,    0,  863,  864,  874,
      871,    0,    0,  881,  870,  866,  877,  868,  884,  877,
      884,  874,    0,  891,  879,  893,  883,    0,    0,  884,

      880,  881,  881,  888,  900,  898,  886,  893,    0,  905,
        0,    0,  887,  898,  903,  912,  898,  895,  910,    0,
      899,  900,  902,  913,  903,  909,  918,  906,  919,  910,
      920,  903,  919,    0,  924,  917,  915,  931,  915,    0,
      920,  933,  918,    0,  923,  922,  920,  941,  940,  931,
      924,  936,  927,  929,  931,  934,  932,  939,  941,  939,
      932,  953,    0,  941,  937,    0,  946,  945,  951,  958,
      948,  954,  947,  950,    0,  958,  958,  956,  968,  967,
      955,  963,  959,  967,  959,  969,  976,  963,  979,    0,
      969,  973,  974,  983,    0,  970,  972,  972,  982,  977,

      978,  976,  980,  988,  992,  993,    0,  977,  992,  994,
        0,    0,    0,  984,  992,  978,  993,    0,  986,  985,
      994,  986,  987,  991,  991,  998,  996,  995, 1009, 1009,
     1012, 1007, 1008,  999, 1004, 1008, 1016,    0, 1009, 1004,
     1012, 1001, 1022, 1010, 1015, 1010, 1025, 1016, 1031, 1032,
     1031, 1032,    0, 1027, 1019,    0, 1017, 1022, 1028, 1040,
     1023, 1060, 1036, 1069, 2462, 1106, 1040, 1044, 1045, 1042,
     1058, 1050, 1059, 1047, 1062, 1061, 1050,    0, 1044, 1065,
     1068, 1059, 1055, 1073, 1055, 1057, 1058, 1074, 1075, 1063,
     1081, 1078,    0, 1081, 1077, 1095, 1083, 1098, 1088, 1088,

     1088,    0,    0,    0, 1090, 1103, 1100, 1101, 1103, 1111,
     1110, 1092, 1106,    0, 1091,    0,    0, 1112, 1106, 1110,
     1107, 1110, 1113, 1109, 1124, 1122, 1124, 1116, 1128, 1111,
     1117, 1126, 1135, 1122, 1126, 1134, 1135, 1123, 1125, 1132,
     1124, 1125, 1142, 1146, 1142, 1144,    0, 1131, 1146,    0,
     1138, 1144, 1152, 1150, 1143, 1152, 1136, 1154, 1141, 1148,
     1161, 1155, 1145, 1153, 1153, 1153, 1156, 1144, 1145, 1155,
     1149, 1153, 1158, 1158, 1171, 1165, 1161, 1178,    0, 1165,
     1161, 1181, 1180, 1175, 1162, 1184, 1168, 1174, 1188, 1171,
     1186, 1173, 1174,    0, 1191, 1190, 1174, 1188, 1181,    0,

     1198, 1182, 1198, 1183,    0, 1198,    0, 1189, 1197,    0,
     1188, 1198, 1207, 1191,    0, 1203, 1197, 1200, 1201, 1197,
     1198, 1202, 1212, 1213, 1215, 1196, 1203, 1202, 1238, 2462,
     1241, 1232, 1230, 1222, 1236, 1214,    0,    0, 1236, 1237,
     1234, 1229, 1233, 1239, 1246,    0, 1231, 1231, 1245, 1234,
     1250, 1240, 1246,    0, 1243, 1238, 1254, 1234, 1258, 1248,
        0, 1260, 1244, 1251,    0, 1250, 1246, 1265, 1267, 1258,
     1256, 1258, 1269, 1262, 1257, 1262, 1255, 1274, 1277, 1276,
     1279,    0, 1265, 1268, 1267, 1283, 1282, 1276, 1284, 1288,
     1272, 1287, 1277, 1275, 1283, 1277, 1285, 1293, 1294, 1291,

     1296, 1298, 1285, 1300, 1287, 1291, 1285, 1291, 1287,    0,
     1298, 1299, 1308, 1308, 1298, 1306, 1302, 1312, 1303, 1302,
     1301, 1312, 1300, 1308, 1306,    0, 1320, 1321, 1311,    0,
        0,    0, 1327,    0,    0, 1312, 1313, 1309, 1314, 1315,
     1324, 1321,    0, 1317,    0, 1333, 1317, 1325,    0, 1322,
     1323, 1326, 1330, 1331, 1332, 1346, 1330, 1330, 1339, 1336,
        0, 1332, 1348,    0, 1335, 1342, 1349, 1340, 1339,    0,
     1350, 1345, 1346, 1357, 1351, 1347,    0,    0, 1360, 1349,
     1349, 1385, 1431, 1375,    0, 1365, 1376, 1367, 1370, 1380,
     1369, 1365, 1387, 1370, 1384, 1390, 1387, 1379, 1389, 1394,

     1391, 1392,    0, 1387, 1398, 1388, 1392, 1401,    0,    0,
     1390, 1385, 1404, 1388, 1390, 1391, 1404,    0, 1393,    0,
     1414, 1406,    0, 1415,    0, 1409,    0, 1417,    0, 1430,
     1428, 1428, 1419, 1417,    0, 1419, 1425, 1429, 1438, 1417,
     1429, 1435, 1419, 1440, 1444, 1422, 1429,    0,    0, 1433,
        0, 1445, 1441,    0,    0, 1432, 1438, 1434, 1431, 1440,
     1452, 1455,    0, 1458, 1453, 1445, 1448, 1463, 1464, 1462,
     1455,    0, 1451,    0, 1451, 1466, 1470, 1471, 1455,    0,
        0, 1461, 1461, 1462, 1463, 1464, 1468, 1474, 1460, 1478,
     1475, 1485, 1472, 1469, 1476,    0, 1484,    0, 1475,    0,

     1484, 1480, 1481,    0,    0, 1475,    0, 1481, 1485, 1512,
     2462, 1515, 1522, 2462, 1561, 1504, 1495, 1493, 1505, 1495,
     1498, 1516,    0, 1496, 1504, 1501, 1507, 1510, 1515, 1523,
     1513, 1514, 1513,    0, 1510,    0, 1514, 1512, 1526,    0,
     1525, 1524, 1509, 1516,    0, 1532, 1524,    0, 1520,    0,
        0, 1521, 1523, 1541, 1541,    0, 1541,    0, 1541, 1546,
     1545, 1557, 1555, 1546, 1541, 1552, 1558,    0, 1556, 1552,
     1556, 1565, 1568, 1568, 1555, 1563, 1575, 1563, 1573, 1565,
     1561, 1580, 1567, 1568, 1580, 1580,    0, 1571,    0, 1575,
     1571, 1573,    0, 1579, 1580, 1583, 1578, 1588, 1580, 1593,

        0, 1597, 1598,    0, 1597, 1587,    0, 1584, 1591, 1594,
     1595,    0,    0, 1625, 1605, 1601, 1615, 1603, 1609, 1620,
     1614, 1621, 1612,    0, 1622, 1612, 1626, 1628, 1611,    0,
     1630, 1617, 1622, 1619,    0, 1633, 1621,    0,    0, 1618,
     1640,    0, 1624, 1642, 1626, 1627, 1631, 1629, 1626, 1648,
     1647, 1635,    0,    0, 1651, 1642,    0, 1652, 1651, 1650,
     1645, 1657, 1654, 1647, 1652, 1646, 1662, 1663,    0, 1651,
     1646, 1647,    0,    0, 1657, 1649, 1654, 1659,    0,    0,
     1663, 1673, 1659,    0, 1669, 1661, 1668,    0,    0, 1667,
        0,    0,    0, 1697, 2462, 1700, 1674, 1691, 1683,    0,

     1682, 1685, 1692, 1692, 1684, 1698,    0, 1703, 1700, 1705,
     1698,    0, 1746,    0,    0,    0, 1691, 1702,    0, 1703,
        0,    0, 1692,    0, 1711, 1699, 1695,    0, 1697, 1697,
     1703, 1700, 1707, 1698, 1714, 1717, 1722, 1718, 1711, 1731,
     1725, 1736,    0,    0,    0,    0, 1723, 1729,    0, 1729,
     1728, 1725,    0, 1748, 1746,    0, 1734,    0,    0,    0,
     1747, 1730,    0,    0, 1750, 1738, 1732, 1743, 1773, 2462,
     1792, 1758, 1755, 1757,    0, 1738, 1759,    0,    0,    0,
        0,    0, 1759,    0, 1760, 1754, 1750, 1751, 1754, 1765,
     1749, 1770, 1771,    0, 1772,    0, 1783, 1771,    0, 1777,

     1784, 1789, 1790,    0, 1778, 1790, 1782,    0, 1782, 1782,
        0, 1783,    0, 1786, 1798, 1803, 1786,    0,    0, 1787,
     1793, 1796, 1805, 1792, 1799, 1805, 1809, 1797,    0,    0,
        0, 1800,    0,    0,    0, 1802, 1804, 1812,    0,    0,
     1810,    0,    0, 1811, 1816,    0,    0, 1809, 1807, 1822,
     1822,    0,    0, 1810,    0,    0,    0, 1806,    0,    0,
     2462, 1848, 1852, 1854, 1858, 1862, 1846, 1866, 1870, 1874,
     1878, 1882, 1886, 1890, 1894, 1898, 1902, 1906, 1910, 1914,
     1918, 1922, 1926, 1930, 1934, 1938, 1942, 1946, 1950, 1954,
     1958

    ) ;

yy_def : constant array(0..2091) of Short :=
    (   0,
     2061,    1, 2061, 2061, 2061, 2061, 2062, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2063, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2061, 2061, 2061, 2061, 2062,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2065, 2066, 2061, 2067, 2061, 2063, 2061, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2061, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2061, 2061, 2061, 2068, 2061, 2061, 2061,
     2061, 2065, 2069, 2066, 2061, 2061, 2067, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2061, 2061, 2061, 2061, 2068, 2061, 2068,
     2068, 2061, 2061, 2061, 2065, 2061, 2061, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2061, 2070, 2071, 2061, 2068, 2068, 2061,
     2061, 2061, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2061, 2070, 2061,
     2071, 2061, 2072, 2073, 2068, 2061, 2061, 2074, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2075, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2076, 2072, 2061, 2073, 2061, 2077, 2061, 2078, 2074,

     2061, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2079, 2061, 2075, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2076, 2061, 2077, 2061, 2061, 2078, 2061, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2080, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2081, 2064, 2082, 2061, 2080, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2083, 2061,
     2081, 1431, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     1431, 2084, 2085, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 1431, 2086,
     2061, 2084, 2087, 2061, 2085, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2088, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2089, 2061, 2088, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2090, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2091, 2061,
     2090, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,

     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064, 2064,
        0, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061

    ) ;

yy_nxt : constant array(0..2508) of Short :=
    (   0,
        4,    5,    6,    7,    8,    4,    4,    9,   10,   11,
       12,   13,   14,   14,   14,   15,    4,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   25,   16,   16,   26,
       27,   28,   16,   29,   30,   31,   32,   33,   34,   35,
       16,   16,   16,   36,   37,   38,   42,   43,  127,  224,
       47,   44,   48,   49,   49,   49,   52,  135,   45,  136,
      128,   53,   46,   50,   51,   51,   51,   51,  225,   47,
      847,   56,   56,   56,   56,   50,   47,   60,   48,   54,
       54,   48,   50,   65,  180,  113,   61,   66,   62,   50,
       67,   89,   63,   77,   64,  181,   68,   78,   69,   90,

      105,   79,  106,  114,   80,   91,  168,   55,   70,   71,
       81,   82,  107,   92,   93,   72,   94,  129,  169,   73,
      160,  130,   74,  170,  161,  131,   75,   76,   83,  132,
       83,   96,   97,   84,   84,   84,   84,  109,  100,  101,
      171,   98,   99,   85,  133,  848,  102,  239,  115,  116,
      110,  117,  111,   86,  118,  112,  103,   87,  104,  137,
      121,  122,   88,  123,  119,  120,  389,  138,  183,   51,
       51,   51,   51,  124,  462,  125,  163,  164,  463,  126,
       50,   47,  184,   48,   48,   48,   48,   47,  199,   56,
       56,   56,   56,  404,   50,  200,   83,  849,   83,  405,

       50,  141,  141,  141,  141,   51,   51,   51,   51,   47,
      850,  146,  146,  146,   48,   47,   50,   56,   56,   56,
       56,  239,   50,  141,  141,  141,  141,  201,   50,   84,
       84,   84,   84,  205,  207,  208,  210,  202,  217,  235,
      240,  211,  531,  206,  141,  141,  141,  141,  236,  312,
      241,  143,  239,  532,  218,   47,  246,  146,  146,  146,
       48,  219,  333,  313,  369,  334,  501,  851,   50,  255,
      370,  371,  388,  502,  256,  257,  258,  259,  406,  260,
      529,  407,  261,  416,  530,  262,  263,  264,  265,  266,
      267,  417,  268,  396,  269,  286,  418,  443,  458,  852,

      397,  506,  287,  459,  507,  288,  419,  444,  582,  567,
      523,  289,  290,  291,  398,  524,  449,  292,  295,  450,
      296,  520,  534,  583,  521,  568,  535,  239,  853,  297,
      298,  299,  300,  301,  302,  451,  543,  303,  631,  304,
      344,  345,  544,  346,  632,  347,  570,  348,  594,  239,
      349,  423,  350,  571,  424,  351,  352,  572,  425,  854,
      353,  372,  373,  374,  375,  426,  376,  377,  427,  595,
      428,  855,  378,  468,  379,  380,  573,  381,  382,  574,
      383,  635,  469,  856,  636,  470,  471,  584,  472,  483,
      484,  538,  539,  485,  585,  556,  756,  757,  486,  487,

      488,  857,  557,  489,  540,  490,  493,  578,  558,  541,
      494,  542,  559,  627,  495,  579,  560,  496,  586,  497,
      705,  628,  498,  499,  548,  549,  858,  587,  550,  551,
      701,  702,  552,  694,  553,  239,  706,  703,  554,  555,
      730,  695,  759,  731,  859,  860,  861,  760,  862,  863,
      761,  864,  865,  866,  867,  868,  797,  869,  870,  871,
      871,  872,  871,  871,  871,  871,  871,  871,  874,  871,
      875,  876,  877,  878,  871,  871,  879,  880,  881,  882,
      883,  884,  885,  886,  887,  888,  892,  893,  894,  895,
      896,  897,  898,  889,  890,  891,  899,  900,  901,  903,

      904,  905,  871,  871,  871,  906,  907,  908,  909,  910,
      911,  912,  913,  902,  914,  915,  916,  917,  918,  919,
      920,  921,  922,  923,  924,  925,  926,  927,  928,  929,
      930,  931,  932,  933,  934,  935,  936,  937,  938,  939,
      940,  941,  942,  943,  944,  945,  946,  947,  948,  949,
      950,  951,  952,  953,  954,  955,  956,  957,  958,  959,
      960,  961,  962,  963,  964,  965,  966,  967,  968,  969,
      970,  971,  972,  973,  974,  975,  976,  977,  978,  979,
      980,  981,  982,  989,  983,  984,  990,  991,  992,  993,
      994,  995,  996,  997,  998,  985,  999, 1000,  986,  987,

      988, 1002,  794,  796, 1004, 1005, 1007,  801, 1008, 1009,
     1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021,
     1022, 1015, 1023, 1024, 1025, 1028, 1026, 1029, 1030, 1031,
     1032, 1033, 1034, 1035, 1036, 1016, 1027, 1037, 1038, 1039,
     1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
     1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
     1061, 1063, 1051, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
     1071, 1072, 1073, 1062,  872,  871,  871,  872,  871,  871,
      871,  871,  871,  871, 1074,  871, 1075, 1076, 1077, 1078,
      871,  871, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,

     1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
     1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,  871,  871,
      871, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
     1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
     1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134,
     1135, 1136, 1137, 1138, 1139, 1129, 1140, 1142, 1143, 1144,
     1145, 1146, 1147, 1148, 1149, 1150, 1151, 1141, 1153, 1154,
     1155, 1156, 1157, 1158, 1159, 1160, 1152, 1161, 1162, 1163,
     1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
     1174, 1175, 1176, 1178, 1179, 1180, 1182, 1184, 1185, 1183,

     1186, 1187, 1188, 1190, 1189, 1191, 1192, 1177, 1181, 1193,
     1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1002, 1004,
     1007, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
     1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
     1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
     1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
     1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1247, 1250,
     1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
     1261, 1262, 1263, 1264, 1264, 1265, 1264, 1264, 1264, 1264,
     1264, 1264, 1267, 1264, 1268, 1269, 1270, 1271, 1264, 1264,

     1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
     1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
     1292, 1293, 1294, 1295, 1296, 1297, 1264, 1264, 1264, 1298,
     1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309,
     1310, 1311, 1312, 1313, 1314, 1315, 1316, 1306, 1317, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
     1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
     1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
     1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
     1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,

     1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
     1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
     1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
     1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
     1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
     1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
     1429, 1429, 1430, 1429, 1429, 1429, 1429, 1429, 1429, 1433,
     1429, 1265, 1434, 1435, 1436, 1429, 1429, 1437, 1438, 1439,
     1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
     1432, 1451, 1452, 1453, 1454, 1443, 1455, 1456, 1457, 1458,

     1459, 1460, 1461, 1429, 1429, 1429, 1264, 1264, 1265, 1264,
     1264, 1264, 1264, 1264, 1264, 1462, 1264, 1463, 1464, 1465,
     1466, 1264, 1264, 1467, 1468, 1469, 1470, 1471, 1472, 1474,
     1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
     1485, 1473, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1264,
     1264, 1264, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
     1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
     1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
     1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
     1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,

     1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
     1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
     1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
     1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
     1430, 1429, 1429, 1430, 1429, 1429, 1429, 1429, 1429, 1429,
     1581, 1429, 1582, 1583, 1584, 1585, 1429, 1429, 1586, 1587,
     1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
     1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
     1608, 1609, 1610, 1611, 1429, 1429, 1429, 1612, 1613, 1614,
     1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,

     1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
     1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
     1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
     1655, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1665,
     1666, 1667, 1668, 1669, 1670, 1671, 1660, 1672, 1673, 1674,
     1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
     1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
     1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
     1705, 1706, 1707, 1708, 1709, 1710, 1710, 1711, 1710, 1710,
     1710, 1710, 1710, 1710, 1716, 1710, 1717, 1718, 1719, 1720,

     1710, 1710, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
     1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
     1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1710, 1710,
     1710, 1713, 1713, 1714, 1713, 1713, 1713, 1713, 1713, 1713,
     1747, 1713, 1748, 1749, 1750, 1751, 1713, 1713, 1752, 1753,
     1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
     1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
     1774, 1775, 1776, 1777, 1713, 1713, 1713, 1778, 1779, 1780,
     1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
     1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,

     1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
     1811, 1812, 1813, 1814, 1711, 1710, 1710, 1711, 1710, 1710,
     1710, 1710, 1710, 1710, 1714, 1710, 1815, 1816, 1817, 1818,
     1710, 1710, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
     1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
     1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1710, 1710,
     1710, 1713, 1713, 1714, 1713, 1713, 1713, 1713, 1713, 1713,
     1845, 1713, 1846, 1847, 1848, 1849, 1713, 1713, 1850, 1851,
     1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
     1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,

     1872, 1873, 1874, 1875, 1713, 1713, 1713, 1876, 1877, 1878,
     1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
     1889, 1890, 1891, 1892, 1893, 1894, 1894, 1895, 1894, 1894,
     1894, 1894, 1894, 1894, 1897, 1894, 1898, 1899, 1900, 1901,
     1894, 1894, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
     1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
     1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1894, 1894,
     1894, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
     1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
     1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1895,

     1894, 1894, 1895, 1894, 1894, 1894, 1894, 1894, 1894, 1956,
     1894, 1957, 1958, 1959, 1960, 1894, 1894, 1961, 1962, 1963,
     1964, 1965, 1966, 1967, 1968, 1972, 1973, 1974, 1975, 1976,
     1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
     1987, 1988, 1989, 1894, 1894, 1894, 1969, 1969, 1970, 1969,
     1969, 1969, 1969, 1969, 1969, 1990, 1969, 1991, 1992, 1993,
     1994, 1969, 1969, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
     2002, 2003, 2004, 2005, 2006, 1970, 2007, 2008, 2009, 2010,
     2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 1969,
     1969, 1969, 1969, 1969, 1970, 1969, 1969, 1969, 1969, 1969,

     1969, 2020, 1969, 2021, 2022, 2023, 2024, 1969, 1969, 2025,
     2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
     2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
     2046, 2047, 2048, 2049, 2050, 1969, 1969, 1969, 2051, 2052,
     2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,   40,  147,
       40,   40,   57,   57,   57,   57,   59,   59,  142,  142,
      142,  142,  144,  144,  144,  144,  238,  238,  238,  238,
      245,  245,  245,  245,  589,  589,  589,  589,  591,  591,
      591,  591,  793,  793,  793,  793,  795,  795,  795,  795,
      800,  800,  800,  800,  873,  873,  873,  873, 1001, 1001,

     1001, 1001, 1003, 1003, 1003, 1003, 1006, 1006, 1006, 1006,
      871,  871,  871,  871, 1266, 1266, 1266, 1266, 1431, 1431,
     1431, 1431, 1264, 1264, 1264, 1264, 1429, 1429, 1429, 1429,
     1712, 1712, 1712, 1712, 1715, 1715, 1715, 1715, 1710, 1710,
     1710, 1710, 1713, 1713, 1713, 1713, 1896, 1896, 1896, 1896,
     1894, 1894, 1894, 1894, 1971, 1971, 1971, 1971, 1969, 1969,
     1969, 1969,  846,  845,  844,  843,  842,  841,  840,  839,
      838,  837,  836,  835,  834,  833,  832,  831,  830,  829,
      828,  827,  826,  825,  824,  823,  822,  821,  820,  819,
      818,  817,  816,  815,  814,  813,  812,  811,  810,  809,

      808,  807,  806,  805,  804,  803,  802,  801,  799,  798,
      796,  794,  592,  590,  792,  791,  790,  789,  788,  787,
      786,  785,  784,  783,  782,  781,  780,  779,  778,  777,
      776,  775,  774,  773,  772,  771,  770,  769,  768,  767,
      766,  765,  764,  763,  762,  758,  755,  754,  753,  752,
      751,  750,  749,  748,  747,  746,  745,  744,  743,  742,
      741,  740,  739,  738,  737,  736,  735,  734,  733,  732,
      729,  728,  727,  726,  725,  724,  723,  722,  721,  720,
      719,  718,  717,  716,  715,  714,  713,  712,  711,  710,
      709,  708,  707,  704,  700,  699,  698,  697,  696,  693,

      692,  691,  690,  689,  688,  687,  686,  685,  684,  683,
      682,  681,  680,  679,  678,  677,  676,  675,  674,  673,
      672,  671,  670,  669,  668,  667,  666,  665,  664,  663,
      662,  661,  660,  659,  658,  657,  656,  655,  654,  653,
      652,  651,  650,  649,  648,  647,  646,  645,  644,  643,
      642,  641,  640,  639,  638,  637,  634,  633,  630,  629,
      626,  625,  624,  623,  622,  621,  620,  619,  618,  617,
      616,  615,  614,  613,  612,  611,  610,  609,  608,  607,
      606,  605,  604,  603,  602,  601,  600,  599,  598,  597,
      596,  593,  592,  590,  588,  581,  580,  577,  576,  575,

      569,  566,  565,  564,  563,  562,  561,  547,  546,  545,
      537,  536,  533,  528,  527,  526,  525,  522,  519,  518,
      517,  516,  515,  514,  513,  512,  511,  510,  509,  508,
      505,  504,  503,  500,  492,  491,  482,  481,  480,  479,
      478,  477,  476,  475,  474,  473,  467,  466,  465,  464,
      461,  460,  457,  456,  455,  454,  453,  452,  448,  447,
      446,  445,  442,  441,  440,  439,  438,  437,  436,  435,
      434,  433,  432,  431,  430,  429,  422,  421,  420,  415,
      414,  413,  412,  411,  410,  409,  408,  403,  402,  401,
      400,  399,  395,  394,  393,  143,  392,  391,  390,  239,

      387,  386,  385,  384,  368,  367,  366,  365,  364,  363,
      362,  361,  360,  359,  358,  357,  356,  355,  354,  343,
      342,  341,  340,  339,  338,  337,  336,  335,  332,  331,
      330,  329,  328,  327,  326,  325,  324,  323,  322,  321,
      320,  319,  318,  317,  316,  315,  314,  311,  310,  309,
      308,  307,  306,  305,  294,  293,  285,  284,  283,  282,
      281,  280,  279,  278,  277,  276,  275,  274,  273,  272,
      271,  270,  254,  253,  252,  251,  250,  249,  248,  247,
      145,  143,  244,  243,  242,  237,  234,  233,  232,  231,
      230,  229,  228,  227,  226,  223,  222,  221,  220,  216,

      215,  214,  213,  212,  209,  204,  203,  198,  197,  196,
      195,  194,  193,  192,  191,  190,  189,  188,  187,  186,
      185,  182,  179,  178,  177,  176,  175,  174,  173,  172,
      167,  166,  165,  162,  159,  158,  157,  156,  155,  154,
      153,  152,  151,  150,  149,  148,   58,  145,  143,  140,
      139,  134,   40,   41,   39,  108,   95,   58,   41,   39,
     2061,    3, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,

     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061
    ) ;

yy_chk : constant array(0..2508) of Short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    8,    8,   33,  125,
       10,    8,   10,   10,   10,   10,   12,   43,    8,   43,
       33,   12,    8,   10,   11,   11,   11,   11,  125,   14,
      648,   14,   14,   14,   14,   11,   13,   17,   13,   13,
       13,   13,   14,   18,   90,   30,   17,   18,   17,   13,
       18,   22,   17,   20,   17,   90,   18,   20,   18,   22,

       27,   20,   27,   30,   20,   22,   78,   13,   19,   19,
       20,   20,   27,   23,   23,   19,   23,   34,   78,   19,
       72,   34,   19,   79,   72,   34,   19,   19,   21,   35,
       21,   25,   25,   21,   21,   21,   21,   29,   26,   26,
       79,   25,   25,   21,   35,  649,   26,  241,   31,   31,
       29,   31,   29,   21,   31,   29,   26,   21,   26,   44,
       32,   32,   21,   32,   31,   31,  241,   44,   92,   47,
       47,   47,   47,   32,  302,   32,   74,   74,  302,   32,
       47,   48,   92,   48,   48,   48,   48,   49,  107,   49,
       49,   49,   49,  257,   48,  107,   50,  650,   50,  257,

       49,   50,   50,   50,   50,   51,   51,   51,   51,   54,
      651,   54,   54,   54,   54,   56,   51,   56,   56,   56,
       56,  137,   54,   83,   83,   83,   83,  108,   56,   84,
       84,   84,   84,  111,  112,  112,  114,  108,  120,  135,
      137,  114,  352,  111,  141,  141,  141,  141,  135,  185,
      137,  143,  240,  352,  120,  146,  143,  146,  146,  146,
      146,  120,  206,  185,  232,  206,  326,  652,  146,  156,
      232,  232,  240,  326,  156,  156,  156,  156,  258,  156,
      351,  258,  156,  267,  351,  156,  156,  156,  156,  156,
      156,  267,  156,  251,  156,  173,  268,  287,  299,  653,

      251,  330,  173,  299,  330,  173,  268,  287,  381,  371,
      346,  173,  173,  173,  251,  346,  292,  173,  177,  292,
      177,  344,  354,  381,  344,  371,  354,  388,  654,  177,
      177,  177,  177,  177,  177,  292,  358,  177,  427,  177,
      216,  216,  358,  216,  427,  216,  373,  216,  388,  389,
      216,  272,  216,  373,  272,  216,  216,  373,  272,  655,
      216,  233,  233,  233,  233,  272,  233,  233,  272,  389,
      272,  656,  233,  307,  233,  233,  374,  233,  233,  374,
      233,  430,  307,  657,  430,  307,  307,  382,  307,  321,
      321,  357,  357,  321,  382,  364,  554,  554,  321,  321,

      321,  658,  364,  321,  357,  321,  324,  378,  364,  357,
      324,  357,  364,  424,  324,  378,  364,  324,  383,  324,
      501,  424,  324,  324,  363,  363,  659,  383,  363,  363,
      499,  499,  363,  493,  363,  595,  501,  499,  363,  363,
      528,  493,  556,  528,  660,  661,  662,  556,  663,  664,
      556,  665,  666,  667,  668,  669,  595,  670,  671,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  673,  672,
      674,  675,  677,  678,  672,  672,  679,  680,  681,  683,
      684,  685,  686,  687,  688,  689,  690,  691,  692,  693,
      694,  695,  696,  689,  689,  689,  697,  698,  699,  700,

      701,  702,  672,  672,  672,  703,  704,  705,  706,  707,
      708,  709,  710,  699,  711,  712,  713,  714,  715,  716,
      717,  718,  719,  720,  721,  722,  723,  724,  725,  726,
      727,  728,  729,  730,  731,  732,  733,  734,  735,  736,
      739,  740,  741,  742,  743,  743,  744,  745,  746,  747,
      748,  749,  750,  751,  752,  753,  754,  755,  755,  756,
      757,  758,  759,  760,  761,  762,  763,  764,  765,  766,
      767,  768,  769,  770,  771,  772,  773,  774,  775,  776,
      777,  778,  779,  780,  779,  779,  781,  782,  783,  784,
      785,  786,  787,  788,  789,  779,  790,  791,  779,  779,

      779,  792,  793,  795,  797,  798,  799,  800,  802,  803,
      804,  805,  806,  807,  808,  809,  810,  811,  812,  813,
      816,  808,  817,  818,  819,  821,  820,  822,  824,  826,
      827,  828,  829,  830,  831,  808,  820,  832,  833,  834,
      835,  837,  839,  840,  841,  842,  843,  844,  845,  846,
      847,  848,  849,  850,  851,  852,  853,  854,  855,  856,
      857,  858,  847,  860,  861,  862,  863,  864,  865,  866,
      867,  868,  870,  857,  871,  873,  873,  873,  873,  873,
      873,  873,  873,  873,  874,  873,  875,  876,  877,  878,
      873,  873,  879,  880,  881,  882,  883,  884,  885,  886,

      887,  888,  889,  890,  891,  892,  893,  894,  896,  897,
      898,  899,  900,  901,  902,  903,  904,  905,  873,  873,
      873,  906,  907,  908,  909,  910,  911,  912,  913,  914,
      915,  917,  918,  919,  920,  921,  922,  923,  924,  925,
      926,  927,  928,  929,  930,  932,  933,  934,  935,  936,
      937,  938,  939,  940,  941,  930,  942,  943,  944,  946,
      947,  948,  949,  951,  952,  953,  954,  942,  955,  956,
      957,  958,  959,  960,  961,  962,  954,  963,  964,  965,
      966,  967,  968,  969,  970,  972,  973,  974,  975,  976,
      977,  978,  979,  980,  981,  982,  983,  984,  985,  983,

      986,  987,  988,  989,  988,  990,  991,  979,  982,  992,
      993,  994,  995,  996,  997,  998,  999, 1000, 1001, 1003,
     1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
     1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
     1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
     1038, 1039, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050,
     1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1056, 1059,
     1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071,
     1072, 1073, 1074, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1076, 1075, 1078, 1079, 1080, 1081, 1075, 1075,

     1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094,
     1095, 1096, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
     1107, 1108, 1110, 1113, 1114, 1115, 1075, 1075, 1075, 1116,
     1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
     1128, 1129, 1130, 1131, 1132, 1133, 1135, 1124, 1136, 1137,
     1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149,
     1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
     1160, 1161, 1162, 1164, 1165, 1167, 1168, 1169, 1170, 1171,
     1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
     1183, 1184, 1185, 1186, 1187, 1188, 1188, 1189, 1191, 1192,

     1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
     1204, 1205, 1206, 1208, 1209, 1210, 1214, 1215, 1216, 1217,
     1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
     1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239,
     1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
     1250, 1251, 1252, 1254, 1255, 1257, 1258, 1259, 1260, 1261,
     1262, 1262, 1262, 1262, 1262, 1262, 1262, 1262, 1262, 1263,
     1262, 1264, 1267, 1268, 1269, 1262, 1262, 1270, 1271, 1272,
     1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283,
     1262, 1284, 1285, 1286, 1287, 1275, 1288, 1289, 1290, 1291,

     1292, 1294, 1295, 1262, 1262, 1262, 1266, 1266, 1266, 1266,
     1266, 1266, 1266, 1266, 1266, 1296, 1266, 1297, 1298, 1299,
     1300, 1266, 1266, 1301, 1305, 1306, 1307, 1308, 1309, 1310,
     1311, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1323,
     1324, 1309, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1266,
     1266, 1266, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
     1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1351,
     1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
     1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
     1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382,

     1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
     1393, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404,
     1406, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418,
     1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
     1429, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
     1432, 1431, 1433, 1434, 1435, 1436, 1431, 1431, 1439, 1440,
     1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451,
     1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463,
     1464, 1466, 1467, 1468, 1431, 1431, 1431, 1469, 1470, 1471,
     1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,

     1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
     1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
     1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513,
     1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
     1524, 1525, 1527, 1528, 1529, 1533, 1518, 1536, 1537, 1538,
     1539, 1540, 1541, 1542, 1544, 1546, 1547, 1548, 1550, 1551,
     1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1562,
     1563, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574,
     1575, 1576, 1579, 1580, 1581, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1584, 1582, 1586, 1587, 1588, 1589,

     1582, 1582, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
     1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608,
     1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1582, 1582,
     1582, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
     1621, 1583, 1622, 1624, 1626, 1628, 1583, 1583, 1630, 1631,
     1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
     1643, 1644, 1645, 1646, 1647, 1650, 1652, 1653, 1656, 1657,
     1658, 1659, 1660, 1661, 1583, 1583, 1583, 1662, 1664, 1665,
     1666, 1667, 1668, 1669, 1670, 1671, 1673, 1675, 1676, 1677,
     1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,

     1690, 1691, 1692, 1693, 1694, 1695, 1697, 1699, 1701, 1702,
     1703, 1706, 1708, 1709, 1710, 1712, 1712, 1712, 1712, 1712,
     1712, 1712, 1712, 1712, 1713, 1712, 1716, 1717, 1718, 1719,
     1712, 1712, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728,
     1729, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1739, 1741,
     1742, 1743, 1744, 1746, 1747, 1749, 1752, 1753, 1712, 1712,
     1712, 1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715,
     1754, 1715, 1755, 1757, 1759, 1760, 1715, 1715, 1761, 1762,
     1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773,
     1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,

     1784, 1785, 1786, 1788, 1715, 1715, 1715, 1790, 1791, 1792,
     1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1805,
     1806, 1808, 1809, 1810, 1811, 1814, 1814, 1814, 1814, 1814,
     1814, 1814, 1814, 1814, 1815, 1814, 1816, 1817, 1818, 1819,
     1814, 1814, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828,
     1829, 1831, 1832, 1833, 1834, 1836, 1837, 1840, 1841, 1843,
     1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1814, 1814,
     1814, 1852, 1855, 1856, 1858, 1859, 1860, 1861, 1862, 1863,
     1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1875, 1876,
     1877, 1878, 1881, 1882, 1883, 1885, 1886, 1887, 1890, 1894,

     1896, 1896, 1896, 1896, 1896, 1896, 1896, 1896, 1896, 1897,
     1896, 1898, 1899, 1901, 1902, 1896, 1896, 1903, 1904, 1905,
     1906, 1908, 1909, 1910, 1911, 1917, 1918, 1920, 1923, 1925,
     1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
     1937, 1938, 1939, 1896, 1896, 1896, 1913, 1913, 1913, 1913,
     1913, 1913, 1913, 1913, 1913, 1940, 1913, 1941, 1942, 1947,
     1948, 1913, 1913, 1950, 1951, 1952, 1954, 1955, 1957, 1961,
     1962, 1965, 1966, 1967, 1968, 1969, 1972, 1973, 1974, 1976,
     1977, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1913,
     1913, 1913, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,

     1971, 1992, 1971, 1993, 1995, 1997, 1998, 1971, 1971, 2000,
     2001, 2002, 2003, 2005, 2006, 2007, 2009, 2010, 2012, 2014,
     2015, 2016, 2017, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
     2027, 2028, 2032, 2036, 2037, 1971, 1971, 1971, 2038, 2041,
     2044, 2045, 2048, 2049, 2050, 2051, 2054, 2058, 2062, 2067,
     2062, 2062, 2063, 2063, 2063, 2063, 2064, 2064, 2065, 2065,
     2065, 2065, 2066, 2066, 2066, 2066, 2068, 2068, 2068, 2068,
     2069, 2069, 2069, 2069, 2070, 2070, 2070, 2070, 2071, 2071,
     2071, 2071, 2072, 2072, 2072, 2072, 2073, 2073, 2073, 2073,
     2074, 2074, 2074, 2074, 2075, 2075, 2075, 2075, 2076, 2076,

     2076, 2076, 2077, 2077, 2077, 2077, 2078, 2078, 2078, 2078,
     2079, 2079, 2079, 2079, 2080, 2080, 2080, 2080, 2081, 2081,
     2081, 2081, 2082, 2082, 2082, 2082, 2083, 2083, 2083, 2083,
     2084, 2084, 2084, 2084, 2085, 2085, 2085, 2085, 2086, 2086,
     2086, 2086, 2087, 2087, 2087, 2087, 2088, 2088, 2088, 2088,
     2089, 2089, 2089, 2089, 2090, 2090, 2090, 2090, 2091, 2091,
     2091, 2091,  647,  646,  645,  644,  643,  642,  641,  640,
      638,  637,  636,  635,  634,  633,  632,  631,  630,  629,
      628,  627,  626,  625,  623,  621,  620,  619,  618,  617,
      616,  615,  614,  613,  612,  611,  610,  609,  608,  607,

      606,  605,  603,  602,  601,  600,  599,  598,  597,  596,
      594,  593,  591,  589,  588,  587,  586,  585,  584,  583,
      582,  581,  580,  579,  578,  577,  576,  575,  574,  573,
      572,  571,  570,  569,  568,  567,  566,  565,  564,  563,
      561,  560,  559,  558,  557,  555,  553,  552,  551,  550,
      549,  548,  547,  546,  545,  544,  543,  542,  541,  540,
      539,  538,  536,  535,  534,  533,  532,  531,  530,  529,
      527,  526,  525,  524,  523,  522,  521,  520,  518,  517,
      516,  514,  513,  512,  511,  510,  509,  507,  506,  505,
      504,  503,  502,  500,  498,  497,  496,  495,  494,  491,

      490,  489,  488,  487,  486,  485,  484,  483,  482,  481,
      480,  479,  478,  477,  476,  475,  474,  472,  471,  470,
      469,  468,  466,  465,  464,  463,  462,  461,  460,  459,
      458,  457,  456,  455,  454,  453,  452,  451,  450,  449,
      448,  447,  446,  445,  444,  443,  442,  441,  440,  439,
      438,  437,  436,  435,  433,  432,  429,  428,  426,  425,
      423,  422,  421,  420,  419,  418,  417,  416,  415,  414,
      413,  412,  411,  410,  409,  408,  407,  406,  405,  404,
      403,  402,  400,  398,  397,  396,  394,  393,  392,  391,
      390,  387,  386,  385,  384,  380,  379,  377,  376,  375,

      372,  370,  369,  368,  367,  366,  365,  361,  360,  359,
      356,  355,  353,  350,  349,  348,  347,  345,  343,  342,
      341,  340,  339,  338,  337,  336,  334,  333,  332,  331,
      329,  328,  327,  325,  323,  322,  320,  319,  318,  317,
      314,  313,  312,  311,  310,  308,  306,  305,  304,  303,
      301,  300,  298,  297,  296,  295,  294,  293,  291,  290,
      289,  288,  286,  285,  284,  283,  282,  281,  280,  279,
      278,  277,  276,  275,  274,  273,  271,  270,  269,  266,
      265,  264,  263,  262,  261,  260,  259,  256,  255,  254,
      253,  252,  250,  249,  248,  245,  244,  243,  242,  238,

      237,  236,  235,  234,  231,  230,  229,  228,  227,  226,
      225,  224,  223,  222,  221,  220,  219,  218,  217,  215,
      214,  213,  212,  211,  210,  209,  208,  207,  205,  204,
      203,  201,  200,  199,  198,  197,  196,  195,  194,  193,
      192,  191,  190,  189,  188,  187,  186,  184,  183,  182,
      181,  180,  179,  178,  175,  174,  172,  171,  170,  169,
      168,  167,  166,  165,  164,  163,  162,  161,  160,  159,
      158,  157,  155,  154,  153,  152,  151,  150,  148,  147,
      144,  142,  140,  139,  138,  136,  134,  133,  132,  131,
      130,  129,  128,  127,  126,  124,  123,  122,  121,  119,

      118,  117,  116,  115,  113,  110,  109,  106,  105,  104,
      103,  102,  101,  100,   99,   98,   97,   96,   95,   94,
       93,   91,   89,   88,   87,   86,   85,   82,   81,   80,
       77,   76,   75,   73,   71,   70,   69,   68,   67,   66,
       65,   64,   63,   62,   61,   60,   57,   53,   52,   46,
       45,   42,   41,   40,   39,   28,   24,   15,    7,    5,
        3, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,
     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061,

     2061, 2061, 2061, 2061, 2061, 2061, 2061, 2061
    ) ;


-- copy whatever the last rule matched to the standard output

procedure ECHO is
begin
   if Text_IO.is_open(user_output_file) then
     Text_IO.put( user_output_file, yytext );
   else
     Text_IO.put( yytext );
   end if;
end ECHO;

-- enter a start condition.
-- Using procedure requires a () after the ENTER, but makes everything
-- much neater.

procedure ENTER( state : integer ) is
begin
     yy_start := 1 + 2 * state;
end ENTER;

-- action number for EOF rule of a given start state
function YY_STATE_EOF(state : integer) return integer is
begin
     return YY_END_OF_BUFFER + state + 1;
end YY_STATE_EOF;

-- return all but the first 'n' matched characters back to the input stream
procedure yyless(n : integer) is
begin
        yy_ch_buf(yy_cp) := yy_hold_char; -- undo effects of setting up yytext
        yy_cp := yy_bp + n;
        yy_c_buf_p := yy_cp;
        YY_DO_BEFORE_ACTION; -- set up yytext again
end yyless;

-- redefine this if you have something you want each time.
procedure YY_USER_ACTION is
begin
        null;
end;

-- yy_get_previous_state - get the state just before the EOB char was reached

function yy_get_previous_state return yy_state_type is
    yy_current_state : yy_state_type;
    yy_c : short;
begin
    yy_current_state := yy_start;

    for yy_cp in yytext_ptr..yy_c_buf_p - 1 loop
	yy_c := yy_ec(yy_ch_buf(yy_cp));
	if yy_accept(yy_current_state) /= 0 then
	    yy_last_accepting_state := yy_current_state;
	    yy_last_accepting_cpos := yy_cp;
	end if;
	while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
	    yy_current_state := yy_def(yy_current_state);
	    if ( yy_current_state >= 2062 ) then
		yy_c := yy_meta(yy_c);
	    end if;
	end loop;
	yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
    end loop;

    return yy_current_state;
end yy_get_previous_state;

procedure yyrestart( input_file : file_type ) is
begin
   open_input(Text_IO.name(input_file));
end yyrestart;

begin -- of YYLex
<<new_file>>
        -- this is where we enter upon encountering an end-of-file and
        -- yywrap() indicating that we should continue processing

    if yy_init then
        if yy_start = 0 then
            yy_start := 1;      -- first start state
        end if;

        -- we put in the '\n' and start reading from [1] so that an
        -- initial match-at-newline will be true.

        yy_ch_buf(0) := ASCII.LF;
        yy_n_chars := 1;

        -- we always need two end-of-buffer characters. The first causes
        -- a transition to the end-of-buffer state. The second causes
        -- a jam in that state.

        yy_ch_buf(yy_n_chars) := YY_END_OF_BUFFER_CHAR;
        yy_ch_buf(yy_n_chars + 1) := YY_END_OF_BUFFER_CHAR;

        yy_eof_has_been_seen := false;

        yytext_ptr := 1;
        yy_c_buf_p := yytext_ptr;
        yy_hold_char := yy_ch_buf(yy_c_buf_p);
        yy_init := false;
-- UMASS CODES :
--   Initialization
        tok_begin_line := 1;
        tok_end_line := 1;
        tok_begin_col := 0;
        tok_end_col := 0;
        token_at_end_of_line := false;
        line_number_of_saved_tok_line1 := 0;
        line_number_of_saved_tok_line2 := 0;
-- END OF UMASS CODES.
    end if; -- yy_init

    loop                -- loops until end-of-file is reached

-- UMASS CODES :
--    if last matched token is end_of_line, we must
--    update the token_end_line and reset tok_end_col.
    if Token_At_End_Of_Line then
      Tok_End_Line := Tok_End_Line + 1;
      Tok_End_Col := 0;
      Token_At_End_Of_Line := False;
    end if;
-- END OF UMASS CODES.

        yy_cp := yy_c_buf_p;

        -- support of yytext
        yy_ch_buf(yy_cp) := yy_hold_char;

        -- yy_bp points to the position in yy_ch_buf of the start of the
        -- current run.
	yy_bp := yy_cp;
	yy_current_state := yy_start;
	loop
		yy_c := yy_ec(yy_ch_buf(yy_cp));
		if yy_accept(yy_current_state) /= 0 then
		    yy_last_accepting_state := yy_current_state;
		    yy_last_accepting_cpos := yy_cp;
		end if;
		while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
		    yy_current_state := yy_def(yy_current_state);
		    if ( yy_current_state >= 2062 ) then
			yy_c := yy_meta(yy_c);
		    end if;
		end loop;
		yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
	    yy_cp := yy_cp + 1;
if ( yy_current_state = 2061 ) then
    exit;
end if;
	end loop;
	yy_cp := yy_last_accepting_cpos;
	yy_current_state := yy_last_accepting_state;

<<next_action>>
	    yy_act := yy_accept(yy_current_state);
            YY_DO_BEFORE_ACTION;
            YY_USER_ACTION;

        if aflex_debug then  -- output acceptance info. for (-d) debug mode
            Text_IO.put( Standard_Error, "--accepting rule #" );
            Text_IO.put( Standard_Error, INTEGER'IMAGE(yy_act) );
            Text_IO.put_line( Standard_Error, "(""" & yytext & """)");
        end if;

-- UMASS CODES :
--   Update tok_begin_line, tok_end_line, tok_begin_col and tok_end_col
--   after matching the token.
        if yy_act /= YY_END_OF_BUFFER and then yy_act /= 0 then
-- Token are matched only when yy_act is not yy_end_of_buffer or 0.
          Tok_Begin_Line := Tok_End_Line;
          Tok_Begin_Col := Tok_End_Col + 1;
          Tok_End_Col := Tok_Begin_Col + yy_cp - yy_bp - 1;
          if yy_ch_buf ( yy_bp ) = ASCII.LF then
            Token_At_End_Of_Line := True;
          end if;
        end if;
-- END OF UMASS CODES.

<<do_action>>   -- this label is used only to access EOF actions
            case yy_act is
		when 0 => -- must backtrack
		-- undo the effects of YY_DO_BEFORE_ACTION
		yy_ch_buf(yy_cp) := yy_hold_char;
		yy_cp := yy_last_accepting_cpos;
		yy_current_state := yy_last_accepting_state;
		goto next_action;



-- /* ... */ -style comments
when 1 => 
--# line 55 "rc.l"

         RC_Help.RC_Comment(YYText(3..YYLength-2));
         

-- // -style comment -> skip rest of line.
when 2 => 
--# line 60 "rc.l"

         RC_Help.RC_Comment(YYText);
                      linenum:= linenum + 1;
         

when 3 => 
--# line 65 "rc.l"
 return BAR_t; 

when 4 => 
--# line 66 "rc.l"
 return COMMA_t; 

when 5 => 
--# line 67 "rc.l"
 return LBRACE_t; 

when 6 => 
--# line 68 "rc.l"
 return RBRACE_t; 

when 7 => 
--# line 69 "rc.l"
 return C_INCLUDE_t; 

when 8 => 
--# line 70 "rc.l"
 return NOT_t; 

-----------
-- Noise --
-----------
when 9 => 
--# line 76 "rc.l"
 null;  -- skip rest of line - was  return C_CRAP_t; 

when 10 => 
--# line 77 "rc.l"
 null; 

when 11 => 
--# line 78 "rc.l"
 null; 

when 12 => 
--# line 79 "rc.l"
 null; 

when 13 => 
--# line 80 "rc.l"
 null; 

when 14 => 
--# line 81 "rc.l"
 null; 

when 15 => 
--# line 82 "rc.l"
 null; 

when 16 => 
--# line 83 "rc.l"
 null; 

when 17 => 
--# line 84 "rc.l"
 null; 

---------------
-- Resources --
---------------
when 18 => 
--# line 90 "rc.l"
 return DIALOG_t; 

when 19 => 
--# line 91 "rc.l"
 return DIALOGEX_t; 

when 20 => 
--# line 92 "rc.l"
 return MENU_t; 

when 21 => 
--# line 93 "rc.l"
 return DLGINCLUDE_t; 

when 22 => 
--# line 94 "rc.l"
 return TEXTINCLUDE_t; 

when 23 => 
--# line 95 "rc.l"
 return GUIDELINES_t; 

when 24 => 
--# line 96 "rc.l"
 return DESIGNINFO_t; 

when 25 => 
--# line 97 "rc.l"
 return RT_MANIFEST_t; 

when 26 => 
--# line 98 "rc.l"
 return MOVEABLE_t; 

when 27 => 
--# line 99 "rc.l"
 return PURE_t; 

when 28 => 
--# line 100 "rc.l"
 return IMPURE_t; 

when 29 => 
--# line 101 "rc.l"
 return FIXED_t; 

when 30 => 
--# line 102 "rc.l"
 return PRELOAD_t; 

when 31 => 
--# line 103 "rc.l"
 return DISCARDABLE_t; 

when 32 => 
--# line 104 "rc.l"
 return LANGUAGE_t; 

when 33 => 
--# line 105 "rc.l"
 return STYLE_t; 

when 34 => 
--# line 106 "rc.l"
 return EXSTYLE_t; 

when 35 => 
--# line 107 "rc.l"
 return CAPTION_t; 

when 36 => 
--# line 108 "rc.l"
 return CLASS_t; 

when 37 => 
--# line 109 "rc.l"
 return FONT_t; 

when 38 => 
--# line 110 "rc.l"
 return LTEXT_t; 

when 39 => 
--# line 111 "rc.l"
 return CTEXT_t; 

when 40 => 
--# line 112 "rc.l"
 return RTEXT_t; 

when 41 => 
--# line 114 "rc.l"
 return BEGIN_t; 

when 42 => 
--# line 115 "rc.l"
 return END_t; 

when 43 => 
--# line 117 "rc.l"
 return CONTROL_t; 

when 44 => 
--# line 118 "rc.l"
 return EDITTEXT_t; 

when 45 => 
--# line 119 "rc.l"
 return COMBOBOX_t; 

when 46 => 
--# line 120 "rc.l"
 return GROUPBOX_t; 

when 47 => 
--# line 121 "rc.l"
 return LISTBOX_t; 

when 48 => 
--# line 123 "rc.l"
 return RADIOBUTTON_t; 

when 49 => 
--# line 124 "rc.l"
 return AUTORADIOBUTTON_t; 

when 50 => 
--# line 126 "rc.l"
 return CHECKBOX_t; 

when 51 => 
--# line 127 "rc.l"
 return AUTOCHECKBOX_t; 

when 52 => 
--# line 128 "rc.l"
 return AUTO3STATE_t; 

when 53 => 
--# line 129 "rc.l"
 return STATE3_t; 

when 54 => 
--# line 131 "rc.l"
 return PUSHBUTTON_t; 

when 55 => 
--# line 132 "rc.l"
 return DEFPUSHBUTTON_t; 

when 56 => 
--# line 134 "rc.l"
 return SCROLLBAR_t; 

-----------
-- Menus --
-----------
when 57 => 
--# line 139 "rc.l"
 return CHECKED_t; 

when 58 => 
--# line 140 "rc.l"
 return GRAYED_t; 

when 59 => 
--# line 141 "rc.l"
 return HELP_t; 

when 60 => 
--# line 142 "rc.l"
 return INACTIVE_t; 

when 61 => 
--# line 143 "rc.l"
 return MENUBARBREAK_t; 

when 62 => 
--# line 144 "rc.l"
 return MENUBREAK_t; 

when 63 => 
--# line 145 "rc.l"
 return MENUITEM_t; 

when 64 => 
--# line 146 "rc.l"
 return POPUP_t; 

when 65 => 
--# line 147 "rc.l"
 return SEPARATOR_t; 

------------------
-- Accelerators --
------------------
when 66 => 
--# line 152 "rc.l"
 return ACCELERATORS_t; 

when 67 => 
--# line 153 "rc.l"
 return CHARACTERISTICS_t; 

when 68 => 
--# line 154 "rc.l"
 return VERSION_t; 

when 69 => 
--# line 155 "rc.l"
 return ASCII_t; 

when 70 => 
--# line 156 "rc.l"
 return VIRTKEY_t; 

when 71 => 
--# line 157 "rc.l"
 return NOINVERT_t; 

when 72 => 
--# line 158 "rc.l"
 return ALT_t; 

when 73 => 
--# line 159 "rc.l"
 return SHIFT_t; 

--------------
-- Versions --
--------------
when 74 => 
--# line 165 "rc.l"
 return VERSIONINFO_t; 

when 75 => 
--# line 166 "rc.l"
 return FILEVERSION_t; 

when 76 => 
--# line 167 "rc.l"
 return PRODUCTVERSION_t; 

when 77 => 
--# line 168 "rc.l"
 return FILEFLAGSMASK_t; 

when 78 => 
--# line 169 "rc.l"
 return FILEFLAGS_t; 

when 79 => 
--# line 170 "rc.l"
 return FILEOS_t; 

when 80 => 
--# line 171 "rc.l"
 return FILETYPE_t; 

when 81 => 
--# line 172 "rc.l"
 return FILESUBTYPE_t; 

when 82 => 
--# line 173 "rc.l"
 return BLOCK_t; 

when 83 => 
--# line 174 "rc.l"
 return VALUE_t; 

-------------------
-- Graphic items --
-------------------
when 84 => 
--# line 179 "rc.l"
 return ICON_t; 

when 85 => 
--# line 180 "rc.l"
 return BITMAP_t; 

when 86 => 
--# line 181 "rc.l"
 return CURSOR_t; 

--------------
-- Toolbars --
--------------
when 87 => 
--# line 186 "rc.l"
 return TOOLBAR_t; 

when 88 => 
--# line 187 "rc.l"
 return BUTTON_t; 

when 89 => 
--# line 188 "rc.l"
 return SEPARATOR_t; 

when 90 => 
--# line 190 "rc.l"
 return STRINGTABLE_t; 

------------------
-- Window Class --
------------------
when 91 => 
--# line 195 "rc.l"
 return ANIMATE_CLASS_t; 

when 92 => 
--# line 196 "rc.l"
 return DATETIMEPICK_CLASS_t; 

when 93 => 
--# line 197 "rc.l"
 return MONTHCAL_CLASS_t; 

when 94 => 
--# line 198 "rc.l"
 return PROGRESS_CLASS_t; 

when 95 => 
--# line 199 "rc.l"
 return TRACKBAR_CLASS_t; 

when 96 => 
--# line 200 "rc.l"
 return UPDOWN_CLASS_t; 

when 97 => 
--# line 201 "rc.l"
 return WC_LISTVIEW_t; 

when 98 => 
--# line 202 "rc.l"
 return WC_TABCONTROL_t; 

when 99 => 
--# line 203 "rc.l"
 return WC_TREEVIEW_t; 

when 100 => 
--# line 204 "rc.l"
 return WC_STATIC_t; 

when 101 => 
--# line 205 "rc.l"
 return STATIC_t; 

------------
-- Styles --
------------
-- Window style
when 102 => 
--# line 212 "rc.l"
 return WS_BORDER_t; 

when 103 => 
--# line 213 "rc.l"
 return WS_CAPTION_t; 

when 104 => 
--# line 214 "rc.l"
 return WS_CHILD_t; 

when 105 => 
--# line 215 "rc.l"
 return WS_CLIPCHILDREN_t; 

when 106 => 
--# line 216 "rc.l"
 return WS_CLIPSIBLINGS_t; 

when 107 => 
--# line 217 "rc.l"
 return WS_DISABLED_t; 

when 108 => 
--# line 218 "rc.l"
 return WS_DLGFRAME_t; 

when 109 => 
--# line 219 "rc.l"
 return WS_GROUP_t; 

when 110 => 
--# line 220 "rc.l"
 return WS_HSCROLL_t; 

when 111 => 
--# line 221 "rc.l"
 return WS_MINIMIZEBOX_t; 

when 112 => 
--# line 222 "rc.l"
 return WS_MAXIMIZEBOX_t; 

when 113 => 
--# line 223 "rc.l"
 return WS_OVERLAPPED_t; 

when 114 => 
--# line 224 "rc.l"
 return WS_POPUP_t; 

when 115 => 
--# line 225 "rc.l"
 return WS_SIZEBOX_t; 

when 116 => 
--# line 226 "rc.l"
 return WS_SYSMENU_t; 

when 117 => 
--# line 227 "rc.l"
 return WS_TABSTOP_t; 

when 118 => 
--# line 228 "rc.l"
 return WS_VISIBLE_t; 

when 119 => 
--# line 229 "rc.l"
 return WS_VSCROLL_t; 

when 120 => 
--# line 230 "rc.l"
 return WS_THICKFRAME_t; 

-- Dialog style
when 121 => 
--# line 233 "rc.l"
 return DS_3DLOOK_t; 

when 122 => 
--# line 234 "rc.l"
 return DS_CENTER_t; 

when 123 => 
--# line 235 "rc.l"
 return DS_CENTERMOUSE_t; 

when 124 => 
--# line 236 "rc.l"
 return DS_CONTROL_t; 

when 125 => 
--# line 237 "rc.l"
 return DS_FIXEDSYS_t; 

when 126 => 
--# line 238 "rc.l"
 return DS_LOCALEDIT_t; 

when 127 => 
--# line 239 "rc.l"
 return DS_MODALFRAME_t; 

when 128 => 
--# line 240 "rc.l"
 return DS_NOIDLEMSG_t; 

when 129 => 
--# line 241 "rc.l"
 return DS_SETFOREGROUND_t; 

when 130 => 
--# line 242 "rc.l"
 return DS_CONTEXTHELP_t; 

when 131 => 
--# line 243 "rc.l"
 return DS_SHELLFONT_t; 

when 132 => 
--# line 244 "rc.l"
 return DS_SETFONT_t; 

when 133 => 
--# line 245 "rc.l"
 return DS_SYSMODAL_t; 

-- Static styles
when 134 => 
--# line 248 "rc.l"
 return SS_BITMAP_t; 

when 135 => 
--# line 249 "rc.l"
 return SS_BLACKFRAME_t; 

when 136 => 
--# line 250 "rc.l"
 return SS_BLACKRECT_t; 

when 137 => 
--# line 251 "rc.l"
 return SS_CENTERIMAGE_t; 

when 138 => 
--# line 252 "rc.l"
 return SS_ENDELLIPSIS_t; 

when 139 => 
--# line 253 "rc.l"
 return SS_ETCHEDHORZ_t; 

when 140 => 
--# line 254 "rc.l"
 return SS_ETCHEDVERT_t; 

when 141 => 
--# line 255 "rc.l"
 return SS_GRAYFRAME_t; 

when 142 => 
--# line 256 "rc.l"
 return SS_GRAYRECT_t; 

when 143 => 
--# line 257 "rc.l"
 return SS_ICON_t; 

when 144 => 
--# line 258 "rc.l"
 return SS_LEFT_t; 

when 145 => 
--# line 259 "rc.l"
 return SS_LEFTNOWORDWRAP_t; 

when 146 => 
--# line 260 "rc.l"
 return SS_NOPREFIX_t; 

when 147 => 
--# line 261 "rc.l"
 return SS_NOTIFY_t; 

when 148 => 
--# line 262 "rc.l"
 return SS_REALSIZEIMAGE_t; 

when 149 => 
--# line 263 "rc.l"
 return SS_RIGHT_t; 

when 150 => 
--# line 264 "rc.l"
 return SS_SIMPLE_t; 

when 151 => 
--# line 265 "rc.l"
 return SS_SUNKEN_t; 

when 152 => 
--# line 266 "rc.l"
 return SS_WHITERECT_t; 

-- Edit styles
when 153 => 
--# line 269 "rc.l"
 return ES_AUTOHSCROLL_t; 

when 154 => 
--# line 270 "rc.l"
 return ES_AUTOVSCROLL_t; 

when 155 => 
--# line 271 "rc.l"
 return ES_CENTER_t; 

when 156 => 
--# line 272 "rc.l"
 return ES_LEFT_t; 

when 157 => 
--# line 273 "rc.l"
 return ES_MULTILINE_t; 

when 158 => 
--# line 274 "rc.l"
 return ES_NOHIDESEL_t; 

when 159 => 
--# line 275 "rc.l"
 return ES_NUMBER_t; 

when 160 => 
--# line 276 "rc.l"
 return ES_OEMCONVERT_t; 

when 161 => 
--# line 277 "rc.l"
 return ES_PASSWORD_t; 

when 162 => 
--# line 278 "rc.l"
 return ES_READONLY_t; 

when 163 => 
--# line 279 "rc.l"
 return ES_RIGHT_t; 

when 164 => 
--# line 280 "rc.l"
 return ES_UPPERCASE_t; 

when 165 => 
--# line 281 "rc.l"
 return ES_WANTRETURN_t; 

-- Box/Button styles
when 166 => 
--# line 284 "rc.l"
 return BS_3STATE_t; 

when 167 => 
--# line 285 "rc.l"
 return BS_AUTO3STATE_t; 

when 168 => 
--# line 286 "rc.l"
 return BS_AUTOCHECKBOX_t; 

when 169 => 
--# line 287 "rc.l"
 return BS_AUTORADIOBUTTON_t; 

when 170 => 
--# line 288 "rc.l"
 return BS_BITMAP_t; 

when 171 => 
--# line 289 "rc.l"
 return BS_BOTTOM_t; 

when 172 => 
--# line 290 "rc.l"
 return BS_CENTER_t; 

when 173 => 
--# line 291 "rc.l"
 return BS_CHECKBOX_t; 

when 174 => 
--# line 292 "rc.l"
 return BS_DEFPUSHBUTTON_t; 

when 175 => 
--# line 293 "rc.l"
 return BS_ICON_t; 

when 176 => 
--# line 294 "rc.l"
 return BS_FLAT_t; 

when 177 => 
--# line 295 "rc.l"
 return BS_LEFT_t; 

when 178 => 
--# line 296 "rc.l"
 return BS_LEFTTEXT_t; 

when 179 => 
--# line 297 "rc.l"
 return BS_MULTILINE_t; 

when 180 => 
--# line 298 "rc.l"
 return BS_NOTIFY_t; 

when 181 => 
--# line 299 "rc.l"
 return BS_OWNERDRAW_t; 

when 182 => 
--# line 300 "rc.l"
 return BS_PUSHBUTTON_t; 

when 183 => 
--# line 301 "rc.l"
 return BS_PUSHLIKE_t; 

when 184 => 
--# line 302 "rc.l"
 return BS_RADIOBUTTON_t; 

when 185 => 
--# line 303 "rc.l"
 return BS_RIGHT_t; 

when 186 => 
--# line 304 "rc.l"
 return BS_RIGHTBUTTON_t; 

when 187 => 
--# line 305 "rc.l"
 return BS_TEXT_t; 

when 188 => 
--# line 306 "rc.l"
 return BS_TOP_t; 

when 189 => 
--# line 307 "rc.l"
 return BS_VCENTER_t; 

-- Combo-box styles
when 190 => 
--# line 310 "rc.l"
 return CBS_AUTOHSCROLL_t; 

when 191 => 
--# line 311 "rc.l"
 return CBS_SIMPLE_t; 

when 192 => 
--# line 312 "rc.l"
 return CBS_DISABLENOSCROLL_t; 

when 193 => 
--# line 313 "rc.l"
 return CBS_DROPDOWN_t; 

when 194 => 
--# line 314 "rc.l"
 return CBS_DROPDOWNLIST_t; 

when 195 => 
--# line 315 "rc.l"
 return CBS_HASSTRINGS_t; 

when 196 => 
--# line 316 "rc.l"
 return CBS_OWNERDRAWFIXED_t; 

when 197 => 
--# line 317 "rc.l"
 return CBS_SORT_t; 

when 198 => 
--# line 318 "rc.l"
 return CBS_UPPERCASE_t; 

-- Listbox styles
when 199 => 
--# line 321 "rc.l"
 return LBS_DISABLENOSCROLL_t; 

when 200 => 
--# line 322 "rc.l"
 return LBS_EXTENDEDSEL_t; 

when 201 => 
--# line 323 "rc.l"
 return LBS_HASSTRINGS_t; 

when 202 => 
--# line 324 "rc.l"
 return LBS_MULTIPLESEL_t; 

when 203 => 
--# line 325 "rc.l"
 return LBS_MULTICOLUMN_t; 

when 204 => 
--# line 326 "rc.l"
 return LBS_NOINTEGRALHEIGHT_t; 

when 205 => 
--# line 327 "rc.l"
 return LBS_NOREDRAW_t; 

when 206 => 
--# line 328 "rc.l"
 return LBS_NOSEL_t; 

when 207 => 
--# line 329 "rc.l"
 return LBS_NOTIFY_t; 

when 208 => 
--# line 330 "rc.l"
 return LBS_OWNERDRAWFIXED_t; 

when 209 => 
--# line 331 "rc.l"
 return LBS_SORT_t; 

when 210 => 
--# line 332 "rc.l"
 return LBS_USETABSTOPS_t; 

-- Progress bar styles
when 211 => 
--# line 335 "rc.l"
 return PBS_SMOOTH_t; 

when 212 => 
--# line 336 "rc.l"
 return PBS_VERTICAL_t; 

-- Scrollbar styles
when 213 => 
--# line 339 "rc.l"
 return SBS_VERT_t; 

-- Trackbar styles
when 214 => 
--# line 342 "rc.l"
 return TBS_AUTOTICKS_t; 

when 215 => 
--# line 343 "rc.l"
 return TBS_BOTTOM_t; 

when 216 => 
--# line 344 "rc.l"
 return TBS_BOTH_t; 

when 217 => 
--# line 345 "rc.l"
 return TBS_NOTICKS_t; 

when 218 => 
--# line 346 "rc.l"
 return TBS_VERT_t; 

when 219 => 
--# line 347 "rc.l"
 return TBS_TOP_t; 

when 220 => 
--# line 348 "rc.l"
 return TBS_TOOLTIPS_t; 

-- Up-down styles
when 221 => 
--# line 351 "rc.l"
 return UDS_ALIGNRIGHT_t; 

when 222 => 
--# line 352 "rc.l"
 return UDS_AUTOBUDDY_t; 

when 223 => 
--# line 353 "rc.l"
 return UDS_HORZ_t; 

when 224 => 
--# line 354 "rc.l"
 return UDS_ARROWKEYS_t; 

when 225 => 
--# line 355 "rc.l"
 return UDS_WRAP_t; 

when 226 => 
--# line 356 "rc.l"
 return UDS_NOTHOUSANDS_t; 

when 227 => 
--# line 357 "rc.l"
 return UDS_SETBUDDYINT_t; 

-- Listview styles
when 228 => 
--# line 360 "rc.l"
 return LVS_AUTOARRANGE_t; 

when 229 => 
--# line 361 "rc.l"
 return LVS_ALIGNLEFT_t; 

when 230 => 
--# line 362 "rc.l"
 return LVS_EDITLABELS_t; 

when 231 => 
--# line 363 "rc.l"
 return LVS_ICON_t; 

when 232 => 
--# line 364 "rc.l"
 return LVS_LIST_t; 

when 233 => 
--# line 365 "rc.l"
 return LVS_NOCOLUMNHEADER_t; 

when 234 => 
--# line 366 "rc.l"
 return LVS_NOSORTHEADER_t; 

when 235 => 
--# line 367 "rc.l"
 return LVS_REPORT_t; 

when 236 => 
--# line 368 "rc.l"
 return LVS_SHOWSELALWAYS_t; 

when 237 => 
--# line 369 "rc.l"
 return LVS_SINGLESEL_t; 

when 238 => 
--# line 370 "rc.l"
 return LVS_SORTASCENDING_t; 

-- Treeview styles
when 239 => 
--# line 373 "rc.l"
 return TVS_DISABLEDRAGDROP_t; 

when 240 => 
--# line 374 "rc.l"
 return TVS_EDITLABELS_t; 

when 241 => 
--# line 375 "rc.l"
 return TVS_INFOTIP_t; 

when 242 => 
--# line 376 "rc.l"
 return TVS_HASBUTTONS_t; 

when 243 => 
--# line 377 "rc.l"
 return TVS_HASLINES_t; 

when 244 => 
--# line 378 "rc.l"
 return TVS_LINESATROOT_t; 

when 245 => 
--# line 379 "rc.l"
 return TVS_NOSCROLL_t; 

when 246 => 
--# line 380 "rc.l"
 return TVS_NOTOOLTIPS_t; 

when 247 => 
--# line 381 "rc.l"
 return TVS_SHOWSELALWAYS_t; 

when 248 => 
--# line 382 "rc.l"
 return TVS_SINGLEEXPAND_t; 

when 249 => 
--# line 383 "rc.l"
 return TVS_TRACKSELECT_t; 

-- Date time picker styles
when 250 => 
--# line 386 "rc.l"
 return DTS_RIGHTALIGN_t; 

-- Month calendar styles
when 251 => 
--# line 389 "rc.l"
 return MCS_NOTODAY_t; 

-- Tab Control Styles
when 252 => 
--# line 392 "rc.l"
 return TCS_HOTTRACK_t; 

when 253 => 
--# line 393 "rc.l"
 return TCS_BUTTONS_t; 

-- Grid Styles
when 254 => 
--# line 396 "rc.l"
 return GS_COLUMNLABELS_t; 

when 255 => 
--# line 397 "rc.l"
 return GS_READONLY_t; 

-- Extended styles
when 256 => 
--# line 401 "rc.l"
 return WS_EX_ACCEPTFILES_t; 

when 257 => 
--# line 402 "rc.l"
 return WS_EX_APPWINDOW_t; 

when 258 => 
--# line 403 "rc.l"
 return WS_EX_CLIENTEDGE_t; 

when 259 => 
--# line 404 "rc.l"
 return WS_EX_CONTEXTHELP_t; 

when 260 => 
--# line 405 "rc.l"
 return WS_EX_CONTROLPARENT_t; 

when 261 => 
--# line 406 "rc.l"
 return WS_EX_DLGMODALFRAME_t; 

when 262 => 
--# line 407 "rc.l"
 return WS_EX_NOPARENTNOTIFY_t; 

when 263 => 
--# line 408 "rc.l"
 return WS_EX_RIGHT_t; 

when 264 => 
--# line 409 "rc.l"
 return WS_EX_STATICEDGE_t; 

when 265 => 
--# line 410 "rc.l"
 return WS_EX_TOOLWINDOW_t; 

when 266 => 
--# line 411 "rc.l"
 return WS_EX_TOPMOST_t; 

when 267 => 
--# line 412 "rc.l"
 return WS_EX_TRANSPARENT_t; 

-- Misc --
when 268 => 
--# line 415 "rc.l"
 return IDC_STATIC_t; 

when 269 => 
--# line 417 "rc.l"
 yylval.intval := 0; return NUMBER; 

when 270 => 
--# line 418 "rc.l"
 yylval.intval := 1; return NUMBER; 

when 271 => 
--# line 420 "rc.l"
 yylval.intval   := 0;
                   yylval.floatval := 0.0;
                   return NUMBER;
                 

when 272 => 
--# line 425 "rc.l"
 begin
                     yylval.intval := Long_Long_Integer'Value(yytext);
                   exception
                     when Constraint_Error =>
                      -- declare
                      --   msg: constant String:=
                      --    "Error with integer ? [" & yytext & ']';
                      -- begin
                      --   Put_Line(Standard_Error, msg);
                      --   raise Constraint_Error with msg;
                      -- end;
                      yylval.intval := -1;
                      -- not nice at all, but a >2**31 number
                      -- seems to appear only at top (some checksum)
                   end;
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 273 => 
--# line 443 "rc.l"
 yylval.intval := Long_Long_Integer'Value("8#"&yytext&'#');
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 274 => 
--# line 447 "rc.l"

                   yylval.floatval := Long_Float'Value(yytext);
                   return FLOAT_t;
                   

when 275 => 
--# line 452 "rc.l"
 declare
                     hexa_c: String:= yytext;
                     hexa_last: Integer:= hexa_c'Last;
                   begin
                     if hexa_c(hexa_last)='L' then
                       hexa_last:= hexa_last - 1;
                     end if;
                     yylval.intval := Long_Long_Integer'Value("16#" & hexa_c(hexa_c'First+2 .. hexa_last) & '#');
                     yylval.floatval:= Long_Float( yylval.intval );
                     return NUMBER;
                   end;
                

when 276 => 
--# line 465 "rc.l"
return RCString; -- borrowed from ada95.l

-- Doesn't work with double quotes
-- \"({NOTGUIL})*\"    {return RCString;}
when 277 => 
--# line 470 "rc.l"
return INCString;

when 278 => 
--# line 472 "rc.l"
 return IDENT_t; 

when 279 => 
--# line 475 "rc.l"
 null; -- \t  ;

when 280 => 
--# line 476 "rc.l"
linenum:= linenum+1;

when 281 => 
--# line 478 "rc.l"
 null; -- ??
                     -- C: return *yytext;
                   

-- "("                { return '('; }
-- ")"                { return ')'; }
-- "}"                { return '}'; }
-- "{"                { return '{'; }
when 282 => 
--# line 486 "rc.l"
ECHO;
when YY_END_OF_BUFFER + INITIAL + 1 => 
    return End_Of_Input;
                when YY_END_OF_BUFFER =>
                    -- undo the effects of YY_DO_BEFORE_ACTION
                    yy_ch_buf(yy_cp) := yy_hold_char;

                    yytext_ptr := yy_bp;

                    case yy_get_next_buffer is
                        when EOB_ACT_END_OF_FILE =>
                            begin
                            if yywrap then
                                -- note: because we've taken care in
                                -- yy_get_next_buffer() to have set up yytext,
                                -- we can now set up yy_c_buf_p so that if some
                                -- total hoser (like aflex itself) wants
                                -- to call the scanner after we return the
                                -- End_Of_Input, it'll still work - another
                                -- End_Of_Input will get returned.

                                yy_c_buf_p := yytext_ptr;

                                yy_act := YY_STATE_EOF((yy_start - 1) / 2);

                                goto do_action;
                            else
                                --  start processing a new file
                                yy_init := true;
                                goto new_file;
                            end if;
                            end;
                        when EOB_ACT_RESTART_SCAN =>
                            yy_c_buf_p := yytext_ptr;
                            yy_hold_char := yy_ch_buf(yy_c_buf_p);
                        when EOB_ACT_LAST_MATCH =>
                            yy_c_buf_p := yy_n_chars;
                            yy_current_state := yy_get_previous_state;

                            yy_cp := yy_c_buf_p;
                            yy_bp := yytext_ptr;
                            goto next_action;
                        when others => null;
                        end case; -- case yy_get_next_buffer()
                when others =>
                    Text_IO.put( "action # " );
                    Text_IO.put( INTEGER'IMAGE(yy_act) );
                    Text_IO.new_line;
                    raise AFLEX_INTERNAL_ERROR;
            end case; -- case (yy_act)
        end loop; -- end of loop waiting for end of file
end YYLex;
--# line 486 "rc.l"
