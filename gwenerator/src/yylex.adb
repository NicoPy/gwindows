--  Warning: This lexical scanner is automatically generated by AFLEX.
--           It is useless to modify it. Change the ".Y" & ".L" files instead.
with Text_IO; use Text_IO;
with rc_dfa; use rc_dfa; 
with rc_io; use rc_io; 
--# line 1 "rc.l"
--------------------------------------------------------------------------
--  RC.l
--
--  Resource Compiler script lexer file (AFLEX)
--
--  Copyright (c) Gautier de Montmollin 2008
--  SWITZERLAND
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
-- NB: this is the MIT License, as found 28-Jul-2008 on the site
-- http://www.opensource.org/licenses/mit-license.php
--------------------------------------------------------------------------
--
-- Change log:
--
-- 28-Jul-2008 GdM: Created
--
--# line 50 "rc.l"


with RC_Tokens; use RC_Tokens;
with RC_Help;   use RC_Help;

function YYLex return Token is
subtype Short is Integer range -32768..32767;
    yy_act : Integer;
    yy_c   : Short;

-- returned upon end-of-file
YY_END_TOK : constant Integer := 0;
YY_END_OF_BUFFER : constant := 244;
subtype yy_state_type is Integer;
yy_current_state : yy_state_type;
INITIAL : constant := 0;
yy_accept : constant array(0..1765) of Short :=
    (   0,
      235,  235,  244,  243,  240,  241,  243,  243,    4,  235,
      235,  243,  232,  233,  243,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,    5,    3,    6,  240,    0,
      237,    0,    0,    0,    0,    0,  235,  235,  233,    0,
      235,    0,    0,  234,    0,  233,    0,  238,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,    0,  235,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,    0,    0,    0,    0,    0,    0,    0,  235,    0,
        0,    0,    2,  234,  236,  239,   71,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,   41,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,    8,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,    0,
        0,    0,    0,    0,   11,    0,    0,    0,    0,    0,
        0,    1,  236,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

       36,  239,  239,  239,   58,   83,  239,  239,  239,  239,
      239,  239,  239,  239,   20,  239,  239,  239,  239,  239,
      239,  239,  239,   27,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      230,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      239,  239,   68,  239,  239,  239,   40,  239,   81,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,   35,  239,  239,   38,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  231,  239,  239,  239,  239,
      239,   28,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,   37,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
       63,  239,  239,  239,  239,  239,  239,   39,  239,  239,
      239,   72,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,   32,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,   82,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,    0,    0,   15,    0,   14,    0,    0,    0,    0,
        0,    0,  239,  239,  239,  239,  239,   84,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  167,
      239,   87,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,   85,  239,  239,  239,   18,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
       57,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,   52,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,    0,    0,   16,    0,
       11,    0,    0,    0,    0,   10,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  160,  161,  239,  239,
      239,  239,  239,   34,  239,  239,  239,  239,  239,  239,
      239,  239,  239,   56,  239,   42,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,   33,  239,    0,   78,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,   46,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,   29,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  136,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  195,
      239,  239,  239,   86,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,   67,   69,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,    0,    9,    0,   11,    7,
        0,   17,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  166,  239,  239,
      239,  239,  239,  239,  239,  176,  239,   49,   44,  239,
      239,  239,   19,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,   43,  239,  239,
      239,  239,  239,  239,  239,  239,  151,  239,  239,  239,
      239,  239,  239,   45,  239,  239,   59,   31,  239,  239,
      239,  239,  239,  239,  239,  239,  186,  239,  239,  239,
      203,  239,  239,  239,  239,  239,  239,  239,   62,  239,

       26,   70,  239,  239,  239,  239,  239,  239,  189,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  192,  239,  239,  239,  194,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      197,  239,  199,  239,  239,  239,  239,  239,  239,  239,
      239,  102,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  106,  239,  239,  239,  110,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      154,  239,  239,  157,  158,  159,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  117,  118,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  145,  239,
      147,  239,  239,  239,  239,  239,  239,  239,    0,   79,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  183,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,   61,  239,  239,  239,  239,  239,  239,  239,   55,
       64,  130,  239,  239,  239,  239,  239,  239,  239,  239,
      140,  141,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,   99,  239,  239,  100,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,   51,  239,  239,  239,  239,  239,  239,  239,
      239,  168,  239,  239,  239,  239,  239,  170,  239,  239,
      239,   24,  239,   21,  239,  239,  120,  239,  239,  239,
      239,  128,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,    0,   77,  239,  239,  239,  239,
       23,  229,  239,  239,  239,  239,  239,  239,  184,  239,
      239,  239,  239,  239,  205,  239,  239,  239,  239,  239,
      239,  239,  239,   53,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  191,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  101,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  107,  239,  239,  111,  112,  113,  239,  114,  115,
      239,  239,  239,  239,  239,  239,  162,  239,  239,  165,
      239,  239,  239,  239,  239,  239,  239,  239,   30,  239,
      239,  121,  239,  239,  239,  239,  239,  129,  239,  239,
      239,  239,  239,  149,  150,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  216,  239,  239,  239,  239,  239,   47,
       25,  239,  239,  239,  239,  135,  239,  138,  239,  239,
       89,  239,  193,  239,  239,   22,  239,  239,  239,  208,
      239,  239,  239,  239,  239,  239,  239,   73,   96,  239,
       98,  239,  104,  105,  239,  239,  239,  239,  239,  239,
      224,  239,  239,  239,  239,  239,  239,  239,   65,  239,
       50,  239,  239,  239,  163,  164,  239,  239,  172,  239,
      239,  239,  239,  239,  239,  239,  122,  239,  124,  239,
      127,  239,  239,  239,  146,  239,  152,  239,  239,    0,
       80,  239,    0,   74,  239,  239,  239,  239,  239,  239,

      239,  239,  239,  239,  239,  239,  239,  239,   60,  239,
      188,  239,  239,  239,  132,  239,  239,  239,  239,  142,
      239,  196,  217,  239,  239,  210,  239,  212,  239,  239,
      239,  239,   95,  239,  239,  239,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,   90,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  239,   54,
      239,  239,  123,  239,  239,  239,  239,  148,  153,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  202,  239,
      239,  239,  239,  239,  239,  239,  131,  239,  239,  239,
      239,  190,  239,  239,  239,  239,  239,  198,  239,   97,

      239,  239,  239,  239,  239,  239,  239,  239,  239,  227,
      239,  239,  239,  116,  239,  239,  239,  239,  239,  239,
      174,  239,  239,  239,  119,  126,  239,  215,  143,  144,
        0,   76,  239,  239,  239,  179,  239,  239,  239,  239,
      239,  239,  239,  239,  239,   92,  239,   93,  133,  134,
      239,  239,   94,  209,  239,  213,  239,  239,  239,  239,
      239,  239,  239,  239,  239,  239,  239,  239,  109,  108,
       48,  155,  239,  169,  239,  239,  239,   66,  239,  239,
      239,  178,  181,  180,  239,  239,  187,  201,  239,  239,
      239,    0,   75,  239,  239,  239,  211,  239,  200,  103,

      239,  219,  239,  239,  239,  239,  239,  239,  239,  239,
      239,  173,  239,  239,  125,  239,  239,  239,  204,  239,
      239,  239,  139,  239,  239,  220,  239,  239,  239,  225,
      226,  239,  239,  239,  239,  239,  239,  239,  239,  206,
      207,  137,  214,  218,  221,  239,  239,  228,  156,  239,
      175,   91,  239,  239,  185,  239,  239,  171,  177,  239,
      222,  239,  182,  223,    0
    ) ;

yy_ec : constant array(ASCII.NUL..Character'Last) of short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   13,
       14,   13,   13,   13,   13,   15,   15,    1,    1,   16,
        1,   17,    1,    1,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       28,   35,   36,   37,   38,   39,   40,   41,   42,   43,
        1,    1,    1,    1,   18,    1,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   28,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,    1,    1, others=> 1

    ) ;

yy_meta : constant array(0..46) of short :=
    (   0,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        1,    4,    4,    4,    4,    1,    1,    3,    4,    4,
        4,    4,    4,    4,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    1,    1,    1
    ) ;

yy_base : constant array(0..1795) of Short :=
    (   0,
        0,    0, 2165, 2166, 2162, 2166, 2159,   25, 2166,   41,
       53,   51,   67,   60, 2145,    0,   57,   61,   90,   75,
      122,   73,   23, 2138,   28,  106,   80, 2127,   84,   77,
      129,  118,   96,  137,   50, 2166, 2166, 2166, 2157, 2154,
     2153, 2133,  110,   83, 2120, 2122,  155,  161,  167,  179,
      183, 2147, 2149,  189,    0,  195, 2134, 2166,    0, 2129,
     2112, 2121, 2126, 2109, 2120, 2107, 2110, 2124, 2104, 2106,
     2103,  164, 2119,  115, 2114, 2101, 2098,  187,  153, 2109,
     2115, 2096,  201,  207, 2104, 2108, 2111, 2092, 2097,   91,
     2094,  129, 2098, 2094, 2090, 2101, 2102, 2088, 2083, 2082,

     2094, 2080, 2079, 2082,  185,  198, 2077, 2078,  203,  192,
     2089,  211, 2074, 2074, 2074, 2080, 2088,  211, 2069, 2068,
     2062, 2069,  212, 2065, 2064, 2077, 2068, 2062, 2061, 2077,
     2076, 2069,  205, 2070,  230, 2070, 2071, 2067,  225, 2082,
      236, 2084, 2166,  244, 2056, 2062,    0, 2053, 2056, 2049,
     2054, 2049, 2058,  254, 2041, 2040, 2058, 2040, 2053, 2037,
     2052, 2034, 2029, 2033, 2045, 2033, 2039, 2035, 2043, 2036,
      280, 2044, 2024,    0,  298, 2023, 2023, 2035, 2034, 2019,
     2013, 2016, 2031, 2018, 2019, 2032, 2028, 2023, 2029, 2009,
     2004, 2026, 2025, 2004, 2004, 2017, 2007,    0, 2020, 1999,

     2006,  223, 2012, 2008, 2006, 2001, 1990, 2012, 1996, 2009,
     2003,  319, 1989, 1998, 1994, 2005, 2004, 1984, 1990, 1998,
     1995, 1999, 1998, 1982, 1976, 1977, 1975,  233,  340, 1984,
     1986, 1986, 1981, 2004, 2166,  241,  257, 1976, 1980, 1981,
     1997, 2166, 2166, 1972, 1982, 1973,  251, 1967, 1979, 1968,
     1960, 1957,  216, 1971, 1963, 1969, 1953, 1950, 1951, 1961,
     1954, 1965, 1952, 1957,  273, 1964, 1953, 1945, 1947, 1944,
     1941, 1944, 1939, 1937, 1949, 1940, 1953, 1939, 1948,  228,
     1942, 1935, 1934, 1933,  254, 1930, 1927, 1925, 1939, 1923,
     1922, 1936, 1939,  275, 1923, 1937, 1913, 1931,  289, 1931,

        0, 1929, 1917, 1927,    0,    0, 1913, 1911, 1909,  358,
     1926, 1908,  288, 1912,  256, 1917, 1923, 1902, 1901, 1905,
     1905, 1899, 1901,    0, 1915, 1901, 1914, 1895, 1892, 1900,
     1894, 1891,  270, 1904, 1894, 1890, 1903, 1900, 1889, 1898,
      228, 1894, 1896, 1886, 1894,  363, 1890, 1888, 1894, 1884,
        0,  371,  295, 1872, 1888, 1883, 1880, 1881, 1870,   50,
     1873,  315,  278, 1864, 1869, 1867,  263, 1869,  158,  324,
      320, 1869, 1897, 1896, 1874,  334,  345, 1859, 1865, 1871,
     1871, 1856,    0, 1856, 1865, 1871,    0, 1855,    0, 1851,
     1850, 1849, 1848, 1852, 1864, 1858, 1851, 1848, 1843, 1853,

     1843, 1853, 1843, 1841, 1835,  337, 1853, 1831,  340, 1849,
      355,    0, 1849, 1835,    0, 1832, 1839, 1829, 1832, 1838,
     1827, 1840, 1830, 1827, 1826, 1816, 1835, 1833, 1827, 1816,
     1829, 1815, 1823, 1826, 1811, 1815, 1816, 1814, 1813, 1807,
     1823, 1816, 1806, 1807, 1808,    0, 1807, 1800, 1797, 1792,
     1810,    0, 1810, 1811, 1800, 1792, 1801, 1808, 1799, 1784,
     1805, 1785, 1789, 1781, 1787, 1783, 1785,    0,  355, 1796,
     1783, 1792,  366, 1781,  334, 1776, 1791, 1791, 1787, 1786,
        0, 1789, 1786, 1783, 1767, 1784, 1771,    0, 1779, 1771,
     1781,    0, 1762, 1779, 1765, 1774, 1776, 1761, 1769, 1758,

     1772, 1759, 1757, 1761, 1773, 1761,    0, 1747, 1751, 1750,
     1749, 1758, 1747, 1747, 1759, 1757, 1757, 1743, 1747, 1740,
     1746, 1736, 1737, 1736, 1733, 1735,    0, 1733, 1742, 1728,
     1744, 1742, 1738, 1725, 1725, 1731, 1730, 1720, 1730, 1736,
     1720, 1731, 1710, 1718, 1715, 1705, 1711, 1726, 1718, 1708,
     1722, 1719, 1738, 2166, 1737, 2166, 1736, 1735,  384, 1715,
     1717, 1732, 1699, 1710, 1695, 1708, 1708,    0, 1710, 1695,
     1696, 1689, 1688, 1687, 1686, 1685, 1698, 1694, 1693,    0,
     1686,    0, 1685, 1679, 1679, 1681, 1677, 1680, 1680, 1675,
     1672, 1675, 1685, 1673, 1675,    0, 1673, 1677, 1675, 1678,

     1678, 1669, 1665, 1660, 1659, 1672, 1675, 1674, 1670, 1667,
     1660, 1658, 1663, 1646, 1653, 1648, 1647, 1663, 1661, 1645,
     1658, 1653, 1655, 1528, 1537, 1540,  408, 1538, 1523, 1521,
        0, 1522, 1527, 1534, 1513, 1526,   88,  122,  125,  241,
      391,  249,  268,  295,  311,  330,  333,  353,  352,  370,
      372,  371,  383,  386,  399,  400,  407,  399,  395,  396,
      410,  396,  398,  398,  398,  410,  403,  419,  403,  410,
      421,  406,  421,  403,  414,  410,  413,  419,  416,  422,
      418,    0,  419,  420,  421,  422,  427,  427,  426,  443,
      430,  447,  431,  444,  437,  434,  439,  438,  439,  438,

      457,  459,  446,  437,  443,  444,  461,  460,  462,  448,
      456,  453,  469,  465,  471,  453,  458,  467,  468,  458,
      474,  467,  463,  479,  474,  467,  501,  502, 2166,  506,
     2166,  507,  488,  509,  510, 2166,  495,  497,  497,  496,
      491,  482,  499,  502,  489,  500,    0,  487,  498,  491,
      497,  491,  492,    0,  497,  512,  498,  497,  512,  502,
      500,  515,  498,    0,  499,    0,  518,  522,  511,  503,
      526,  508,  514,  525,  526,  528,  521,  522,  523,  521,
      525,  523,  531,  521,  533,  537,  535,  540,  531,  525,
      533,  530,  533,  534,    0,  545,  568, 2166,  572,  545,

      561,  549,  545,  555,  553,  568,  569,  574,  571,  559,
      559,  565,  575,  572,  577,  564,  565,    0,  578,  571,
      573,  573,  574,  568,  572,  577,  591,  593,  582,  584,
      592,  582,  583,    0,  582,  586,  586,  587,  601,  589,
      608,  595,  610,  601,  608,  602,  598,    0,  602,  612,
      600,  607,  615,  616,  621,  608,  616,  616,  614,    0,
      608,  609,  617,    0,  613,  629,  617,  628,  631,  621,
      615,  623,  614,  632,  626,  640,  635,    0,  624,  637,
      632,  627,  644,  641,  647,  634,  651,  637,  652,  644,
      642,  649,  641,  646,  646,  649,  652,  653,  651,  667,

      665,  652,  661,  671,  659,  690, 2166,  691, 2166, 2166,
      692, 2166,  659,  676,  661,  670,  667,  678,  676,  684,
      670,  674,  671,  684,  678,  687,  683,    0,  688,  686,
      693,  692,  678,  681,  687,    0,  683,    0,    0,  685,
      682,  697,    0,  702,  701,  695,  690,  685,  694,  692,
      706,  706,  708,  700,  709,  712,  699,    0,  701,  702,
      704,  710,  706,  710,  710,  712,    0,  724,  723,  711,
      706,  748,  731,    0,  737,  734,    0,    0,  742,  731,
      729,  740,  731,  739,  746,  736,    0,  753,  741,  755,
        0,  740,  741,  741,  759,  757,  745,  752,    0,  764,

        0,    0,  756,  761,  767,  753,  750,  765,    0,  754,
      755,  757,  771,  761,  767,  775,  766,  776,  774,  779,
      771,  769,  785,  770,    0,  775,  788,  773,    0,  776,
      774,  795,  776,  788,  779,  781,  783,  786,  784,  781,
        0,  789,    0,  793,  792,  798,  805,  795,  801,  794,
      797,    0,  804,  802,  814,  813,  801,  809,  805,  804,
      814,  821,  808,  824,    0,  814,  818,  819,    0,  814,
      816,  816,  826,  821,  822,  820,  824,  832,  836,  837,
        0,  835,  837,    0,    0,    0,  819,  834,  827,  834,
      829,  829,  836,  834,  833,  847,  847,  844,  845,  836,

      841,  845,  853,    0,  846,  841,  849,  838,  859,  847,
      852,  847,  862,  853,  868,  869,  868,  869,    0,  864,
        0,  853,  858,  864,  876,  859,  896,  872,  905, 2166,
      942,  876,  874,  890,  884,  893,  881,  896,  895,    0,
      877,  898,  901,  892,  888,  887,  888,  903,  892,  910,
      908,    0,  911,  912,  899,  914,  904,  904,  902,    0,
        0,    0,  904,  929,  927,  928,  935,  917,  933,  918,
        0,    0,  939,  933,  937,  934,  937,  940,  949,  947,
      949,  934,  940,  946,  955,  942,  946,  954,  949,  941,
      961,  957,  959,    0,  946,  961,    0,  953,  969,  967,

      960,  969,  953,  971,  958,  977,  971,  961,  969,  969,
      969,  972,  960,  961,  964,  968,  973,  973,  986,  980,
      976,  993,    0,  980,  976,  994,  989,  980,  986, 1000,
      997,    0, 1000,  999,  983,  997,  990,    0,  990, 1006,
      991,    0, 1006,    0,  997, 1005,    0,  996, 1006, 1015,
      999,    0, 1011, 1005, 1008, 1009, 1005, 1006, 1010, 1020,
     1022, 1003, 1010, 1009, 1045, 2166, 1048, 1039, 1037, 1029,
        0,    0, 1039, 1040, 1039, 1034, 1038, 1044,    0, 1035,
     1035, 1049, 1038, 1048,    0, 1045, 1055, 1035, 1059, 1049,
     1061, 1045, 1052,    0, 1051, 1047, 1066, 1065, 1056, 1054,

     1052, 1057, 1050, 1072, 1075, 1074, 1077,    0, 1063, 1066,
     1080, 1079, 1073, 1067, 1082, 1072, 1070, 1078, 1072, 1080,
     1088, 1076, 1077, 1081, 1075, 1081, 1077,    0, 1088, 1097,
     1097, 1087, 1095, 1091, 1101, 1090, 1089, 1100, 1088, 1096,
     1094,    0, 1108, 1109,    0,    0,    0, 1114,    0,    0,
     1098, 1099, 1096, 1101, 1110, 1107,    0, 1118, 1102,    0,
     1108, 1112, 1113, 1114, 1128, 1111, 1120, 1117,    0, 1113,
     1129,    0, 1116, 1123, 1130, 1121, 1120,    0, 1131, 1126,
     1127, 1138, 1127,    0,    0, 1140, 1129, 1129, 1165, 1211,
     1143, 1155, 1146, 1149, 1157, 1148, 1165, 1148, 1162, 1168,

     1165, 1170, 1167,    0, 1162, 1173, 1163, 1167, 1176,    0,
        0, 1165, 1160, 1179, 1163,    0, 1165,    0, 1174, 1165,
        0, 1174,    0, 1168, 1176,    0, 1187, 1174, 1172,    0,
     1186, 1193, 1197, 1206, 1184, 1210, 1194,    0,    0, 1198,
        0, 1205,    0,    0, 1196, 1202, 1198, 1195, 1204, 1215,
        0, 1218, 1213, 1205, 1208, 1223, 1224, 1214,    0, 1210,
        0, 1210, 1228, 1229,    0,    0, 1217, 1218, 1222, 1228,
     1214, 1231, 1241, 1228, 1225, 1232,    0, 1240,    0, 1231,
        0, 1240, 1236, 1237,    0, 1231,    0, 1237, 1241, 1268,
     2166, 1271, 1278, 2166, 1317, 1250, 1248, 1260, 1248, 1253,

     1271, 1251, 1259, 1256, 1262, 1276, 1266, 1265,    0, 1262,
        0, 1266, 1264, 1278,    0, 1277, 1276, 1282, 1274,    0,
     1270,    0,    0, 1271, 1276,    0, 1276,    0, 1276, 1281,
     1276, 1281,    0, 1284, 1295, 1305, 1308, 1308, 1295, 1305,
     1304, 1314, 1306, 1302, 1321, 1308, 1309, 1320,    0, 1311,
     1312, 1308, 1317, 1312, 1322, 1314, 1327, 1331, 1332,    0,
     1331, 1321,    0, 1318, 1325, 1328, 1329,    0,    0, 1363,
     1324, 1350, 1339, 1345, 1354, 1348, 1357, 1348,    0, 1358,
     1362, 1345, 1364, 1351, 1356, 1353,    0, 1367, 1355, 1352,
     1374,    0, 1358, 1359, 1363, 1361, 1358,    0, 1377,    0,

     1375, 1374, 1369, 1381, 1378, 1371, 1369, 1388, 1389,    0,
     1377, 1372, 1373,    0, 1383, 1375, 1380, 1388, 1398, 1384,
        0, 1394, 1386, 1393,    0,    0, 1392,    0,    0,    0,
     1422, 2166, 1425, 1414, 1407,    0, 1406, 1409, 1414, 1416,
     1408, 1422, 1423, 1428, 1421,    0, 1471,    0,    0,    0,
     1414, 1425,    0,    0, 1414,    0, 1433, 1417, 1418, 1425,
     1416, 1432, 1435, 1440, 1428, 1436, 1429, 1440,    0,    0,
        0,    0, 1427,    0, 1430, 1429, 1426,    0, 1449, 1459,
     1448,    0,    0,    0, 1461, 1444,    0,    0, 1451, 1447,
     1458, 1488, 2166, 1517, 1473, 1470,    0, 1452,    0,    0,

     1472,    0, 1473, 1467, 1463, 1466, 1477, 1461, 1470, 1470,
     1471,    0, 1482, 1470,    0, 1474, 1481, 1486,    0, 1474,
     1486, 1478,    0, 1477, 1478,    0, 1493, 1506, 1493,    0,
        0, 1494, 1500, 1505, 1514, 1501, 1508, 1514, 1518,    0,
        0,    0,    0,    0,    0, 1509, 1515,    0,    0, 1513,
        0,    0, 1514, 1519,    0, 1509, 1523,    0,    0, 1511,
        0, 1507,    0,    0, 2166, 1563, 1567, 1569, 1573, 1577,
     1546, 1581, 1585, 1589, 1593, 1597, 1601, 1605, 1609, 1613,
     1617, 1621, 1625, 1629, 1633, 1637, 1641, 1645, 1649, 1653,
     1657, 1661, 1665, 1669, 1673

    ) ;

yy_def : constant array(0..1795) of Short :=
    (   0,
     1765,    1, 1765, 1765, 1765, 1765, 1766, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1767, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1765, 1765, 1765, 1765, 1766,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1769, 1770, 1765, 1771, 1765, 1767, 1765, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1765, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1765, 1765, 1765, 1772, 1765, 1765, 1765, 1765, 1769,
     1773, 1770, 1765, 1765, 1771, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1765,
     1765, 1765, 1765, 1772, 1765, 1772, 1772, 1765, 1765, 1765,
     1769, 1765, 1765, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1765, 1774, 1775, 1765, 1772, 1772, 1765, 1765, 1765,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1765, 1774, 1765, 1775, 1765, 1776, 1777, 1772, 1765,
     1765, 1778, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1779, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1780, 1776, 1765, 1777,
     1765, 1781, 1765, 1782, 1778, 1765, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1783, 1765, 1779, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1780, 1765, 1781, 1765, 1765,
     1782, 1765, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1784, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1785, 1768, 1786, 1765,
     1784, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1787, 1765, 1785, 1267, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1267, 1788, 1789,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1267, 1790,
     1765, 1788, 1791, 1765, 1789, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1792,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1793, 1765, 1792, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1794, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1795, 1765, 1794, 1768, 1768, 1768, 1768, 1768, 1768,

     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768,    0, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765

    ) ;

yy_nxt : constant array(0..2212) of Short :=
    (   0,
        4,    5,    6,    7,    8,    4,    4,    9,   10,   11,
       12,   13,   14,   14,   14,   15,    4,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   25,   16,   16,   26,
       27,   28,   16,   29,   30,   31,   32,   33,   34,   35,
       16,   16,   16,   36,   37,   38,   42,   43,   95,   96,
       47,   44,   48,   49,   49,   49,   52,   92,   45,   97,
       93,   53,   46,   50,   51,   51,   51,   51,  532,   47,
      130,   56,   56,   56,   56,   50,   47,   60,   48,   54,
       54,   48,   50,   65,  533,  131,   61,   66,   62,   50,
       67,   89,   63,   77,   64,  111,   68,   78,   69,   90,

      103,   79,  104,  107,   80,   91,  135,   55,   70,   71,
       81,   82,  105,  112,  136,   72,  108,  125,  109,   73,
      178,  110,   74,  808,   98,   99,   75,   76,   83,  126,
       83,  179,  100,   84,   84,   84,   84,  119,  120,  133,
      121,  134,  101,   85,  102,  161,  162,  181,  113,  114,
      122,  115,  123,   86,  116,  127,  124,   87,  809,  128,
      810,  182,   88,  129,  117,  118,   51,   51,   51,   51,
       47,  168,   48,   48,   48,   48,   47,   50,   56,   56,
       56,   56,  158,   50,  546,   83,  159,   83,  169,   50,
      139,  139,  139,  139,   51,   51,   51,   51,   47,  547,

      144,  144,  144,   48,   47,   50,   56,   56,   56,   56,
      166,   50,  139,  139,  139,  139,  195,   50,   84,   84,
       84,   84,  167,  196,  197,  201,  203,  204,  206,  213,
      220,  231,  235,  207,  198,  202,  139,  139,  139,  139,
      232,  141,  392,  235,  322,  214,  242,  323,  393,  221,
      424,  236,  215,   47,  502,  144,  144,  144,   48,  235,
      425,  237,  358,  376,  384,  503,   50,  251,  359,  360,
      811,  385,  252,  253,  254,  475,  430,  255,  377,  431,
      815,  543,  476,  256,  257,  386,  258,  259,  260,  544,
      261,  405,  262,  279,  406,  432,  493,  441,  407,  494,

      280,  442,  816,  281,  538,  408,  469,  539,  409,  282,
      283,  284,  447,  522,  470,  285,  288,  817,  289,  471,
      523,  448,  472,  473,  449,  450,  524,  451,  290,  291,
      292,  293,  294,  535,  525,  295,  235,  296,  333,  334,
      536,  335,  548,  336,  537,  337,  550,  235,  338,  549,
      339,  818,  654,  340,  341,  551,  819,  558,  342,  361,
      362,  363,  364,  585,  365,  366,  589,  559,  655,  820,
      367,  586,  590,  368,  592,  369,  370,  593,  371,  459,
      460,  508,  509,  461,  646,  821,  235,  822,  462,  463,
      464,  651,  647,  465,  510,  466,  517,  518,  652,  511,

      519,  512,  520,  823,  824,  825,  521,  732,  797,  797,
      798,  797,  797,  797,  797,  797,  797,  812,  797,  826,
      827,  828,  829,  797,  797,  830,  813,  814,  831,  832,
      833,  834,  835,  836,  837,  838,  839,  840,  841,  842,
      843,  844,  845,  846,  847,  848,  849,  850,  851,  852,
      853,  797,  797,  797,  854,  855,  856,  857,  858,  859,
      860,  861,  862,  863,  864,  865,  866,  867,  868,  869,
      870,  871,  872,  873,  874,  875,  876,  877,  878,  879,
      880,  881,  882,  883,  884,  885,  886,  887,  888,  889,
      895,  890,  896,  897,  898,  899,  900,  901,  902,  903,

      904,  905,  891,  907,  729,  892,  893,  894,  731,  909,
      910,  912,  736,  913,  914,  915,  916,  917,  918,  919,
      921,  922,  923,  924,  925,  926,  927,  928,  929,  930,
      931,  932,  933,  920,  934,  935,  936,  937,  938,  939,
      940,  941,  942,  943,  944,  945,  946,  947,  948,  950,
      951,  952,  953,  954,  955,  956,  957,  958,  959,  961,
      949,  962,  963,  964,  965,  966,  967,  968,  969,  970,
      798,  960,  797,  797,  798,  797,  797,  797,  797,  797,
      797,  971,  797,  972,  973,  974,  975,  797,  797,  976,
      977,  978,  979,  980,  981,  982,  983,  984,  985,  986,

      987,  988,  989,  990,  991,  992,  993,  994,  995,  996,
      997,  998,  999, 1000, 1001,  797,  797,  797, 1002, 1003,
     1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
     1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
     1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035,
     1036, 1037, 1026, 1038, 1039, 1040, 1041, 1042, 1034, 1043,
     1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
     1054, 1055, 1056, 1058, 1060, 1061, 1059, 1062, 1063, 1065,
     1064, 1066, 1067, 1068, 1069, 1057, 1070, 1071, 1072, 1073,
     1074, 1075,  907,  909,  912, 1076, 1077, 1078, 1079, 1080,

     1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
     1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
     1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
     1111, 1112, 1114, 1115, 1113, 1116, 1117, 1118, 1119, 1120,
     1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1129,
     1130, 1129, 1129, 1129, 1129, 1129, 1129, 1132, 1129, 1133,
     1134, 1135, 1136, 1129, 1129, 1137, 1138, 1139, 1140, 1141,
     1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
     1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
     1162, 1129, 1129, 1129, 1163, 1165, 1166, 1167, 1168, 1169,

     1170, 1171, 1172, 1173, 1174, 1164, 1175, 1176, 1177, 1178,
     1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
     1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
     1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
     1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
     1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
     1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
     1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
     1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
     1259, 1260, 1261, 1262, 1263, 1264, 1265, 1265, 1266, 1265,

     1265, 1265, 1265, 1265, 1265, 1269, 1265, 1130, 1270, 1271,
     1272, 1265, 1265, 1273, 1274, 1275, 1276, 1278, 1279, 1280,
     1281, 1282, 1283, 1284, 1285, 1286, 1268, 1287, 1288, 1277,
     1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1265,
     1265, 1265, 1129, 1129, 1130, 1129, 1129, 1129, 1129, 1129,
     1129, 1298, 1129, 1299, 1300, 1301, 1302, 1129, 1129, 1303,
     1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
     1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
     1324, 1325, 1326, 1327, 1328, 1129, 1129, 1129, 1329, 1330,
     1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,

     1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
     1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
     1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
     1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
     1381, 1382, 1383, 1384, 1385, 1386, 1387, 1266, 1265, 1265,
     1266, 1265, 1265, 1265, 1265, 1265, 1265, 1388, 1265, 1389,
     1390, 1391, 1392, 1265, 1265, 1393, 1394, 1395, 1396, 1397,
     1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
     1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
     1418, 1265, 1265, 1265, 1419, 1420, 1421, 1422, 1423, 1424,

     1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
     1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
     1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455,
     1456, 1457, 1458, 1459, 1460, 1449, 1461, 1462, 1463, 1464,
     1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
     1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
     1485, 1486, 1487, 1488, 1489, 1490, 1490, 1491, 1490, 1490,
     1490, 1490, 1490, 1490, 1496, 1490, 1497, 1498, 1499, 1500,
     1490, 1490, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
     1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,

     1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1490, 1490,
     1490, 1493, 1493, 1494, 1493, 1493, 1493, 1493, 1493, 1493,
     1527, 1493, 1528, 1529, 1530, 1531, 1493, 1493, 1532, 1533,
     1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
     1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
     1554, 1555, 1556, 1557, 1493, 1493, 1493, 1558, 1559, 1560,
     1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
     1491, 1490, 1490, 1491, 1490, 1490, 1490, 1490, 1490, 1490,
     1494, 1490, 1571, 1572, 1573, 1574, 1490, 1490, 1575, 1576,
     1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,

     1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
     1597, 1598, 1599, 1600, 1490, 1490, 1490, 1493, 1493, 1494,
     1493, 1493, 1493, 1493, 1493, 1493, 1601, 1493, 1602, 1603,
     1604, 1605, 1493, 1493, 1606, 1607, 1608, 1609, 1610, 1611,
     1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
     1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1634,
     1493, 1493, 1493, 1631, 1631, 1632, 1631, 1631, 1631, 1631,
     1631, 1631, 1635, 1631, 1636, 1637, 1638, 1639, 1631, 1631,
     1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
     1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,

     1660, 1661, 1662, 1663, 1664, 1665, 1631, 1631, 1631, 1666,
     1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
     1677, 1678, 1679, 1680, 1632, 1631, 1631, 1632, 1631, 1631,
     1631, 1631, 1631, 1631, 1681, 1631, 1682, 1683, 1684, 1685,
     1631, 1631, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696,
     1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
     1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1631, 1631,
     1631, 1692, 1692, 1693, 1692, 1692, 1692, 1692, 1692, 1692,
     1715, 1692, 1716, 1717, 1718, 1719, 1692, 1692, 1720, 1721,
     1693, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,

     1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
     1741, 1742, 1743, 1744, 1692, 1692, 1692, 1692, 1692, 1693,
     1692, 1692, 1692, 1692, 1692, 1692, 1745, 1692, 1746, 1747,
     1748, 1749, 1692, 1692, 1750, 1751, 1752, 1753, 1754, 1755,
     1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,  145,
      807,  806,  805,  804,  803,  802,  801,  800,  796,  795,
     1692, 1692, 1692,   40,  794,   40,   40,   57,   57,   57,
       57,   59,   59,  140,  140,  140,  140,  142,  142,  142,
      142,  234,  234,  234,  234,  241,  241,  241,  241,  553,
      553,  553,  553,  555,  555,  555,  555,  728,  728,  728,

      728,  730,  730,  730,  730,  735,  735,  735,  735,  799,
      799,  799,  799,  906,  906,  906,  906,  908,  908,  908,
      908,  911,  911,  911,  911,  797,  797,  797,  797, 1131,
     1131, 1131, 1131, 1267, 1267, 1267, 1267, 1129, 1129, 1129,
     1129, 1265, 1265, 1265, 1265, 1492, 1492, 1492, 1492, 1495,
     1495, 1495, 1495, 1490, 1490, 1490, 1490, 1493, 1493, 1493,
     1493, 1633, 1633, 1633, 1633, 1631, 1631, 1631, 1631, 1694,
     1694, 1694, 1694, 1692, 1692, 1692, 1692,  793,  792,  791,
      790,  789,  788,  787,  786,  785,  784,  783,  782,  781,
      780,  779,  778,  777,  776,  775,  774,  773,  772,  771,

      770,  769,  768,  767,  766,  765,  764,  763,  762,  761,
      760,  759,  758,  757,  756,  755,  754,  753,  752,  751,
      750,  749,  748,  747,  746,  745,  744,  743,  742,  741,
      740,  739,  738,  737,  736,  734,  733,  731,  729,  556,
      554,  727,  726,  725,  724,  723,  722,  721,  720,  719,
      718,  717,  716,  715,  714,  713,  712,  711,  710,  709,
      708,  707,  706,  705,  704,  703,  702,  701,  700,  699,
      698,  697,  696,  695,  694,  693,  692,  691,  690,  689,
      688,  687,  686,  685,  684,  683,  682,  681,  680,  679,
      678,  677,  676,  675,  674,  673,  672,  671,  670,  669,

      668,  667,  666,  665,  664,  663,  662,  661,  660,  659,
      658,  657,  656,  653,  650,  649,  648,  645,  644,  643,
      642,  641,  640,  639,  638,  637,  636,  635,  634,  633,
      632,  631,  630,  629,  628,  627,  626,  625,  624,  623,
      622,  621,  620,  619,  618,  617,  616,  615,  614,  613,
      612,  611,  610,  609,  608,  607,  606,  605,  604,  603,
      602,  601,  600,  599,  598,  597,  596,  595,  594,  591,
      588,  587,  584,  583,  582,  581,  580,  579,  578,  577,
      576,  575,  574,  573,  572,  571,  570,  569,  568,  567,
      566,  565,  564,  563,  562,  561,  560,  557,  556,  554,

      552,  545,  542,  541,  540,  534,  531,  530,  529,  528,
      527,  526,  516,  515,  514,  513,  507,  506,  505,  504,
      501,  500,  499,  498,  497,  496,  495,  492,  491,  490,
      489,  488,  487,  486,  485,  484,  483,  482,  481,  480,
      479,  478,  477,  474,  468,  467,  458,  457,  456,  455,
      454,  453,  452,  446,  445,  444,  443,  440,  439,  438,
      437,  436,  435,  434,  433,  429,  428,  427,  426,  423,
      422,  421,  420,  419,  418,  417,  416,  415,  414,  413,
      412,  411,  410,  404,  403,  402,  401,  400,  399,  398,
      397,  396,  395,  394,  391,  390,  389,  388,  387,  383,

      382,  381,  141,  380,  379,  378,  235,  375,  374,  373,
      372,  357,  356,  355,  354,  353,  352,  351,  350,  349,
      348,  347,  346,  345,  344,  343,  332,  331,  330,  329,
      328,  327,  326,  325,  324,  321,  320,  319,  318,  317,
      316,  315,  314,  313,  312,  311,  310,  309,  308,  307,
      306,  305,  304,  303,  302,  301,  300,  299,  298,  297,
      287,  286,  278,  277,  276,  275,  274,  273,  272,  271,
      270,  269,  268,  267,  266,  265,  264,  263,  250,  249,
      248,  247,  246,  245,  244,  243,  143,  141,  240,  239,
      238,  233,  230,  229,  228,  227,  226,  225,  224,  223,

      222,  219,  218,  217,  216,  212,  211,  210,  209,  208,
      205,  200,  199,  194,  193,  192,  191,  190,  189,  188,
      187,  186,  185,  184,  183,  180,  177,  176,  175,  174,
      173,  172,  171,  170,  165,  164,  163,  160,  157,  156,
      155,  154,  153,  152,  151,  150,  149,  148,  147,  146,
       58,  143,  141,  138,  137,  132,   40,   41,   39,  106,
       94,   58,   41,   39, 1765,    3, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,

     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765
    ) ;

yy_chk : constant array(0..2212) of Short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    8,    8,   25,   25,
       10,    8,   10,   10,   10,   10,   12,   23,    8,   25,
       23,   12,    8,   10,   11,   11,   11,   11,  360,   14,
       35,   14,   14,   14,   14,   11,   13,   17,   13,   13,
       13,   13,   14,   18,  360,   35,   17,   18,   17,   13,
       18,   22,   17,   20,   17,   30,   18,   20,   18,   22,

       27,   20,   27,   29,   20,   22,   44,   13,   19,   19,
       20,   20,   27,   30,   44,   19,   29,   33,   29,   19,
       90,   29,   19,  637,   26,   26,   19,   19,   21,   33,
       21,   90,   26,   21,   21,   21,   21,   32,   32,   43,
       32,   43,   26,   21,   26,   74,   74,   92,   31,   31,
       32,   31,   32,   21,   31,   34,   32,   21,  638,   34,
      639,   92,   21,   34,   31,   31,   47,   47,   47,   47,
       48,   79,   48,   48,   48,   48,   49,   47,   49,   49,
       49,   49,   72,   48,  369,   50,   72,   50,   79,   49,
       50,   50,   50,   50,   51,   51,   51,   51,   54,  369,

       54,   54,   54,   54,   56,   51,   56,   56,   56,   56,
       78,   54,   83,   83,   83,   83,  105,   56,   84,   84,
       84,   84,   78,  105,  106,  109,  110,  110,  112,  118,
      123,  133,  135,  112,  106,  109,  139,  139,  139,  139,
      133,  141,  253,  236,  202,  118,  141,  202,  253,  123,
      280,  135,  118,  144,  341,  144,  144,  144,  144,  237,
      280,  135,  228,  236,  247,  341,  144,  154,  228,  228,
      640,  247,  154,  154,  154,  315,  285,  154,  237,  285,
      642,  367,  315,  154,  154,  247,  154,  154,  154,  367,
      154,  265,  154,  171,  265,  285,  333,  294,  265,  333,

      171,  294,  643,  171,  363,  265,  313,  363,  265,  171,
      171,  171,  299,  353,  313,  171,  175,  644,  175,  313,
      353,  299,  313,  313,  299,  299,  353,  299,  175,  175,
      175,  175,  175,  362,  353,  175,  376,  175,  212,  212,
      362,  212,  370,  212,  362,  212,  371,  377,  212,  370,
      212,  645,  475,  212,  212,  371,  646,  376,  212,  229,
      229,  229,  229,  406,  229,  229,  409,  377,  475,  647,
      229,  406,  409,  229,  411,  229,  229,  411,  229,  310,
      310,  346,  346,  310,  469,  648,  559,  649,  310,  310,
      310,  473,  469,  310,  346,  310,  352,  352,  473,  346,

      352,  346,  352,  650,  651,  652,  352,  559,  627,  627,
      627,  627,  627,  627,  627,  627,  627,  641,  627,  653,
      654,  655,  656,  627,  627,  657,  641,  641,  658,  659,
      660,  661,  662,  663,  664,  665,  666,  667,  668,  669,
      670,  671,  672,  673,  674,  675,  676,  677,  678,  679,
      680,  627,  627,  627,  681,  683,  684,  685,  686,  687,
      687,  688,  689,  690,  691,  692,  693,  694,  695,  696,
      696,  697,  698,  699,  700,  701,  702,  703,  704,  705,
      706,  707,  708,  709,  710,  711,  712,  713,  714,  715,
      716,  715,  717,  718,  719,  720,  721,  722,  723,  724,

      725,  726,  715,  727,  728,  715,  715,  715,  730,  732,
      733,  734,  735,  737,  738,  739,  740,  741,  742,  743,
      744,  745,  746,  748,  749,  750,  751,  752,  753,  755,
      756,  757,  758,  743,  759,  760,  761,  762,  763,  765,
      767,  768,  769,  770,  771,  772,  773,  774,  775,  776,
      777,  778,  779,  780,  781,  782,  783,  784,  785,  786,
      775,  787,  788,  789,  790,  791,  792,  793,  794,  796,
      797,  785,  799,  799,  799,  799,  799,  799,  799,  799,
      799,  800,  799,  801,  802,  803,  804,  799,  799,  805,
      806,  807,  808,  809,  810,  811,  812,  813,  814,  815,

      816,  817,  819,  820,  821,  822,  823,  824,  825,  826,
      827,  828,  829,  830,  831,  799,  799,  799,  832,  833,
      835,  836,  837,  838,  839,  840,  841,  842,  843,  844,
      845,  846,  847,  849,  850,  851,  852,  853,  854,  855,
      856,  857,  858,  859,  861,  862,  863,  865,  866,  867,
      868,  869,  857,  870,  871,  872,  873,  874,  866,  875,
      876,  877,  879,  880,  881,  882,  883,  884,  885,  886,
      887,  888,  889,  890,  891,  892,  890,  893,  894,  895,
      894,  896,  897,  898,  899,  889,  900,  901,  902,  903,
      904,  905,  906,  908,  911,  913,  914,  915,  916,  917,

      918,  919,  920,  921,  922,  923,  924,  925,  926,  927,
      929,  930,  931,  932,  933,  934,  935,  937,  940,  941,
      942,  944,  945,  946,  947,  948,  949,  950,  951,  952,
      953,  954,  955,  956,  954,  957,  959,  960,  961,  962,
      963,  964,  965,  966,  968,  969,  970,  971,  972,  972,
      972,  972,  972,  972,  972,  972,  972,  973,  972,  975,
      976,  979,  980,  972,  972,  981,  982,  983,  984,  985,
      986,  988,  989,  990,  992,  993,  994,  995,  996,  997,
      998, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011,
     1012,  972,  972,  972, 1013, 1014, 1015, 1016, 1017, 1018,

     1019, 1020, 1021, 1022, 1023, 1013, 1024, 1026, 1027, 1028,
     1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
     1040, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
     1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
     1063, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1073,
     1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1087,
     1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
     1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108,
     1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
     1120, 1122, 1123, 1124, 1125, 1126, 1127, 1127, 1127, 1127,

     1127, 1127, 1127, 1127, 1127, 1128, 1127, 1129, 1132, 1133,
     1134, 1127, 1127, 1135, 1136, 1137, 1138, 1139, 1141, 1142,
     1143, 1144, 1145, 1146, 1147, 1148, 1127, 1149, 1150, 1138,
     1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1163, 1127,
     1127, 1127, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1164, 1131, 1165, 1166, 1167, 1168, 1131, 1131, 1169,
     1170, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
     1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
     1192, 1193, 1195, 1196, 1198, 1131, 1131, 1131, 1199, 1200,
     1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,

     1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
     1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
     1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1245,
     1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257,
     1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1267,
     1267, 1267, 1267, 1267, 1267, 1267, 1267, 1268, 1267, 1269,
     1270, 1273, 1274, 1267, 1267, 1275, 1276, 1277, 1278, 1280,
     1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291,
     1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
     1303, 1267, 1267, 1267, 1304, 1305, 1306, 1307, 1309, 1310,

     1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
     1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331,
     1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
     1343, 1344, 1348, 1351, 1352, 1335, 1353, 1354, 1355, 1356,
     1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
     1370, 1371, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381,
     1382, 1383, 1386, 1387, 1388, 1389, 1389, 1389, 1389, 1389,
     1389, 1389, 1389, 1389, 1391, 1389, 1392, 1393, 1394, 1395,
     1389, 1389, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
     1405, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1417,

     1419, 1420, 1422, 1424, 1425, 1427, 1428, 1429, 1389, 1389,
     1389, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390,
     1431, 1390, 1432, 1433, 1434, 1435, 1390, 1390, 1436, 1437,
     1440, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1453,
     1454, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1464, 1467,
     1468, 1469, 1470, 1471, 1390, 1390, 1390, 1472, 1473, 1474,
     1475, 1476, 1478, 1480, 1482, 1483, 1484, 1486, 1488, 1489,
     1490, 1492, 1492, 1492, 1492, 1492, 1492, 1492, 1492, 1492,
     1493, 1492, 1496, 1497, 1498, 1499, 1492, 1492, 1500, 1501,
     1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1512, 1513,

     1514, 1516, 1517, 1518, 1519, 1521, 1524, 1525, 1527, 1529,
     1530, 1531, 1532, 1534, 1492, 1492, 1492, 1495, 1495, 1495,
     1495, 1495, 1495, 1495, 1495, 1495, 1535, 1495, 1536, 1537,
     1538, 1539, 1495, 1495, 1540, 1541, 1542, 1543, 1544, 1545,
     1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
     1557, 1558, 1559, 1561, 1562, 1564, 1565, 1566, 1567, 1571,
     1495, 1495, 1495, 1570, 1570, 1570, 1570, 1570, 1570, 1570,
     1570, 1570, 1572, 1570, 1573, 1574, 1575, 1576, 1570, 1570,
     1577, 1578, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1588,
     1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1599, 1601,

     1602, 1603, 1604, 1605, 1606, 1607, 1570, 1570, 1570, 1608,
     1609, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1619, 1620,
     1622, 1623, 1624, 1627, 1631, 1633, 1633, 1633, 1633, 1633,
     1633, 1633, 1633, 1633, 1634, 1633, 1635, 1637, 1638, 1639,
     1633, 1633, 1640, 1641, 1642, 1643, 1644, 1645, 1651, 1652,
     1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
     1666, 1667, 1668, 1673, 1675, 1676, 1677, 1679, 1633, 1633,
     1633, 1647, 1647, 1647, 1647, 1647, 1647, 1647, 1647, 1647,
     1680, 1647, 1681, 1685, 1686, 1689, 1647, 1647, 1690, 1691,
     1692, 1695, 1696, 1698, 1701, 1703, 1704, 1705, 1706, 1707,

     1708, 1709, 1710, 1711, 1713, 1714, 1716, 1717, 1718, 1720,
     1721, 1722, 1724, 1725, 1647, 1647, 1647, 1694, 1694, 1694,
     1694, 1694, 1694, 1694, 1694, 1694, 1727, 1694, 1728, 1729,
     1732, 1733, 1694, 1694, 1734, 1735, 1736, 1737, 1738, 1739,
     1746, 1747, 1750, 1753, 1754, 1756, 1757, 1760, 1762, 1771,
      636,  635,  634,  633,  632,  630,  629,  628,  626,  625,
     1694, 1694, 1694, 1766,  624, 1766, 1766, 1767, 1767, 1767,
     1767, 1768, 1768, 1769, 1769, 1769, 1769, 1770, 1770, 1770,
     1770, 1772, 1772, 1772, 1772, 1773, 1773, 1773, 1773, 1774,
     1774, 1774, 1774, 1775, 1775, 1775, 1775, 1776, 1776, 1776,

     1776, 1777, 1777, 1777, 1777, 1778, 1778, 1778, 1778, 1779,
     1779, 1779, 1779, 1780, 1780, 1780, 1780, 1781, 1781, 1781,
     1781, 1782, 1782, 1782, 1782, 1783, 1783, 1783, 1783, 1784,
     1784, 1784, 1784, 1785, 1785, 1785, 1785, 1786, 1786, 1786,
     1786, 1787, 1787, 1787, 1787, 1788, 1788, 1788, 1788, 1789,
     1789, 1789, 1789, 1790, 1790, 1790, 1790, 1791, 1791, 1791,
     1791, 1792, 1792, 1792, 1792, 1793, 1793, 1793, 1793, 1794,
     1794, 1794, 1794, 1795, 1795, 1795, 1795,  623,  622,  621,
      620,  619,  618,  617,  616,  615,  614,  613,  612,  611,
      610,  609,  608,  607,  606,  605,  604,  603,  602,  601,

      600,  599,  598,  597,  595,  594,  593,  592,  591,  590,
      589,  588,  587,  586,  585,  584,  583,  581,  579,  578,
      577,  576,  575,  574,  573,  572,  571,  570,  569,  567,
      566,  565,  564,  563,  562,  561,  560,  558,  557,  555,
      553,  552,  551,  550,  549,  548,  547,  546,  545,  544,
      543,  542,  541,  540,  539,  538,  537,  536,  535,  534,
      533,  532,  531,  530,  529,  528,  526,  525,  524,  523,
      522,  521,  520,  519,  518,  517,  516,  515,  514,  513,
      512,  511,  510,  509,  508,  506,  505,  504,  503,  502,
      501,  500,  499,  498,  497,  496,  495,  494,  493,  491,

      490,  489,  487,  486,  485,  484,  483,  482,  480,  479,
      478,  477,  476,  474,  472,  471,  470,  467,  466,  465,
      464,  463,  462,  461,  460,  459,  458,  457,  456,  455,
      454,  453,  451,  450,  449,  448,  447,  445,  444,  443,
      442,  441,  440,  439,  438,  437,  436,  435,  434,  433,
      432,  431,  430,  429,  428,  427,  426,  425,  424,  423,
      422,  421,  420,  419,  418,  417,  416,  414,  413,  410,
      408,  407,  405,  404,  403,  402,  401,  400,  399,  398,
      397,  396,  395,  394,  393,  392,  391,  390,  388,  386,
      385,  384,  382,  381,  380,  379,  378,  375,  374,  373,

      372,  368,  366,  365,  364,  361,  359,  358,  357,  356,
      355,  354,  350,  349,  348,  347,  345,  344,  343,  342,
      340,  339,  338,  337,  336,  335,  334,  332,  331,  330,
      329,  328,  327,  326,  325,  323,  322,  321,  320,  319,
      318,  317,  316,  314,  312,  311,  309,  308,  307,  304,
      303,  302,  300,  298,  297,  296,  295,  293,  292,  291,
      290,  289,  288,  287,  286,  284,  283,  282,  281,  279,
      278,  277,  276,  275,  274,  273,  272,  271,  270,  269,
      268,  267,  266,  264,  263,  262,  261,  260,  259,  258,
      257,  256,  255,  254,  252,  251,  250,  249,  248,  246,

      245,  244,  241,  240,  239,  238,  234,  233,  232,  231,
      230,  227,  226,  225,  224,  223,  222,  221,  220,  219,
      218,  217,  216,  215,  214,  213,  211,  210,  209,  208,
      207,  206,  205,  204,  203,  201,  200,  199,  197,  196,
      195,  194,  193,  192,  191,  190,  189,  188,  187,  186,
      185,  184,  183,  182,  181,  180,  179,  178,  177,  176,
      173,  172,  170,  169,  168,  167,  166,  165,  164,  163,
      162,  161,  160,  159,  158,  157,  156,  155,  153,  152,
      151,  150,  149,  148,  146,  145,  142,  140,  138,  137,
      136,  134,  132,  131,  130,  129,  128,  127,  126,  125,

      124,  122,  121,  120,  119,  117,  116,  115,  114,  113,
      111,  108,  107,  104,  103,  102,  101,  100,   99,   98,
       97,   96,   95,   94,   93,   91,   89,   88,   87,   86,
       85,   82,   81,   80,   77,   76,   75,   73,   71,   70,
       69,   68,   67,   66,   65,   64,   63,   62,   61,   60,
       57,   53,   52,   46,   45,   42,   41,   40,   39,   28,
       24,   15,    7,    5,    3, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,

     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765
    ) ;


-- copy whatever the last rule matched to the standard output

procedure ECHO is
begin
   if Text_IO.is_open(user_output_file) then
     Text_IO.put( user_output_file, yytext );
   else
     Text_IO.put( yytext );
   end if;
end ECHO;

-- enter a start condition.
-- Using procedure requires a () after the ENTER, but makes everything
-- much neater.

procedure ENTER( state : integer ) is
begin
     yy_start := 1 + 2 * state;
end ENTER;

-- action number for EOF rule of a given start state
function YY_STATE_EOF(state : integer) return integer is
begin
     return YY_END_OF_BUFFER + state + 1;
end YY_STATE_EOF;

-- return all but the first 'n' matched characters back to the input stream
procedure yyless(n : integer) is
begin
        yy_ch_buf(yy_cp) := yy_hold_char; -- undo effects of setting up yytext
        yy_cp := yy_bp + n;
        yy_c_buf_p := yy_cp;
        YY_DO_BEFORE_ACTION; -- set up yytext again
end yyless;

-- redefine this if you have something you want each time.
procedure YY_USER_ACTION is
begin
        null;
end;

-- yy_get_previous_state - get the state just before the EOB char was reached

function yy_get_previous_state return yy_state_type is
    yy_current_state : yy_state_type;
    yy_c : short;
begin
    yy_current_state := yy_start;

    for yy_cp in yytext_ptr..yy_c_buf_p - 1 loop
	yy_c := yy_ec(yy_ch_buf(yy_cp));
	if yy_accept(yy_current_state) /= 0 then
	    yy_last_accepting_state := yy_current_state;
	    yy_last_accepting_cpos := yy_cp;
	end if;
	while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
	    yy_current_state := yy_def(yy_current_state);
	    if ( yy_current_state >= 1766 ) then
		yy_c := yy_meta(yy_c);
	    end if;
	end loop;
	yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
    end loop;

    return yy_current_state;
end yy_get_previous_state;

procedure yyrestart( input_file : file_type ) is
begin
   open_input(Text_IO.name(input_file));
end yyrestart;

begin -- of YYLex
<<new_file>>
        -- this is where we enter upon encountering an end-of-file and
        -- yywrap() indicating that we should continue processing

    if yy_init then
        if yy_start = 0 then
            yy_start := 1;      -- first start state
        end if;

        -- we put in the '\n' and start reading from [1] so that an
        -- initial match-at-newline will be true.

        yy_ch_buf(0) := ASCII.LF;
        yy_n_chars := 1;

        -- we always need two end-of-buffer characters. The first causes
        -- a transition to the end-of-buffer state. The second causes
        -- a jam in that state.

        yy_ch_buf(yy_n_chars) := YY_END_OF_BUFFER_CHAR;
        yy_ch_buf(yy_n_chars + 1) := YY_END_OF_BUFFER_CHAR;

        yy_eof_has_been_seen := false;

        yytext_ptr := 1;
        yy_c_buf_p := yytext_ptr;
        yy_hold_char := yy_ch_buf(yy_c_buf_p);
        yy_init := false;
-- UMASS CODES :
--   Initialization
        tok_begin_line := 1;
        tok_end_line := 1;
        tok_begin_col := 0;
        tok_end_col := 0;
        token_at_end_of_line := false;
        line_number_of_saved_tok_line1 := 0;
        line_number_of_saved_tok_line2 := 0;
-- END OF UMASS CODES.
    end if; -- yy_init

    loop                -- loops until end-of-file is reached

-- UMASS CODES :
--    if last matched token is end_of_line, we must
--    update the token_end_line and reset tok_end_col.
    if Token_At_End_Of_Line then
      Tok_End_Line := Tok_End_Line + 1;
      Tok_End_Col := 0;
      Token_At_End_Of_Line := False;
    end if;
-- END OF UMASS CODES.

        yy_cp := yy_c_buf_p;

        -- support of yytext
        yy_ch_buf(yy_cp) := yy_hold_char;

        -- yy_bp points to the position in yy_ch_buf of the start of the
        -- current run.
	yy_bp := yy_cp;
	yy_current_state := yy_start;
	loop
		yy_c := yy_ec(yy_ch_buf(yy_cp));
		if yy_accept(yy_current_state) /= 0 then
		    yy_last_accepting_state := yy_current_state;
		    yy_last_accepting_cpos := yy_cp;
		end if;
		while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
		    yy_current_state := yy_def(yy_current_state);
		    if ( yy_current_state >= 1766 ) then
			yy_c := yy_meta(yy_c);
		    end if;
		end loop;
		yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
	    yy_cp := yy_cp + 1;
if ( yy_current_state = 1765 ) then
    exit;
end if;
	end loop;
	yy_cp := yy_last_accepting_cpos;
	yy_current_state := yy_last_accepting_state;

<<next_action>>
	    yy_act := yy_accept(yy_current_state);
            YY_DO_BEFORE_ACTION;
            YY_USER_ACTION;

        if aflex_debug then  -- output acceptance info. for (-d) debug mode
            Text_IO.put( Standard_Error, "--accepting rule #" );
            Text_IO.put( Standard_Error, INTEGER'IMAGE(yy_act) );
            Text_IO.put_line( Standard_Error, "(""" & yytext & """)");
        end if;

-- UMASS CODES :
--   Update tok_begin_line, tok_end_line, tok_begin_col and tok_end_col
--   after matching the token.
        if yy_act /= YY_END_OF_BUFFER and then yy_act /= 0 then
-- Token are matched only when yy_act is not yy_end_of_buffer or 0.
          Tok_Begin_Line := Tok_End_Line;
          Tok_Begin_Col := Tok_End_Col + 1;
          Tok_End_Col := Tok_Begin_Col + yy_cp - yy_bp - 1;
          if yy_ch_buf ( yy_bp ) = ASCII.LF then
            Token_At_End_Of_Line := True;
          end if;
        end if;
-- END OF UMASS CODES.

<<do_action>>   -- this label is used only to access EOF actions
            case yy_act is
		when 0 => -- must backtrack
		-- undo the effects of YY_DO_BEFORE_ACTION
		yy_ch_buf(yy_cp) := yy_hold_char;
		yy_cp := yy_last_accepting_cpos;
		yy_current_state := yy_last_accepting_state;
		goto next_action;



-- /* ... */ -style comments
when 1 => 
--# line 53 "rc.l"

         RC_Help.RC_Comment(YYText(3..YYLength-2));
         

-- // -style comment -> skip rest of line.
when 2 => 
--# line 58 "rc.l"

         RC_Help.RC_Comment(YYText);
                      linenum:= linenum + 1;
         

when 3 => 
--# line 63 "rc.l"
 return BAR_t; 

when 4 => 
--# line 64 "rc.l"
 return COMMA_t; 

when 5 => 
--# line 65 "rc.l"
 return LBRACE_t; 

when 6 => 
--# line 66 "rc.l"
 return RBRACE_t; 

when 7 => 
--# line 67 "rc.l"
 return C_INCLUDE_t; 

when 8 => 
--# line 68 "rc.l"
 return NOT_t; 

-----------
-- Noise --
-----------
when 9 => 
--# line 74 "rc.l"
 null;  -- skip rest of line - was  return C_CRAP_t; 

when 10 => 
--# line 75 "rc.l"
 null; 

when 11 => 
--# line 76 "rc.l"
 null; 

when 12 => 
--# line 77 "rc.l"
 null; 

when 13 => 
--# line 78 "rc.l"
 null; 

when 14 => 
--# line 79 "rc.l"
 null; 

when 15 => 
--# line 80 "rc.l"
 null; 

when 16 => 
--# line 81 "rc.l"
 null; 

when 17 => 
--# line 82 "rc.l"
 null; 

---------------
-- Resources --
---------------
when 18 => 
--# line 88 "rc.l"
 return DIALOG_t; 

when 19 => 
--# line 89 "rc.l"
 return DIALOGEX_t; 

when 20 => 
--# line 90 "rc.l"
 return MENU_t; 

when 21 => 
--# line 91 "rc.l"
 return DLGINCLUDE_t; 

when 22 => 
--# line 92 "rc.l"
 return TEXTINCLUDE_t; 

when 23 => 
--# line 93 "rc.l"
 return GUIDELINES_t; 

when 24 => 
--# line 94 "rc.l"
 return DESIGNINFO_t; 

when 25 => 
--# line 95 "rc.l"
 return RT_MANIFEST_t;     

when 26 => 
--# line 96 "rc.l"
 return MOVEABLE_t; 

when 27 => 
--# line 97 "rc.l"
 return PURE_t; 

when 28 => 
--# line 98 "rc.l"
 return FIXED_t; 

when 29 => 
--# line 99 "rc.l"
 return PRELOAD_t; 

when 30 => 
--# line 100 "rc.l"
 return DISCARDABLE_t; 

when 31 => 
--# line 101 "rc.l"
 return LANGUAGE_t; 

when 32 => 
--# line 102 "rc.l"
 return STYLE_t; 

when 33 => 
--# line 103 "rc.l"
 return EXSTYLE_t; 

when 34 => 
--# line 104 "rc.l"
 return CAPTION_t; 

when 35 => 
--# line 105 "rc.l"
 return CLASS_t; 

when 36 => 
--# line 106 "rc.l"
 return FONT_t; 

when 37 => 
--# line 107 "rc.l"
 return LTEXT_t; 

when 38 => 
--# line 108 "rc.l"
 return CTEXT_t; 

when 39 => 
--# line 109 "rc.l"
 return RTEXT_t; 

when 40 => 
--# line 111 "rc.l"
 return BEGIN_t; 

when 41 => 
--# line 112 "rc.l"
 return END_t; 

when 42 => 
--# line 114 "rc.l"
 return CONTROL_t; 

when 43 => 
--# line 115 "rc.l"
 return EDITTEXT_t; 

when 44 => 
--# line 116 "rc.l"
 return COMBOBOX_t; 

when 45 => 
--# line 117 "rc.l"
 return GROUPBOX_t; 

when 46 => 
--# line 118 "rc.l"
 return LISTBOX_t; 

when 47 => 
--# line 120 "rc.l"
 return RADIOBUTTON_t; 

when 48 => 
--# line 121 "rc.l"
 return AUTORADIOBUTTON_t; 

when 49 => 
--# line 123 "rc.l"
 return CHECKBOX_t; 

when 50 => 
--# line 124 "rc.l"
 return AUTOCHECKBOX_t; 

when 51 => 
--# line 125 "rc.l"
 return AUTO3STATE_t; 

when 52 => 
--# line 126 "rc.l"
 return STATE3_t; 

when 53 => 
--# line 128 "rc.l"
 return PUSHBUTTON_t; 

when 54 => 
--# line 129 "rc.l"
 return DEFPUSHBUTTON_t; 

when 55 => 
--# line 131 "rc.l"
 return SCROLLBAR_t; 

-----------
-- Menus --
-----------
when 56 => 
--# line 136 "rc.l"
 return CHECKED_t; 

when 57 => 
--# line 137 "rc.l"
 return GRAYED_t; 

when 58 => 
--# line 138 "rc.l"
 return HELP_t; 

when 59 => 
--# line 139 "rc.l"
 return INACTIVE_t; 

when 60 => 
--# line 140 "rc.l"
 return MENUBARBREAK_t; 

when 61 => 
--# line 141 "rc.l"
 return MENUBREAK_t; 

when 62 => 
--# line 142 "rc.l"
 return MENUITEM_t; 

when 63 => 
--# line 143 "rc.l"
 return POPUP_t; 

when 64 => 
--# line 144 "rc.l"
 return SEPARATOR_t; 

------------------
-- Accelerators --
------------------
when 65 => 
--# line 149 "rc.l"
 return ACCELERATORS_t; 

when 66 => 
--# line 150 "rc.l"
 return CHARACTERISTICS_t; 

when 67 => 
--# line 151 "rc.l"
 return VERSION_t; 

when 68 => 
--# line 152 "rc.l"
 return ASCII_t; 

when 69 => 
--# line 153 "rc.l"
 return VIRTKEY_t; 

when 70 => 
--# line 154 "rc.l"
 return NOINVERT_t; 

when 71 => 
--# line 155 "rc.l"
 return ALT_t; 

when 72 => 
--# line 156 "rc.l"
 return SHIFT_t; 

--------------
-- Versions --
--------------
when 73 => 
--# line 162 "rc.l"
 return VERSIONINFO_t; 

when 74 => 
--# line 163 "rc.l"
 return FILEVERSION_t; 

when 75 => 
--# line 164 "rc.l"
 return PRODUCTVERSION_t; 

when 76 => 
--# line 165 "rc.l"
 return FILEFLAGSMASK_t; 

when 77 => 
--# line 166 "rc.l"
 return FILEFLAGS_t; 

when 78 => 
--# line 167 "rc.l"
 return FILEOS_t; 

when 79 => 
--# line 168 "rc.l"
 return FILETYPE_t; 

when 80 => 
--# line 169 "rc.l"
 return FILESUBTYPE_t; 

when 81 => 
--# line 170 "rc.l"
 return BLOCK_t; 

when 82 => 
--# line 171 "rc.l"
 return VALUE_t; 

-------------------
-- Graphic items --
-------------------
when 83 => 
--# line 176 "rc.l"
 return ICON_t; 

when 84 => 
--# line 177 "rc.l"
 return BITMAP_t; 

when 85 => 
--# line 178 "rc.l"
 return CURSOR_t; 

--------------
-- Toolbars --
--------------
when 86 => 
--# line 183 "rc.l"
 return TOOLBAR_t; 

when 87 => 
--# line 184 "rc.l"
 return BUTTON_t; 

when 88 => 
--# line 185 "rc.l"
 return SEPARATOR_t; 

when 89 => 
--# line 187 "rc.l"
 return STRINGTABLE_t; 

------------------
-- Window Class --
------------------
when 90 => 
--# line 192 "rc.l"
 return ANIMATE_CLASS_t; 

when 91 => 
--# line 193 "rc.l"
 return DATETIMEPICK_CLASS_t; 

when 92 => 
--# line 194 "rc.l"
 return MONTHCAL_CLASS_t; 

when 93 => 
--# line 195 "rc.l"
 return PROGRESS_CLASS_t; 

when 94 => 
--# line 196 "rc.l"
 return TRACKBAR_CLASS_t; 

when 95 => 
--# line 197 "rc.l"
 return UPDOWN_CLASS_t; 

when 96 => 
--# line 198 "rc.l"
 return WC_LISTVIEW_t; 

when 97 => 
--# line 199 "rc.l"
 return WC_TABCONTROL_t; 

when 98 => 
--# line 200 "rc.l"
 return WC_TREEVIEW_t; 

when 99 => 
--# line 201 "rc.l"
 return WC_STATIC_t; 

------------
-- Styles --
------------
-- Window style
when 100 => 
--# line 208 "rc.l"
 return WS_BORDER_t; 

when 101 => 
--# line 209 "rc.l"
 return WS_CAPTION_t; 

when 102 => 
--# line 210 "rc.l"
 return WS_CHILD_t; 

when 103 => 
--# line 211 "rc.l"
 return WS_CLIPSIBLINGS_t; 

when 104 => 
--# line 212 "rc.l"
 return WS_DISABLED_t; 

when 105 => 
--# line 213 "rc.l"
 return WS_DLGFRAME_t; 

when 106 => 
--# line 214 "rc.l"
 return WS_GROUP_t; 

when 107 => 
--# line 215 "rc.l"
 return WS_HSCROLL_t; 

when 108 => 
--# line 216 "rc.l"
 return WS_MINIMIZEBOX_t; 

when 109 => 
--# line 217 "rc.l"
 return WS_MAXIMIZEBOX_t; 

when 110 => 
--# line 218 "rc.l"
 return WS_POPUP_t; 

when 111 => 
--# line 219 "rc.l"
 return WS_SIZEBOX_t; 

when 112 => 
--# line 220 "rc.l"
 return WS_SYSMENU_t; 

when 113 => 
--# line 221 "rc.l"
 return WS_TABSTOP_t; 

when 114 => 
--# line 222 "rc.l"
 return WS_VISIBLE_t; 

when 115 => 
--# line 223 "rc.l"
 return WS_VSCROLL_t; 

when 116 => 
--# line 224 "rc.l"
 return WS_THICKFRAME_t; 

-- Dialog style
when 117 => 
--# line 227 "rc.l"
 return DS_3DLOOK_t; 

when 118 => 
--# line 228 "rc.l"
 return DS_CENTER_t; 

when 119 => 
--# line 229 "rc.l"
 return DS_CENTERMOUSE_t; 

when 120 => 
--# line 230 "rc.l"
 return DS_CONTROL_t; 

when 121 => 
--# line 231 "rc.l"
 return DS_FIXEDSYS_t; 

when 122 => 
--# line 232 "rc.l"
 return DS_LOCALEDIT_t; 

when 123 => 
--# line 233 "rc.l"
 return DS_MODALFRAME_t; 

when 124 => 
--# line 234 "rc.l"
 return DS_NOIDLEMSG_t; 

when 125 => 
--# line 235 "rc.l"
 return DS_SETFOREGROUND_t; 

when 126 => 
--# line 236 "rc.l"
 return DS_CONTEXTHELP_t; 

when 127 => 
--# line 237 "rc.l"
 return DS_SHELLFONT_t; 

when 128 => 
--# line 238 "rc.l"
 return DS_SETFONT_t; 

when 129 => 
--# line 239 "rc.l"
 return DS_SYSMODAL_t; 

-- Static styles
when 130 => 
--# line 242 "rc.l"
 return SS_BITMAP_t; 

when 131 => 
--# line 243 "rc.l"
 return SS_BLACKFRAME_t; 

when 132 => 
--# line 244 "rc.l"
 return SS_BLACKRECT_t; 

when 133 => 
--# line 245 "rc.l"
 return SS_CENTERIMAGE_t; 

when 134 => 
--# line 246 "rc.l"
 return SS_ENDELLIPSIS_t; 

when 135 => 
--# line 247 "rc.l"
 return SS_GRAYRECT_t; 

when 136 => 
--# line 248 "rc.l"
 return SS_ICON_t; 

when 137 => 
--# line 249 "rc.l"
 return SS_LEFTNOWORDWRAP_t; 

when 138 => 
--# line 250 "rc.l"
 return SS_NOPREFIX_t; 

when 139 => 
--# line 251 "rc.l"
 return SS_REALSIZEIMAGE_t; 

when 140 => 
--# line 252 "rc.l"
 return SS_SIMPLE_t; 

when 141 => 
--# line 253 "rc.l"
 return SS_SUNKEN_t; 

when 142 => 
--# line 254 "rc.l"
 return SS_WHITERECT_t; 

-- Edit styles
when 143 => 
--# line 257 "rc.l"
 return ES_AUTOHSCROLL_t; 

when 144 => 
--# line 258 "rc.l"
 return ES_AUTOVSCROLL_t; 

when 145 => 
--# line 259 "rc.l"
 return ES_CENTER_t; 

when 146 => 
--# line 260 "rc.l"
 return ES_MULTILINE_t; 

when 147 => 
--# line 261 "rc.l"
 return ES_NUMBER_t; 

when 148 => 
--# line 262 "rc.l"
 return ES_OEMCONVERT_t; 

when 149 => 
--# line 263 "rc.l"
 return ES_PASSWORD_t; 

when 150 => 
--# line 264 "rc.l"
 return ES_READONLY_t; 

when 151 => 
--# line 265 "rc.l"
 return ES_RIGHT_t; 

when 152 => 
--# line 266 "rc.l"
 return ES_UPPERCASE_t; 

when 153 => 
--# line 267 "rc.l"
 return ES_WANTRETURN_t; 

-- Box/Button styles
when 154 => 
--# line 270 "rc.l"
 return BS_3STATE_t; 

when 155 => 
--# line 271 "rc.l"
 return BS_AUTOCHECKBOX_t; 

when 156 => 
--# line 272 "rc.l"
 return BS_AUTORADIOBUTTON_t; 

when 157 => 
--# line 273 "rc.l"
 return BS_BITMAP_t; 

when 158 => 
--# line 274 "rc.l"
 return BS_BOTTOM_t; 

when 159 => 
--# line 275 "rc.l"
 return BS_CENTER_t; 

when 160 => 
--# line 276 "rc.l"
 return BS_FLAT_t; 

when 161 => 
--# line 277 "rc.l"
 return BS_LEFT_t; 

when 162 => 
--# line 278 "rc.l"
 return BS_LEFTTEXT_t; 

when 163 => 
--# line 279 "rc.l"
 return BS_MULTILINE_t; 

when 164 => 
--# line 280 "rc.l"
 return BS_OWNERDRAW_t; 

when 165 => 
--# line 281 "rc.l"
 return BS_PUSHLIKE_t; 

when 166 => 
--# line 282 "rc.l"
 return BS_RIGHT_t; 

when 167 => 
--# line 283 "rc.l"
 return BS_TOP_t; 

when 168 => 
--# line 284 "rc.l"
 return BS_VCENTER_t; 

-- Combo-box styles
when 169 => 
--# line 287 "rc.l"
 return CBS_AUTOHSCROLL_t; 

when 170 => 
--# line 288 "rc.l"
 return CBS_SIMPLE_t; 

when 171 => 
--# line 289 "rc.l"
 return CBS_DISABLENOSCROLL_t; 

when 172 => 
--# line 290 "rc.l"
 return CBS_DROPDOWN_t; 

when 173 => 
--# line 291 "rc.l"
 return CBS_DROPDOWNLIST_t; 

when 174 => 
--# line 292 "rc.l"
 return CBS_HASSTRINGS_t; 

when 175 => 
--# line 293 "rc.l"
 return CBS_OWNERDRAWFIXED_t; 

when 176 => 
--# line 294 "rc.l"
 return CBS_SORT_t; 

-- Listbox styles
when 177 => 
--# line 297 "rc.l"
 return LBS_DISABLENOSCROLL_t; 

when 178 => 
--# line 298 "rc.l"
 return LBS_EXTENDEDSEL_t; 

when 179 => 
--# line 299 "rc.l"
 return LBS_HASSTRINGS_t; 

when 180 => 
--# line 300 "rc.l"
 return LBS_MULTIPLESEL_t; 

when 181 => 
--# line 301 "rc.l"
 return LBS_MULTICOLUMN_t; 

when 182 => 
--# line 302 "rc.l"
 return LBS_NOINTEGRALHEIGHT_t; 

when 183 => 
--# line 303 "rc.l"
 return LBS_NOSEL_t; 

when 184 => 
--# line 304 "rc.l"
 return LBS_NOTIFY_t; 

when 185 => 
--# line 305 "rc.l"
 return LBS_OWNERDRAWFIXED_t; 

when 186 => 
--# line 306 "rc.l"
 return LBS_SORT_t; 

when 187 => 
--# line 307 "rc.l"
 return LBS_USETABSTOPS_t; 

-- Progress bar styles
when 188 => 
--# line 310 "rc.l"
 return PBS_VERTICAL_t;

-- Scrollbar styles
when 189 => 
--# line 313 "rc.l"
 return SBS_VERT_t; 

-- Trackbar styles
when 190 => 
--# line 316 "rc.l"
 return TBS_AUTOTICKS_t; 

when 191 => 
--# line 317 "rc.l"
 return TBS_BOTTOM_t; 

when 192 => 
--# line 318 "rc.l"
 return TBS_BOTH_t; 

when 193 => 
--# line 319 "rc.l"
 return TBS_NOTICKS_t; 

when 194 => 
--# line 320 "rc.l"
 return TBS_VERT_t; 

when 195 => 
--# line 321 "rc.l"
 return TBS_TOP_t; 

when 196 => 
--# line 322 "rc.l"
 return TBS_TOOLTIPS_t; 

-- Up-down styles
when 197 => 
--# line 325 "rc.l"
 return UDS_HORZ_t; 

when 198 => 
--# line 326 "rc.l"
 return UDS_ARROWKEYS_t; 

when 199 => 
--# line 327 "rc.l"
 return UDS_WRAP_t; 

when 200 => 
--# line 328 "rc.l"
 return UDS_NOTHOUSANDS_t; 

-- Listview styles
when 201 => 
--# line 331 "rc.l"
 return LVS_AUTOARRANGE_t; 

when 202 => 
--# line 332 "rc.l"
 return LVS_ALIGNLEFT_t; 

when 203 => 
--# line 333 "rc.l"
 return LVS_ICON_t; 

when 204 => 
--# line 334 "rc.l"
 return LVS_NOSORTHEADER_t; 

when 205 => 
--# line 335 "rc.l"
 return LVS_REPORT_t; 

when 206 => 
--# line 336 "rc.l"
 return LVS_SHOWSELALWAYS_t; 

when 207 => 
--# line 337 "rc.l"
 return LVS_SORTASCENDING_t; 

-- Treeview styles
when 208 => 
--# line 340 "rc.l"
 return TVS_INFOTIP_t; 

when 209 => 
--# line 341 "rc.l"
 return TVS_HASBUTTONS_t; 

when 210 => 
--# line 342 "rc.l"
 return TVS_HASLINES_t; 

when 211 => 
--# line 343 "rc.l"
 return TVS_LINESATROOT_t; 

when 212 => 
--# line 344 "rc.l"
 return TVS_NOSCROLL_t; 

when 213 => 
--# line 345 "rc.l"
 return TVS_NOTOOLTIPS_t; 

when 214 => 
--# line 346 "rc.l"
 return TVS_SHOWSELALWAYS_t; 

-- Date time picker styles
when 215 => 
--# line 349 "rc.l"
 return DTS_RIGHTALIGN_t; 

-- Month calendar styles
when 216 => 
--# line 352 "rc.l"
 return MCS_NOTODAY_t; 

-- Tab Control Styles
when 217 => 
--# line 355 "rc.l"
 return TCS_HOTTRACK_t; 

-- Extended styles
when 218 => 
--# line 358 "rc.l"
 return WS_EX_ACCEPTFILES_t; 

when 219 => 
--# line 359 "rc.l"
 return WS_EX_APPWINDOW_t; 

when 220 => 
--# line 360 "rc.l"
 return WS_EX_CLIENTEDGE_t; 

when 221 => 
--# line 361 "rc.l"
 return WS_EX_CONTEXTHELP_t; 

when 222 => 
--# line 362 "rc.l"
 return WS_EX_CONTROLPARENT_t; 

when 223 => 
--# line 363 "rc.l"
 return WS_EX_NOPARENTNOTIFY_t; 

when 224 => 
--# line 364 "rc.l"
 return WS_EX_RIGHT_t; 

when 225 => 
--# line 365 "rc.l"
 return WS_EX_STATICEDGE_t; 

when 226 => 
--# line 366 "rc.l"
 return WS_EX_TOOLWINDOW_t; 

when 227 => 
--# line 367 "rc.l"
 return WS_EX_TOPMOST_t; 

when 228 => 
--# line 368 "rc.l"
 return WS_EX_TRANSPARENT_t; 

-- Misc --
when 229 => 
--# line 371 "rc.l"
 return IDC_STATIC_t; 

when 230 => 
--# line 373 "rc.l"
 yylval.intval := 0; return NUMBER; 

when 231 => 
--# line 374 "rc.l"
 yylval.intval := 1; return NUMBER; 

when 232 => 
--# line 376 "rc.l"
 yylval.intval   := 0;
                   yylval.floatval := 0.0;
                   return NUMBER;
                 

when 233 => 
--# line 381 "rc.l"
 begin
                     yylval.intval := Long_Long_Integer'Value(yytext);
                   exception
                     when Constraint_Error =>
                      -- declare
                      --   msg: constant String:=
                      --    "Error with integer ? [" & yytext & ']';
                      -- begin
                      --   Put_Line(Standard_Error, msg);
                      --   raise Constraint_Error with msg;
                      -- end;
                      yylval.intval := -1;
                      -- not nice at all, but a >2**31 number
                      -- seems to appear only at top (some checksum)
                   end;
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 234 => 
--# line 399 "rc.l"
 yylval.intval := Long_Long_Integer'Value("8#"&yytext&'#');
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 235 => 
--# line 403 "rc.l"

                   yylval.floatval := Long_Float'Value(yytext);
                   return FLOAT_t;
                   

when 236 => 
--# line 408 "rc.l"
 declare
                     hexa_c: String:= yytext;
                     hexa_last: Integer:= hexa_c'Last;
                   begin
                     if hexa_c(hexa_last)='L' then
                       hexa_last:= hexa_last - 1;
                     end if;
                     yylval.intval := Long_Long_Integer'Value("16#" & hexa_c(hexa_c'First+2 .. hexa_last) & '#');
                     yylval.floatval:= Long_Float( yylval.intval );
                     return NUMBER;
                   end;
                

when 237 => 
--# line 421 "rc.l"
return RCString; -- borrowed from ada95.l

-- Doesn't work with double quotes
-- \"({NOTGUIL})*\"    {return RCString;}
when 238 => 
--# line 426 "rc.l"
return INCString;

when 239 => 
--# line 428 "rc.l"
 return IDENT_t; 

when 240 => 
--# line 431 "rc.l"
 null; -- \t  ;

when 241 => 
--# line 432 "rc.l"
linenum:= linenum+1;

when 242 => 
--# line 434 "rc.l"
 null; -- ??
                     -- C: return *yytext;
                   

-- "("                { return '('; }
-- ")"                { return ')'; }
-- "}"                { return '}'; }
-- "{"                { return '{'; }
when 243 => 
--# line 442 "rc.l"
ECHO;
when YY_END_OF_BUFFER + INITIAL + 1 => 
    return End_Of_Input;
                when YY_END_OF_BUFFER =>
                    -- undo the effects of YY_DO_BEFORE_ACTION
                    yy_ch_buf(yy_cp) := yy_hold_char;

                    yytext_ptr := yy_bp;

                    case yy_get_next_buffer is
                        when EOB_ACT_END_OF_FILE =>
                            begin
                            if yywrap then
                                -- note: because we've taken care in
                                -- yy_get_next_buffer() to have set up yytext,
                                -- we can now set up yy_c_buf_p so that if some
                                -- total hoser (like aflex itself) wants
                                -- to call the scanner after we return the
                                -- End_Of_Input, it'll still work - another
                                -- End_Of_Input will get returned.

                                yy_c_buf_p := yytext_ptr;

                                yy_act := YY_STATE_EOF((yy_start - 1) / 2);

                                goto do_action;
                            else
                                --  start processing a new file
                                yy_init := true;
                                goto new_file;
                            end if;
                            end;
                        when EOB_ACT_RESTART_SCAN =>
                            yy_c_buf_p := yytext_ptr;
                            yy_hold_char := yy_ch_buf(yy_c_buf_p);
                        when EOB_ACT_LAST_MATCH =>
                            yy_c_buf_p := yy_n_chars;
                            yy_current_state := yy_get_previous_state;

                            yy_cp := yy_c_buf_p;
                            yy_bp := yytext_ptr;
                            goto next_action;
                        when others => null;
                        end case; -- case yy_get_next_buffer()
                when others =>
                    Text_IO.put( "action # " );
                    Text_IO.put( INTEGER'IMAGE(yy_act) );
                    Text_IO.new_line;
                    raise AFLEX_INTERNAL_ERROR;
            end case; -- case (yy_act)
        end loop; -- end of loop waiting for end of file
end YYLex;
--# line 442 "rc.l"
