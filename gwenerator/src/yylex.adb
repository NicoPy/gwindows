--  Warning: This lexical scanner is automatically generated by AFLEX.
--           It is useless to modify it. Change the ".Y" & ".L" files instead.
with Text_IO; use Text_IO;
with rc_dfa; use rc_dfa; 
with rc_io; use rc_io; 
--# line 1 "rc.l"
--------------------------------------------------------------------------
--  RC.l
--
--  Resource Compiler script lexer file (AFLEX)
--
--  Copyright (c) Gautier de Montmollin 2008..2009
--  SWITZERLAND
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
-- NB: this is the MIT License, as found 28-Jul-2008 on the site
-- http://www.opensource.org/licenses/mit-license.php
--------------------------------------------------------------------------
--
-- Change log:
--
-- 30-Apr-2009 GdM: Some additions for matching ResEdit 1.4.4.19 suppl. tags
-- ...
-- 28-Jul-2008 GdM: Created
--
--# line 52 "rc.l"


with RC_Tokens; use RC_Tokens;
with RC_Help;   use RC_Help;

function YYLex return Token is
subtype Short is Integer range -32768..32767;
    yy_act : Integer;
    yy_c   : Short;

-- returned upon end-of-file
YY_END_TOK : constant Integer := 0;
YY_END_OF_BUFFER : constant := 269;
subtype yy_state_type is Integer;
yy_current_state : yy_state_type;
INITIAL : constant := 0;
yy_accept : constant array(0..1961) of Short :=
    (   0,
      260,  260,  269,  268,  265,  266,  268,  268,    4,  260,
      260,  268,  257,  258,  268,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,    5,    3,    6,  265,    0,
      262,    0,    0,    0,    0,    0,  260,  260,  258,    0,
      260,    0,    0,  259,    0,  258,    0,  263,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,    0,  260,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,    0,    0,    0,    0,    0,    0,    0,  260,
        0,    0,    0,    2,  259,  261,  264,   71,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,   41,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,    8,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,    0,    0,    0,    0,    0,   11,    0,    0,    0,
        0,    0,    0,    1,  261,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,   36,  264,  264,  264,  264,  264,
       58,   83,  264,  264,  264,  264,  264,  264,  264,  264,
       20,  264,  264,  264,  264,  264,  264,  264,  264,   27,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  255,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  264,  264,   68,  264,
      264,  264,   40,  264,   81,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,   35,  264,  264,   38,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  256,  264,  264,
      264,  264,  264,   28,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,   37,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,   63,  264,  264,  264,

      264,  264,  264,   39,  264,  264,  264,   72,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,   32,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,   82,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,    0,    0,   15,    0,   14,    0,    0,
        0,    0,    0,    0,  264,  264,  264,  264,  264,   84,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  180,  264,   87,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,   85,  264,  264,  264,   18,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,   57,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,   52,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,    0,    0,   16,
        0,   11,    0,    0,    0,    0,   10,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  170,
      171,  264,  264,  264,  264,  264,  179,  264,   34,  264,

      264,  264,  264,  264,  264,  264,  264,  264,   56,  264,
       42,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  151,  264,  264,  264,  264,  264,  264,  264,  264,
      264,   33,  264,    0,   78,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,   46,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,   29,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  138,

      139,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  209,  264,  264,  264,  264,   86,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,   67,   69,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,    0,    9,    0,   11,
        7,    0,   17,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  178,  264,  264,  264,  264,  264,  264,

      264,  189,  264,   49,   44,  264,  264,  264,   19,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,   43,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  158,  264,  264,  264,  264,  264,  264,
       45,  264,  264,  264,  264,   59,   31,  264,  264,  264,
      264,  264,  264,  264,  264,  199,  264,  264,  264,  218,
      219,  264,  264,  264,  264,  264,  264,  264,  264,   62,
      264,   26,   70,  264,  264,  264,  264,  264,  264,  264,
      203,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  144,  264,  264,  264,  264,  264,  206,

      264,  264,  264,  208,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      211,  264,  264,  213,  264,  264,  264,  264,  264,  264,
      264,  264,  102,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  107,  264,  264,
      264,  111,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  161,  264,  264,  264,  165,  166,  167,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  118,  119,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  150,  264,  264,  154,
      264,  264,  264,  264,  264,  264,  264,    0,   79,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      196,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,   61,  264,  264,  264,  264,  264,  264,
      264,  264,   55,   64,  131,  264,  264,  264,  264,  264,
      264,  264,  264,  142,  264,  145,  146,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,   99,  264,  264,  100,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,   51,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  181,
      264,  264,  264,  264,  264,  183,  264,  264,  264,   24,
      264,   21,  264,  264,  121,  264,  264,  264,  264,  129,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,    0,   77,  264,  264,  264,  264,  264,
      264,   23,  254,  264,  264,  264,  264,  264,  264,  197,
      264,  264,  264,  264,  264,  221,  264,  264,  264,  264,

      264,  264,  201,  264,  264,  264,   53,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  205,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  101,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  108,  264,  264,  112,  113,  114,  264,
      115,  116,  264,  264,  264,  264,  264,  264,  264,  168,
      264,  172,  264,  264,  264,  176,  264,  264,  264,  264,
      264,  264,  264,  264,  264,   30,  264,  264,  122,  264,

      264,  264,  264,  264,  130,  264,  264,  264,  264,  264,
      264,  156,  157,  264,  264,  264,  264,  264,  264,  241,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  237,  264,  264,  264,  264,  264,
       47,   25,  264,  264,  264,  264,  264,  137,  264,  141,
      264,  264,   89,  264,  207,  264,  239,  264,   22,  264,
      264,  264,  264,  264,  227,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,   73,   96,  264,   98,  264,
      264,  105,  106,  264,  264,  264,  264,  264,  264,  264,
      249,  264,  264,  264,  264,  264,  264,  264,   65,  264,

       50,  264,  264,  264,  264,  264,  173,  174,  264,  264,
      264,  264,  185,  264,  264,  264,  264,  264,  264,  264,
      123,  264,  125,  264,  128,  264,  264,  264,  152,  153,
      264,  159,  264,  264,    0,   80,  264,    0,   74,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,   60,  264,  202,  264,  264,
      264,  133,  264,  264,  136,  264,  264,  147,  264,  210,
      238,  264,  264,  264,  264,  229,  264,  231,  264,  264,
      264,  264,  264,  264,  264,   95,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,   90,  264,  162,  264,  264,  264,  175,
      264,  264,  264,  264,  264,  264,  264,  264,   54,  264,
      264,  124,  264,  264,  264,  264,  155,  160,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  217,  264,
      264,  264,  223,  264,  264,  264,  264,  132,  264,  264,
      264,  264,  204,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  212,  264,  264,   97,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  252,  264,  264,
      264,  117,  264,  264,  264,  264,  177,  264,  264,  264,
      187,  264,  264,  264,  120,  127,  264,  236,  148,  149,

        0,   76,  264,  264,  264,  264,  192,  264,  264,  264,
      264,  264,  264,  264,  264,  264,   92,  264,   93,  134,
      135,  264,  264,   94,  264,  226,  228,  264,  232,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  110,  109,   48,  163,
      264,  264,  182,  264,  264,  264,   66,  264,  264,  240,
      264,  191,  194,  193,  264,  264,  200,  216,  264,  264,
      264,    0,   75,  264,  264,  264,  264,  230,  264,  264,
      235,  214,  215,  103,  104,  264,  243,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  169,  264,  186,  264,

      264,  126,  264,  264,  264,  220,  264,  264,  264,  143,
      264,  264,  234,  264,  244,  264,  264,  264,  264,  250,
      251,  264,  264,  264,  264,  264,  264,  264,  264,  222,
      224,  140,  264,  233,  242,  245,  264,  264,  264,  253,
      164,  264,  188,   91,  264,  264,  198,  264,  264,  264,
      264,  184,  190,  264,  225,  246,  247,  264,  195,  248,
        0
    ) ;

yy_ec : constant array(ASCII.NUL..Character'Last) of short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   13,
       14,   13,   13,   13,   13,   15,   15,    1,    1,   16,
        1,   17,    1,    1,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       28,   35,   36,   37,   38,   39,   40,   41,   42,   43,
        1,    1,    1,    1,   18,    1,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   28,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,    1,    1, others=> 1

    ) ;

yy_meta : constant array(0..46) of short :=
    (   0,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        1,    4,    4,    4,    4,    1,    1,    3,    4,    4,
        4,    4,    4,    4,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    1,    1,    1
    ) ;

yy_base : constant array(0..1991) of Short :=
    (   0,
        0,    0, 2361, 2362, 2358, 2362, 2355,   25, 2362,   41,
       53,   51,   67,   60, 2341,    0,   57,   61,   90,   75,
      122,   73,   79, 2334,   28,  106,   80, 2323,  118,   67,
      129,  139,   85,  148,  103, 2362, 2362, 2362, 2353, 2350,
     2349, 2329,   39,   98, 2316, 2318,  167,  173,  179,  191,
      195, 2343, 2345,  201,    0,  207, 2330, 2362,    0, 2325,
     2308, 2317, 2322, 2305, 2316, 2303, 2306, 2320, 2300, 2302,
     2299,  123, 2315,  109, 2310, 2297, 2294,  133,  128, 2305,
     2311, 2292,  213,  219, 2300, 2304, 2307, 2288, 2293,   55,
     2290,   99, 2303, 2293, 2289, 2285, 2296, 2297, 2283, 2278,

     2277, 2289, 2275, 2274, 2277,  129,  202, 2272, 2273,  212,
      141, 2284,  218, 2269, 2269, 2269, 2275, 2283,  218, 2264,
     2263, 2257, 2264,  204, 2260, 2259, 2272, 2263, 2257, 2256,
     2272, 2271, 2264,  211, 2265,  237, 2265, 2266, 2262,  236,
     2277,  246, 2279, 2362,  251, 2251, 2257,    0, 2248, 2251,
     2244, 2249, 2244, 2253,  261, 2236, 2235, 2253, 2235, 2248,
     2232, 2247, 2229, 2224, 2228, 2240, 2228, 2234, 2230, 2238,
     2231,  287, 2239, 2219,    0,  305, 2218, 2218, 2230, 2229,
     2214, 2208, 2211,  149, 2226, 2213, 2214, 2227, 2223, 2218,
     2224, 2204, 2199, 2221, 2220, 2199, 2199, 2212, 2202,    0,

     2215, 2194, 2201,   36, 2207, 2203, 2201, 2196, 2185, 2207,
     2191, 2204, 2198,  326, 2184, 2193, 2189, 2200, 2199, 2179,
     2185, 2193, 2190, 2194, 2193, 2177, 2171, 2172, 2170,  240,
      347, 2179, 2181, 2181, 2176, 2199, 2362,  255,  240, 2171,
     2175, 2176, 2192, 2362, 2362, 2167, 2177, 2168,  258, 2162,
     2174, 2163, 2155, 2152,  168,  245, 2166, 2158, 2164, 2148,
     2145, 2146,  227,  264, 2162, 2149, 2154,  280, 2161, 2150,
     2142, 2144, 2141, 2138, 2141, 2136, 2134, 2146, 2137, 2150,
     2136, 2145,  281, 2139, 2132, 2131, 2130,  263, 2127, 2124,
     2122, 2136, 2135, 2119,  274, 2133, 2136,  261, 2120, 2134,

     2110, 2128,  352, 2128,    0, 2126, 2114, 2114, 2123, 2122,
        0,    0, 2108, 2106, 2104,  370, 2121, 2103,  380, 2107,
      283, 2112, 2118, 2097,  286, 2101, 2101, 2095, 2097,    0,
     2111, 2097, 2110, 2091, 2088, 2096, 2090, 2087,  300, 2100,
     2090, 2086, 2099, 2096, 2085,  305,  217, 2091, 2093, 2083,
     2091,  385,  247, 2086, 2092, 2082,    0,  403,  402, 2070,
     2086, 2081, 2078, 2079, 2068,  296, 2071,  322,  327, 2062,
     2067, 2065,  302, 2067,  170,  345,  306, 2067, 2095, 2094,
     2072,  331,  356, 2057, 2063, 2069, 2069, 2054,    0, 2054,
     2063, 2069,    0, 2053,    0, 2049, 2048, 2047, 2046, 2050,

     2058, 2056, 2060, 2054, 2047, 2044, 2039, 2052, 2048, 2031,
     2037, 2047, 2037, 2035, 2029,  347, 2047, 2025,  317, 2043,
      340,    0, 2043, 2029,    0, 2026, 2033, 2023, 2026, 2032,
     2021, 2034, 2024, 2021, 2020, 2010, 2029, 2027, 2021, 2010,
     2023, 2009, 2017, 2020, 2005, 2009, 2016, 2009, 2012, 2006,
     2005, 1999, 2015, 2008, 1998, 1999, 2000,    0, 1999, 1992,
     1989, 1984, 2002,    0, 2002, 2003, 1992, 2002, 1990, 1982,
     1991, 1998, 1989, 1974, 1995, 1975, 1979, 1971, 1977, 1973,
     1975,    0,  357, 1986, 1979, 1972, 1981,  387, 1970,  392,
     1965, 1980, 1980, 1976, 1967, 1974,    0, 1977, 1974, 1971,

     1955, 1972, 1959,    0, 1967, 1959, 1969,    0, 1950, 1967,
     1953, 1962, 1964, 1949, 1957,  343, 1961, 1954, 1947, 1945,
     1949, 1961, 1949,    0, 1935, 1939, 1938, 1937, 1946, 1930,
     1934, 1934, 1946, 1944, 1936, 1940, 1942, 1928, 1932, 1925,
      371, 1922, 1921, 1922, 1921, 1930, 1917, 1919,    0, 1917,
     1926, 1912, 1928, 1926, 1922, 1909, 1909, 1915, 1914, 1904,
     1914, 1920, 1904, 1915, 1894, 1902, 1899, 1889, 1895, 1910,
     1902, 1892, 1906, 1903, 1922, 2362, 1921, 2362, 1920, 1919,
      420, 1899, 1901, 1916, 1883, 1894, 1879, 1892, 1892,    0,
     1894, 1879, 1880, 1873, 1872, 1887, 1873, 1869, 1868, 1867,

     1880, 1876, 1874, 1874, 1862,    0, 1866,    0, 1865, 1859,
     1859, 1861, 1857, 1860, 1860, 1855, 1852, 1855, 1865, 1853,
     1855,    0, 1853, 1857, 1855, 1858, 1858, 1849, 1845, 1840,
     1839, 1852, 1855, 1854, 1850, 1847, 1840, 1838, 1843, 1826,
     1833, 1828, 1827, 1826,   94,  128,  152,  163,  234,  264,
      286,  283,  342,  356,  444,  370,  360,  365,    0,  376,
      380,  397,  404,  413,  397,  412,  405,  406,  418,  426,
      430,  426,  424,  439,  422,  437,  428,  435,  433,  434,
      437,  439,  441,  439,  438,  441,  454,  455,  460,  450,
      446,  449,  448,  462,  448,  450,  450,  453,  465,  458,

      474,  458,  465,  476,  461,  476,  458,  469,  465,  468,
      477,  475,  480,  473,  479,  472,    0,  473,  474,  475,
      476,  481,  481,  480,  481,  498,  485,  502,  486,  496,
      488,  501,  494,  491,  496,  498,  512,  497,  498,  497,
      498,  517,  519,  506,  497,  503,  504,  521,  520,  522,
      508,  516,  513,  529,  525,  531,  513,  519,  528,  529,
      519,  535,  528,  524,  540,  535,  529,  562,  566, 2362,
      567, 2362,  568,  549,  570,  571, 2362,  556,  558,  558,
      557,  552,  543,  567,  563,  550,  561,  556,  548,    0,
      550,  562,  555,  571,  559,  556,    0,  557,    0,  562,

      577,  563,  562,  576,  566,  566,  581,  564,    0,  565,
        0,  584,  588,  577,  569,  592,  574,  580,  591,  592,
      594,  587,  588,  589,  587,  591,  589,  597,  587,  599,
      603,    0,  601,  607,  607,  598,  592,  600,  597,  600,
      601,    0,  612,  636, 2362,  639,  612,  628,  616,  612,
      623,  624,  626,  622,  637,  638,  643,  640,  628,  628,
      634,  644,  641,  646,  633,  634,    0,  647,  640,  642,
      638,  643,  644,  638,  654,  643,  648,  662,  667,  656,
      658,  666,  653,  658,  655,    0,  654,  658,  658,  659,
      673,  661,  680,  667,  682,  673,  680,  674,  681,    0,

      674,  684,  684,  673,  673,  681,  689,  690,  695,  682,
      691,  691,  689,    0,  683,  684,  685,  693,    0,  689,
      706,  689,  707,  696,  707,  710,  699,  693,  709,  714,
      703,  695,  713,  720,  707,  721,  716,    0,  705,  718,
      713,  708,  725,  722,  728,  730,  732,  718,  733,  725,
      726,  724,  732,  723,  728,  728,  731,  734,  737,  735,
      750,  748,  735,  744,  754,  742,  773, 2362,  774, 2362,
     2362,  775, 2362,  742,  759,  744,  753,  750,  761,  749,
      760,  768,  754,  758,  755,  771,  756,  770,  764,  773,
      758,  770,  778,    0,  776,  774,  781,  780,  766,  769,

      775,    0,  771,    0,    0,  773,  770,  785,    0,  790,
      789,  783,  778,  773,  782,  780,  794,  794,  796,  788,
      797,  800,  787,    0,  789,  790,  792,  798,  806,  795,
      799,  799,  801,    0,  813,  812,  800,  795,  837,  820,
        0,  817,  818,  828,  825,    0,    0,  835,  824,  820,
      831,  822,  830,  837,  827,    0,  844,  832,  846,    0,
        0,  831,  832,  832,  839,  851,  849,  837,  844,    0,
      856,    0,    0,  838,  849,  854,  860,  846,  843,  861,
        0,  850,  851,  853,  864,  854,  860,  856,  869,  860,
      870,  853,  869,    0,  874,  866,  865,  881,  865,    0,

      870,  883,  868,    0,  873,  872,  870,  891,  890,  881,
      874,  886,  877,  879,  881,  884,  882,  889,  891,  881,
        0,  889,  885,    0,  894,  893,  899,  906,  896,  902,
      895,  898,    0,  906,  906,  904,  916,  915,  903,  911,
      907,  915,  907,  917,  924,  911,  927,    0,  917,  921,
      922,    0,  917,  919,  919,  929,  924,  925,  923,  927,
      935,  939,  940,    0,  924,  939,  941,    0,    0,    0,
      931,  939,  925,  940,  933,  932,  941,  933,  937,  937,
      944,  942,  941,  955,  955,  952,  953,  944,  949,  953,
      961,    0,  954,  949,  957,  946,  967,  955,  960,  955,

      970,  961,  976,  977,  976,  977,    0,  972,  964,    0,
      962,  967,  973,  985,  968, 1005,  981, 1014, 2362, 1051,
      985,  989,  990,  987, 1003,  995, 1004,  992, 1007, 1006,
        0,  988, 1009, 1012, 1003,  999,  998, 1000, 1015, 1016,
     1004, 1023, 1020,    0, 1023, 1019, 1025, 1012, 1027, 1029,
     1030, 1028,    0,    0,    0, 1030, 1043, 1042, 1043, 1052,
     1051, 1033, 1047,    0, 1032,    0,    0, 1053, 1047, 1051,
     1048, 1051, 1054, 1050, 1064, 1062, 1064, 1056, 1068, 1051,
     1057, 1063, 1072, 1059, 1063, 1071, 1075, 1063, 1071, 1063,
     1080, 1084, 1080, 1082,    0, 1069, 1084,    0, 1076, 1082,

     1090, 1088, 1081, 1090, 1074, 1092, 1079, 1086, 1099, 1093,
     1083, 1091, 1091, 1091, 1094, 1082, 1083, 1086, 1090, 1095,
     1095, 1108, 1102, 1098, 1115,    0, 1102, 1098, 1118, 1117,
     1112, 1099, 1121, 1105, 1111, 1125, 1108, 1123, 1110,    0,
     1127, 1126, 1110, 1124, 1117,    0, 1117, 1133, 1118,    0,
     1133,    0, 1124, 1132,    0, 1123, 1133, 1142, 1126,    0,
     1138, 1132, 1135, 1136, 1132, 1133, 1137, 1147, 1148, 1150,
     1131, 1138, 1137, 1173, 2362, 1176, 1167, 1165, 1157, 1171,
     1149,    0,    0, 1171, 1172, 1169, 1164, 1168, 1174,    0,
     1165, 1165, 1179, 1168, 1178,    0, 1175, 1170, 1186, 1166,

     1190, 1180,    0, 1192, 1176, 1183,    0, 1182, 1178, 1197,
     1196, 1187, 1185, 1192, 1187, 1192, 1185, 1204, 1207, 1206,
     1209,    0, 1195, 1198, 1197, 1213, 1212, 1206, 1214, 1218,
     1202, 1217, 1207, 1205, 1213, 1207, 1215, 1223, 1224, 1225,
     1213, 1228, 1215, 1219, 1213, 1219, 1215,    0, 1226, 1227,
     1236, 1236, 1226, 1234, 1230, 1240, 1231, 1230, 1229, 1240,
     1228, 1236, 1234,    0, 1248, 1249,    0,    0,    0, 1254,
        0,    0, 1238, 1240, 1236, 1241, 1242, 1251, 1248,    0,
     1244,    0, 1260, 1244, 1252,    0, 1249, 1252, 1256, 1257,
     1258, 1272, 1255, 1264, 1261,    0, 1257, 1273,    0, 1260,

     1267, 1274, 1265, 1264,    0, 1275, 1270, 1271, 1282, 1276,
     1272,    0,    0, 1285, 1274, 1274, 1310, 1356, 1300,    0,
     1290, 1301, 1292, 1295, 1305, 1294, 1311, 1294, 1308, 1314,
     1311, 1316, 1313, 1314,    0, 1309, 1320, 1310, 1314, 1323,
        0,    0, 1312, 1307, 1326, 1310, 1324,    0, 1313,    0,
     1322, 1313,    0, 1322,    0, 1316,    0, 1324,    0, 1347,
     1346, 1346, 1337, 1335,    0, 1339, 1345, 1349, 1358, 1337,
     1349, 1338, 1362, 1340, 1347,    0,    0, 1351,    0, 1363,
     1359,    0,    0, 1350, 1356, 1352, 1349, 1358, 1370, 1370,
        0, 1373, 1368, 1360, 1363, 1378, 1379, 1372,    0, 1368,

        0, 1368, 1383, 1387, 1388, 1372,    0,    0, 1378, 1378,
     1379, 1380, 1384, 1390, 1376, 1390, 1400, 1387, 1384, 1391,
        0, 1399,    0, 1390,    0, 1399, 1395, 1396,    0,    0,
     1390,    0, 1396, 1400, 1427, 2362, 1430, 1437, 2362, 1476,
     1419, 1410, 1408, 1420, 1410, 1413, 1431, 1411, 1419, 1416,
     1422, 1436, 1426, 1427, 1426,    0, 1423,    0, 1427, 1425,
     1439,    0, 1438, 1437,    0, 1443, 1435,    0, 1431,    0,
        0, 1432, 1434, 1440, 1439,    0, 1439,    0, 1439, 1456,
     1454, 1466, 1454, 1459, 1467,    0, 1465, 1461, 1465, 1474,
     1477, 1477, 1464, 1472, 1484, 1472, 1482, 1474, 1470, 1489,

     1476, 1477, 1488,    0, 1479,    0, 1480, 1476, 1478,    0,
     1484, 1487, 1482, 1492, 1487, 1500, 1504, 1505,    0, 1504,
     1494,    0, 1491, 1498, 1501, 1502,    0,    0, 1532, 1512,
     1508, 1522, 1510, 1516, 1527, 1521, 1528, 1519,    0, 1529,
     1533, 1516,    0, 1535, 1522, 1527, 1524,    0, 1538, 1526,
     1523, 1545,    0, 1529, 1547, 1531, 1532, 1536, 1534, 1531,
     1553, 1552,    0, 1552, 1543,    0, 1556, 1555, 1554, 1549,
     1561, 1558, 1551, 1556, 1550, 1566, 1567,    0, 1555, 1550,
     1551,    0, 1561, 1553, 1558, 1563,    0, 1567, 1577, 1563,
        0, 1573, 1565, 1572,    0,    0, 1571,    0,    0,    0,

     1601, 2362, 1604, 1578, 1595, 1587,    0, 1586, 1589, 1596,
     1596, 1588, 1602, 1603, 1608, 1601,    0, 1650,    0,    0,
        0, 1594, 1605,    0, 1606,    0,    0, 1595,    0, 1614,
     1602, 1598, 1600, 1600, 1606, 1603, 1610, 1601, 1617, 1620,
     1625, 1621, 1614, 1622, 1627, 1639,    0,    0,    0,    0,
     1626, 1632,    0, 1630, 1631, 1628,    0, 1651, 1649,    0,
     1637,    0,    0,    0, 1650, 1633,    0,    0, 1640, 1634,
     1645, 1675, 2362, 1696, 1660, 1657, 1659,    0, 1640, 1661,
        0,    0,    0,    0,    0, 1661,    0, 1662, 1656, 1652,
     1653, 1656, 1667, 1651, 1660, 1660,    0, 1673,    0, 1685,

     1673,    0, 1677, 1684, 1691,    0, 1679, 1691, 1683,    0,
     1683, 1683,    0, 1684,    0, 1687, 1699, 1704, 1687,    0,
        0, 1688, 1694, 1697, 1706, 1693, 1700, 1706, 1710,    0,
        0,    0, 1700,    0,    0,    0, 1702, 1704, 1709,    0,
        0, 1707,    0,    0, 1708, 1713,    0, 1709, 1707, 1722,
     1722,    0,    0, 1710,    0,    0,    0, 1706,    0,    0,
     2362, 1748, 1752, 1754, 1758, 1762, 1746, 1766, 1770, 1774,
     1778, 1782, 1786, 1790, 1794, 1798, 1802, 1806, 1810, 1814,
     1818, 1822, 1826, 1830, 1834, 1838, 1842, 1846, 1850, 1854,
     1858

    ) ;

yy_def : constant array(0..1991) of Short :=
    (   0,
     1961,    1, 1961, 1961, 1961, 1961, 1962, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1963, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1961, 1961, 1961, 1961, 1962,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1965, 1966, 1961, 1967, 1961, 1963, 1961, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1961, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1961, 1961, 1961, 1968, 1961, 1961, 1961, 1961,
     1965, 1969, 1966, 1961, 1961, 1967, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1961, 1961, 1961, 1961, 1968, 1961, 1968, 1968, 1961,
     1961, 1961, 1965, 1961, 1961, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1961, 1970, 1971,
     1961, 1968, 1968, 1961, 1961, 1961, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1961, 1970, 1961, 1971, 1961, 1972, 1973,
     1968, 1961, 1961, 1974, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1975, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1976, 1972, 1961,
     1973, 1961, 1977, 1961, 1978, 1974, 1961, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1979, 1961, 1975, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1976, 1961, 1977, 1961,
     1961, 1978, 1961, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1980, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1981, 1964, 1982, 1961, 1980,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1983, 1961, 1981, 1376, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1376, 1984, 1985, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1376, 1986, 1961, 1984, 1987, 1961, 1985,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1988, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1989, 1961, 1988, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1990, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1991, 1961, 1990, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
        0, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961

    ) ;

yy_nxt : constant array(0..2408) of Short :=
    (   0,
        4,    5,    6,    7,    8,    4,    4,    9,   10,   11,
       12,   13,   14,   14,   14,   15,    4,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   25,   16,   16,   26,
       27,   28,   16,   29,   30,   31,   32,   33,   34,   35,
       16,   16,   16,   36,   37,   38,   42,   43,   96,   97,
       47,   44,   48,   49,   49,   49,   52,  328,   45,   98,
      329,   53,   46,   50,   51,   51,   51,   51,  134,   47,
      135,   56,   56,   56,   56,   50,   47,   60,   48,   54,
       54,   48,   50,   65,  179,  112,   61,   66,   62,   50,
       67,   89,   63,   77,   64,  180,   68,   78,   69,   90,

      104,   79,  105,  113,   80,   91,  126,   55,   70,   71,
       81,   82,  106,   92,   93,   72,   94,  182,  127,   73,
      834,  136,   74,  131,   99,  100,   75,   76,   83,  137,
       83,  183,  101,   84,   84,   84,   84,  108,  132,  162,
      163,  159,  102,   85,  103,  160,  169,  835,  114,  115,
      109,  116,  110,   86,  117,  111,  167,   87,  120,  121,
      197,  122,   88,  170,  118,  119,  128,  198,  168,  308,
      129,  123,  836,  124,  130,  205,  206,  125,   51,   51,
       51,   51,   47,  309,   48,   48,   48,   48,   47,   50,
       56,   56,   56,   56,  398,   50,  568,   83,  837,   83,

      399,   50,  140,  140,  140,  140,   51,   51,   51,   51,
       47,  569,  145,  145,  145,   48,   47,   50,   56,   56,
       56,   56,  222,   50,  140,  140,  140,  140,  199,   50,
       84,   84,   84,   84,  203,  208,  215,  233,  200,  237,
      209,  223,  237,  519,  204,  408,  234,  140,  140,  140,
      140,  142,  216,  409,  520,  838,  244,  237,  238,  217,
       47,  383,  145,  145,  145,   48,  530,  400,  239,  364,
      401,  390,  531,   50,  253,  365,  366,  382,  391,  254,
      255,  256,  257,  453,  258,  440,  410,  454,  441,  839,
      259,  260,  392,  261,  262,  263,  411,  264,  415,  265,

      282,  416,  490,  434,  442,  417,  449,  283,  840,  491,
      284,  450,  418,  435,  554,  419,  285,  286,  287,  841,
      565,  495,  288,  291,  496,  292,  509,  517,  566,  510,
      555,  518,  572,  237,  293,  294,  295,  296,  297,  298,
      557,  573,  299,  615,  300,  339,  340,  558,  341,  616,
      342,  559,  343,  560,  580,  344,  561,  345,  237,  618,
      346,  347,  619,  570,  842,  348,  367,  368,  369,  370,
      571,  371,  372,  611,  843,  459,  710,  373,  581,  711,
      374,  612,  375,  376,  460,  377,  676,  461,  462,  847,
      463,  473,  474,  848,  677,  475,  735,  736,  483,  849,

      476,  477,  478,  525,  526,  479,  484,  480,  850,  485,
      686,  486,  682,  683,  487,  488,  527,  851,  852,  684,
      543,  528,  237,  529,  535,  536,  687,  544,  537,  538,
      853,  854,  539,  545,  540,  855,  856,  546,  541,  542,
      857,  547,  858,  773,  844,  844,  845,  844,  844,  844,
      844,  844,  844,  859,  844,  860,  861,  864,  865,  844,
      844,  866,  867,  868,  869,  862,  863,  870,  871,  872,
      873,  874,  875,  876,  877,  878,  879,  880,  881,  882,
      883,  884,  885,  886,  887,  888,  889,  844,  844,  844,
      890,  891,  892,  893,  894,  895,  896,  897,  898,  899,

      900,  901,  902,  903,  904,  905,  906,  907,  908,  909,
      910,  911,  912,  913,  914,  915,  916,  917,  918,  919,
      920,  921,  922,  923,  924,  925,  926,  927,  928,  929,
      930,  931,  932,  933,  934,  935,  936,  937,  938,  939,
      940,  941,  942,  943,  944,  945,  946,  947,  948,  949,
      956,  950,  951,  957,  958,  959,  960,  961,  962,  963,
      964,  965,  952,  966,  968,  953,  954,  955,  770,  772,
      970,  971,  973,  777,  974,  975,  976,  977,  978,  979,
      980,  983,  984,  985,  986,  987,  988,  981,  989,  990,
      991,  993,  994,  995,  996,  997,  998,  999, 1000, 1001,

      992,  982, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
     1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020,
     1021, 1022, 1023, 1024, 1025, 1027, 1015, 1028, 1029, 1030,
     1031, 1032, 1033, 1034, 1035, 1036, 1037, 1026,  845,  844,
      844,  845,  844,  844,  844,  844,  844,  844, 1038,  844,
     1039, 1040, 1041, 1042,  844,  844, 1043, 1044, 1045, 1046,
     1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
     1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
     1067, 1068,  844,  844,  844, 1069, 1070, 1071, 1072, 1073,
     1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,

     1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094,
     1095, 1096, 1097, 1098, 1099, 1089, 1100, 1102, 1103, 1104,
     1105, 1106, 1107, 1108, 1109, 1110, 1111, 1101, 1113, 1114,
     1115, 1116, 1117, 1118, 1119, 1120, 1112, 1121, 1122, 1123,
     1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
     1134, 1136, 1137, 1138, 1140, 1142, 1143, 1141, 1144, 1145,
     1146, 1148, 1147, 1149, 1150, 1135, 1139, 1151, 1152, 1153,
     1154, 1155, 1156, 1157, 1158,  968,  970,  973, 1159, 1160,
     1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
     1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,

     1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
     1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
     1202, 1203, 1201, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
     1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1218, 1219,
     1218, 1218, 1218, 1218, 1218, 1218, 1221, 1218, 1222, 1223,
     1224, 1225, 1218, 1218, 1226, 1227, 1228, 1229, 1230, 1231,
     1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
     1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
     1218, 1218, 1218, 1252, 1253, 1254, 1255, 1256, 1258, 1259,
     1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1257, 1268,

     1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
     1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
     1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
     1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
     1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
     1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
     1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
     1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
     1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,

     1369, 1370, 1371, 1372, 1373, 1374, 1374, 1375, 1374, 1374,
     1374, 1374, 1374, 1374, 1378, 1374, 1219, 1379, 1380, 1381,
     1374, 1374, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390,
     1391, 1392, 1393, 1394, 1395, 1377, 1396, 1397, 1398, 1399,
     1388, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1374, 1374,
     1374, 1218, 1218, 1219, 1218, 1218, 1218, 1218, 1218, 1218,
     1407, 1218, 1408, 1409, 1410, 1411, 1218, 1218, 1412, 1413,
     1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
     1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
     1434, 1435, 1436, 1437, 1218, 1218, 1218, 1438, 1439, 1440,

     1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
     1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
     1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
     1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
     1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
     1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
     1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
     1511, 1512, 1513, 1514, 1515, 1375, 1374, 1374, 1375, 1374,
     1374, 1374, 1374, 1374, 1374, 1516, 1374, 1517, 1518, 1519,
     1520, 1374, 1374, 1521, 1522, 1523, 1524, 1525, 1526, 1527,

     1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
     1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1374,
     1374, 1374, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
     1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
     1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
     1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
     1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
     1596, 1597, 1598, 1599, 1588, 1600, 1601, 1602, 1603, 1604,
     1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
     1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,

     1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
     1635, 1635, 1636, 1635, 1635, 1635, 1635, 1635, 1635, 1641,
     1635, 1642, 1643, 1644, 1645, 1635, 1635, 1646, 1647, 1648,
     1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
     1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
     1669, 1670, 1671, 1635, 1635, 1635, 1638, 1638, 1639, 1638,
     1638, 1638, 1638, 1638, 1638, 1672, 1638, 1673, 1674, 1675,
     1676, 1638, 1638, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
     1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
     1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1638,

     1638, 1638, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
     1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
     1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1636,
     1635, 1635, 1636, 1635, 1635, 1635, 1635, 1635, 1635, 1639,
     1635, 1730, 1731, 1732, 1733, 1635, 1635, 1734, 1735, 1736,
     1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
     1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
     1757, 1758, 1759, 1635, 1635, 1635, 1638, 1638, 1639, 1638,
     1638, 1638, 1638, 1638, 1638, 1760, 1638, 1761, 1762, 1763,
     1764, 1638, 1638, 1765, 1766, 1767, 1768, 1769, 1770, 1771,

     1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
     1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1638,
     1638, 1638, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
     1799, 1800, 1801, 1801, 1802, 1801, 1801, 1801, 1801, 1801,
     1801, 1804, 1801, 1805, 1806, 1807, 1808, 1801, 1801, 1809,
     1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
     1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
     1830, 1831, 1832, 1833, 1834, 1801, 1801, 1801, 1835, 1836,
     1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
     1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,

     1857, 1858, 1859, 1802, 1801, 1801, 1802, 1801, 1801, 1801,
     1801, 1801, 1801, 1860, 1801, 1861, 1862, 1863, 1864, 1801,
     1801, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1876,
     1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
     1887, 1888, 1889, 1890, 1891, 1892, 1893, 1801, 1801, 1801,
     1872, 1872, 1873, 1872, 1872, 1872, 1872, 1872, 1872, 1894,
     1872, 1895, 1896, 1897, 1898, 1872, 1872, 1899, 1900, 1901,
     1902, 1903, 1904, 1905, 1906, 1907, 1908, 1873, 1909, 1910,
     1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
     1921, 1922, 1923, 1872, 1872, 1872, 1872, 1872, 1873, 1872,

     1872, 1872, 1872, 1872, 1872, 1924, 1872, 1925, 1926, 1927,
     1928, 1872, 1872, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
     1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
     1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1872,
     1872, 1872, 1955, 1956, 1957, 1958, 1959, 1960,   40,  146,
       40,   40,   57,   57,   57,   57,   59,   59,  141,  141,
      141,  141,  143,  143,  143,  143,  236,  236,  236,  236,
      243,  243,  243,  243,  575,  575,  575,  575,  577,  577,
      577,  577,  769,  769,  769,  769,  771,  771,  771,  771,
      776,  776,  776,  776,  846,  846,  846,  846,  967,  967,

      967,  967,  969,  969,  969,  969,  972,  972,  972,  972,
      844,  844,  844,  844, 1220, 1220, 1220, 1220, 1376, 1376,
     1376, 1376, 1218, 1218, 1218, 1218, 1374, 1374, 1374, 1374,
     1637, 1637, 1637, 1637, 1640, 1640, 1640, 1640, 1635, 1635,
     1635, 1635, 1638, 1638, 1638, 1638, 1803, 1803, 1803, 1803,
     1801, 1801, 1801, 1801, 1874, 1874, 1874, 1874, 1872, 1872,
     1872, 1872,  833,  832,  831,  830,  829,  828,  827,  826,
      825,  824,  823,  822,  821,  820,  819,  818,  817,  816,
      815,  814,  813,  812,  811,  810,  809,  808,  807,  806,
      805,  804,  803,  802,  801,  800,  799,  798,  797,  796,

      795,  794,  793,  792,  791,  790,  789,  788,  787,  786,
      785,  784,  783,  782,  781,  780,  779,  778,  777,  775,
      774,  772,  770,  578,  576,  768,  767,  766,  765,  764,
      763,  762,  761,  760,  759,  758,  757,  756,  755,  754,
      753,  752,  751,  750,  749,  748,  747,  746,  745,  744,
      743,  742,  741,  740,  739,  738,  737,  734,  733,  732,
      731,  730,  729,  728,  727,  726,  725,  724,  723,  722,
      721,  720,  719,  718,  717,  716,  715,  714,  713,  712,
      709,  708,  707,  706,  705,  704,  703,  702,  701,  700,
      699,  698,  697,  696,  695,  694,  693,  692,  691,  690,

      689,  688,  685,  681,  680,  679,  678,  675,  674,  673,
      672,  671,  670,  669,  668,  667,  666,  665,  664,  663,
      662,  661,  660,  659,  658,  657,  656,  655,  654,  653,
      652,  651,  650,  649,  648,  647,  646,  645,  644,  643,
      642,  641,  640,  639,  638,  637,  636,  635,  634,  633,
      632,  631,  630,  629,  628,  627,  626,  625,  624,  623,
      622,  621,  620,  617,  614,  613,  610,  609,  608,  607,
      606,  605,  604,  603,  602,  601,  600,  599,  598,  597,
      596,  595,  594,  593,  592,  591,  590,  589,  588,  587,
      586,  585,  584,  583,  582,  579,  578,  576,  574,  567,

      564,  563,  562,  556,  553,  552,  551,  550,  549,  548,
      534,  533,  532,  524,  523,  522,  521,  516,  515,  514,
      513,  512,  511,  508,  507,  506,  505,  504,  503,  502,
      501,  500,  499,  498,  497,  494,  493,  492,  489,  482,
      481,  472,  471,  470,  469,  468,  467,  466,  465,  464,
      458,  457,  456,  455,  452,  451,  448,  447,  446,  445,
      444,  443,  439,  438,  437,  436,  433,  432,  431,  430,
      429,  428,  427,  426,  425,  424,  423,  422,  421,  420,
      414,  413,  412,  407,  406,  405,  404,  403,  402,  397,
      396,  395,  394,  393,  389,  388,  387,  142,  386,  385,

      384,  237,  381,  380,  379,  378,  363,  362,  361,  360,
      359,  358,  357,  356,  355,  354,  353,  352,  351,  350,
      349,  338,  337,  336,  335,  334,  333,  332,  331,  330,
      327,  326,  325,  324,  323,  322,  321,  320,  319,  318,
      317,  316,  315,  314,  313,  312,  311,  310,  307,  306,
      305,  304,  303,  302,  301,  290,  289,  281,  280,  279,
      278,  277,  276,  275,  274,  273,  272,  271,  270,  269,
      268,  267,  266,  252,  251,  250,  249,  248,  247,  246,
      245,  144,  142,  242,  241,  240,  235,  232,  231,  230,
      229,  228,  227,  226,  225,  224,  221,  220,  219,  218,

      214,  213,  212,  211,  210,  207,  202,  201,  196,  195,
      194,  193,  192,  191,  190,  189,  188,  187,  186,  185,
      184,  181,  178,  177,  176,  175,  174,  173,  172,  171,
      166,  165,  164,  161,  158,  157,  156,  155,  154,  153,
      152,  151,  150,  149,  148,  147,   58,  144,  142,  139,
      138,  133,   40,   41,   39,  107,   95,   58,   41,   39,
     1961,    3, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,

     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961
    ) ;

yy_chk : constant array(0..2408) of Short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    8,    8,   25,   25,
       10,    8,   10,   10,   10,   10,   12,  204,    8,   25,
      204,   12,    8,   10,   11,   11,   11,   11,   43,   14,
       43,   14,   14,   14,   14,   11,   13,   17,   13,   13,
       13,   13,   14,   18,   90,   30,   17,   18,   17,   13,
       18,   22,   17,   20,   17,   90,   18,   20,   18,   22,

       27,   20,   27,   30,   20,   22,   33,   13,   19,   19,
       20,   20,   27,   23,   23,   19,   23,   92,   33,   19,
      645,   44,   19,   35,   26,   26,   19,   19,   21,   44,
       21,   92,   26,   21,   21,   21,   21,   29,   35,   74,
       74,   72,   26,   21,   26,   72,   79,  646,   31,   31,
       29,   31,   29,   21,   31,   29,   78,   21,   32,   32,
      106,   32,   21,   79,   31,   31,   34,  106,   78,  184,
       34,   32,  647,   32,   34,  111,  111,   32,   47,   47,
       47,   47,   48,  184,   48,   48,   48,   48,   49,   47,
       49,   49,   49,   49,  255,   48,  375,   50,  648,   50,

      255,   49,   50,   50,   50,   50,   51,   51,   51,   51,
       54,  375,   54,   54,   54,   54,   56,   51,   56,   56,
       56,   56,  124,   54,   83,   83,   83,   83,  107,   56,
       84,   84,   84,   84,  110,  113,  119,  134,  107,  136,
      113,  124,  239,  347,  110,  263,  134,  140,  140,  140,
      140,  142,  119,  263,  347,  649,  142,  238,  136,  119,
      145,  239,  145,  145,  145,  145,  353,  256,  136,  230,
      256,  249,  353,  145,  155,  230,  230,  238,  249,  155,
      155,  155,  155,  298,  155,  288,  264,  298,  288,  650,
      155,  155,  249,  155,  155,  155,  264,  155,  268,  155,

      172,  268,  321,  283,  288,  268,  295,  172,  651,  321,
      172,  295,  268,  283,  366,  268,  172,  172,  172,  652,
      373,  325,  172,  176,  325,  176,  339,  346,  373,  339,
      366,  346,  377,  382,  176,  176,  176,  176,  176,  176,
      368,  377,  176,  419,  176,  214,  214,  368,  214,  419,
      214,  368,  214,  369,  382,  214,  369,  214,  383,  421,
      214,  214,  421,  376,  653,  214,  231,  231,  231,  231,
      376,  231,  231,  416,  654,  303,  516,  231,  383,  516,
      231,  416,  231,  231,  303,  231,  483,  303,  303,  656,
      303,  316,  316,  657,  483,  316,  541,  541,  319,  658,

      316,  316,  316,  352,  352,  316,  319,  316,  660,  319,
      490,  319,  488,  488,  319,  319,  352,  661,  662,  488,
      359,  352,  581,  352,  358,  358,  490,  359,  358,  358,
      663,  664,  358,  359,  358,  665,  666,  359,  358,  358,
      667,  359,  668,  581,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  669,  655,  670,  671,  672,  673,  655,
      655,  674,  675,  676,  677,  671,  671,  678,  679,  680,
      681,  682,  683,  684,  685,  686,  687,  688,  689,  690,
      691,  692,  693,  694,  695,  696,  697,  655,  655,  655,
      698,  699,  700,  701,  702,  703,  704,  705,  706,  707,

      708,  709,  710,  711,  712,  713,  714,  715,  716,  718,
      719,  720,  721,  722,  722,  723,  724,  725,  726,  727,
      728,  729,  730,  731,  732,  733,  734,  734,  735,  736,
      737,  738,  739,  740,  741,  742,  743,  744,  745,  746,
      747,  748,  749,  750,  751,  752,  753,  754,  755,  756,
      757,  756,  756,  758,  759,  760,  761,  762,  763,  764,
      765,  766,  756,  767,  768,  756,  756,  756,  769,  771,
      773,  774,  775,  776,  778,  779,  780,  781,  782,  783,
      784,  785,  786,  787,  788,  789,  791,  784,  792,  793,
      794,  795,  796,  798,  800,  801,  802,  803,  804,  805,

      794,  784,  806,  807,  808,  810,  812,  813,  814,  815,
      816,  817,  818,  819,  820,  821,  822,  823,  824,  825,
      826,  827,  828,  829,  830,  831,  820,  833,  834,  835,
      836,  837,  838,  839,  840,  841,  843,  830,  844,  846,
      846,  846,  846,  846,  846,  846,  846,  846,  847,  846,
      848,  849,  850,  851,  846,  846,  852,  853,  854,  855,
      856,  857,  858,  859,  860,  861,  862,  863,  864,  865,
      866,  868,  869,  870,  871,  872,  873,  874,  875,  876,
      877,  878,  846,  846,  846,  879,  880,  881,  882,  883,
      884,  885,  887,  888,  889,  890,  891,  892,  893,  894,

      895,  896,  897,  898,  899,  901,  902,  903,  904,  905,
      906,  907,  908,  909,  910,  899,  911,  912,  913,  915,
      916,  917,  918,  920,  921,  922,  923,  911,  924,  925,
      926,  927,  928,  929,  930,  931,  923,  932,  933,  934,
      935,  936,  937,  939,  940,  941,  942,  943,  944,  945,
      946,  947,  948,  949,  950,  951,  952,  950,  953,  954,
      955,  956,  955,  957,  958,  946,  949,  959,  960,  961,
      962,  963,  964,  965,  966,  967,  969,  972,  974,  975,
      976,  977,  978,  979,  980,  981,  982,  983,  984,  985,
      986,  987,  988,  989,  990,  991,  992,  993,  995,  996,

      997,  998,  999, 1000, 1001, 1003, 1006, 1007, 1008, 1010,
     1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
     1021, 1022, 1020, 1023, 1025, 1026, 1027, 1028, 1029, 1030,
     1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1040, 1039, 1042, 1043,
     1044, 1045, 1039, 1039, 1048, 1049, 1050, 1051, 1052, 1053,
     1054, 1055, 1057, 1058, 1059, 1062, 1063, 1064, 1065, 1066,
     1067, 1068, 1069, 1071, 1074, 1075, 1076, 1077, 1078, 1079,
     1039, 1039, 1039, 1080, 1082, 1083, 1084, 1085, 1086, 1087,
     1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1085, 1097,

     1098, 1099, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109,
     1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
     1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
     1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
     1143, 1144, 1145, 1146, 1146, 1147, 1149, 1150, 1151, 1153,
     1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
     1165, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
     1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
     1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198,
     1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209,

     1211, 1212, 1213, 1214, 1215, 1216, 1216, 1216, 1216, 1216,
     1216, 1216, 1216, 1216, 1217, 1216, 1218, 1221, 1222, 1223,
     1216, 1216, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232,
     1233, 1234, 1235, 1236, 1237, 1216, 1238, 1239, 1240, 1241,
     1229, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1216, 1216,
     1216, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1250, 1220, 1251, 1252, 1256, 1257, 1220, 1220, 1258, 1259,
     1260, 1261, 1262, 1263, 1265, 1268, 1269, 1270, 1271, 1272,
     1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
     1283, 1284, 1285, 1286, 1220, 1220, 1220, 1287, 1288, 1289,

     1290, 1291, 1292, 1293, 1294, 1296, 1297, 1299, 1300, 1301,
     1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
     1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
     1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332,
     1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343,
     1344, 1345, 1347, 1348, 1349, 1351, 1353, 1354, 1356, 1357,
     1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
     1369, 1370, 1371, 1372, 1373, 1374, 1376, 1376, 1376, 1376,
     1376, 1376, 1376, 1376, 1376, 1377, 1376, 1378, 1379, 1380,
     1381, 1376, 1376, 1384, 1385, 1386, 1387, 1388, 1389, 1391,

     1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402,
     1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1376,
     1376, 1376, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
     1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
     1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
     1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453,
     1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
     1465, 1466, 1470, 1473, 1456, 1474, 1475, 1476, 1477, 1478,
     1479, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491,
     1492, 1493, 1494, 1495, 1497, 1498, 1500, 1501, 1502, 1503,

     1504, 1506, 1507, 1508, 1509, 1510, 1511, 1514, 1515, 1516,
     1517, 1517, 1517, 1517, 1517, 1517, 1517, 1517, 1517, 1519,
     1517, 1521, 1522, 1523, 1524, 1517, 1517, 1525, 1526, 1527,
     1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538,
     1539, 1540, 1543, 1544, 1545, 1546, 1547, 1549, 1551, 1552,
     1554, 1556, 1558, 1517, 1517, 1517, 1518, 1518, 1518, 1518,
     1518, 1518, 1518, 1518, 1518, 1560, 1518, 1561, 1562, 1563,
     1564, 1518, 1518, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
     1573, 1574, 1575, 1578, 1580, 1581, 1584, 1585, 1586, 1587,
     1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1518,

     1518, 1518, 1598, 1600, 1602, 1603, 1604, 1605, 1606, 1609,
     1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
     1620, 1622, 1624, 1626, 1627, 1628, 1631, 1633, 1634, 1635,
     1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1638,
     1637, 1641, 1642, 1643, 1644, 1637, 1637, 1645, 1646, 1647,
     1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659,
     1660, 1661, 1663, 1664, 1666, 1667, 1669, 1672, 1673, 1674,
     1675, 1677, 1679, 1637, 1637, 1637, 1640, 1640, 1640, 1640,
     1640, 1640, 1640, 1640, 1640, 1680, 1640, 1681, 1682, 1683,
     1684, 1640, 1640, 1685, 1687, 1688, 1689, 1690, 1691, 1692,

     1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
     1703, 1705, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1640,
     1640, 1640, 1715, 1716, 1717, 1718, 1720, 1721, 1723, 1724,
     1725, 1726, 1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729,
     1729, 1730, 1729, 1731, 1732, 1733, 1734, 1729, 1729, 1735,
     1736, 1737, 1738, 1740, 1741, 1742, 1744, 1745, 1746, 1747,
     1749, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1758, 1759,
     1760, 1761, 1762, 1764, 1765, 1729, 1729, 1729, 1767, 1768,
     1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1779,
     1780, 1781, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1792,

     1793, 1794, 1797, 1801, 1803, 1803, 1803, 1803, 1803, 1803,
     1803, 1803, 1803, 1804, 1803, 1805, 1806, 1808, 1809, 1803,
     1803, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1822, 1823,
     1825, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
     1838, 1839, 1840, 1841, 1842, 1843, 1844, 1803, 1803, 1803,
     1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1845,
     1818, 1846, 1851, 1852, 1854, 1818, 1818, 1855, 1856, 1858,
     1859, 1861, 1865, 1866, 1869, 1870, 1871, 1872, 1875, 1876,
     1877, 1879, 1880, 1886, 1888, 1889, 1890, 1891, 1892, 1893,
     1894, 1895, 1896, 1818, 1818, 1818, 1874, 1874, 1874, 1874,

     1874, 1874, 1874, 1874, 1874, 1898, 1874, 1900, 1901, 1903,
     1904, 1874, 1874, 1905, 1907, 1908, 1909, 1911, 1912, 1914,
     1916, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1926, 1927,
     1928, 1929, 1933, 1937, 1938, 1939, 1942, 1945, 1946, 1874,
     1874, 1874, 1948, 1949, 1950, 1951, 1954, 1958, 1962, 1967,
     1962, 1962, 1963, 1963, 1963, 1963, 1964, 1964, 1965, 1965,
     1965, 1965, 1966, 1966, 1966, 1966, 1968, 1968, 1968, 1968,
     1969, 1969, 1969, 1969, 1970, 1970, 1970, 1970, 1971, 1971,
     1971, 1971, 1972, 1972, 1972, 1972, 1973, 1973, 1973, 1973,
     1974, 1974, 1974, 1974, 1975, 1975, 1975, 1975, 1976, 1976,

     1976, 1976, 1977, 1977, 1977, 1977, 1978, 1978, 1978, 1978,
     1979, 1979, 1979, 1979, 1980, 1980, 1980, 1980, 1981, 1981,
     1981, 1981, 1982, 1982, 1982, 1982, 1983, 1983, 1983, 1983,
     1984, 1984, 1984, 1984, 1985, 1985, 1985, 1985, 1986, 1986,
     1986, 1986, 1987, 1987, 1987, 1987, 1988, 1988, 1988, 1988,
     1989, 1989, 1989, 1989, 1990, 1990, 1990, 1990, 1991, 1991,
     1991, 1991,  644,  643,  642,  641,  640,  639,  638,  637,
      636,  635,  634,  633,  632,  631,  630,  629,  628,  627,
      626,  625,  624,  623,  621,  620,  619,  618,  617,  616,
      615,  614,  613,  612,  611,  610,  609,  607,  605,  604,

      603,  602,  601,  600,  599,  598,  597,  596,  595,  594,
      593,  592,  591,  589,  588,  587,  586,  585,  584,  583,
      582,  580,  579,  577,  575,  574,  573,  572,  571,  570,
      569,  568,  567,  566,  565,  564,  563,  562,  561,  560,
      559,  558,  557,  556,  555,  554,  553,  552,  551,  550,
      548,  547,  546,  545,  544,  543,  542,  540,  539,  538,
      537,  536,  535,  534,  533,  532,  531,  530,  529,  528,
      527,  526,  525,  523,  522,  521,  520,  519,  518,  517,
      515,  514,  513,  512,  511,  510,  509,  507,  506,  505,
      503,  502,  501,  500,  499,  498,  496,  495,  494,  493,

      492,  491,  489,  487,  486,  485,  484,  481,  480,  479,
      478,  477,  476,  475,  474,  473,  472,  471,  470,  469,
      468,  467,  466,  465,  463,  462,  461,  460,  459,  457,
      456,  455,  454,  453,  452,  451,  450,  449,  448,  447,
      446,  445,  444,  443,  442,  441,  440,  439,  438,  437,
      436,  435,  434,  433,  432,  431,  430,  429,  428,  427,
      426,  424,  423,  420,  418,  417,  415,  414,  413,  412,
      411,  410,  409,  408,  407,  406,  405,  404,  403,  402,
      401,  400,  399,  398,  397,  396,  394,  392,  391,  390,
      388,  387,  386,  385,  384,  381,  380,  379,  378,  374,

      372,  371,  370,  367,  365,  364,  363,  362,  361,  360,
      356,  355,  354,  351,  350,  349,  348,  345,  344,  343,
      342,  341,  340,  338,  337,  336,  335,  334,  333,  332,
      331,  329,  328,  327,  326,  324,  323,  322,  320,  318,
      317,  315,  314,  313,  310,  309,  308,  307,  306,  304,
      302,  301,  300,  299,  297,  296,  294,  293,  292,  291,
      290,  289,  287,  286,  285,  284,  282,  281,  280,  279,
      278,  277,  276,  275,  274,  273,  272,  271,  270,  269,
      267,  266,  265,  262,  261,  260,  259,  258,  257,  254,
      253,  252,  251,  250,  248,  247,  246,  243,  242,  241,

      240,  236,  235,  234,  233,  232,  229,  228,  227,  226,
      225,  224,  223,  222,  221,  220,  219,  218,  217,  216,
      215,  213,  212,  211,  210,  209,  208,  207,  206,  205,
      203,  202,  201,  199,  198,  197,  196,  195,  194,  193,
      192,  191,  190,  189,  188,  187,  186,  185,  183,  182,
      181,  180,  179,  178,  177,  174,  173,  171,  170,  169,
      168,  167,  166,  165,  164,  163,  162,  161,  160,  159,
      158,  157,  156,  154,  153,  152,  151,  150,  149,  147,
      146,  143,  141,  139,  138,  137,  135,  133,  132,  131,
      130,  129,  128,  127,  126,  125,  123,  122,  121,  120,

      118,  117,  116,  115,  114,  112,  109,  108,  105,  104,
      103,  102,  101,  100,   99,   98,   97,   96,   95,   94,
       93,   91,   89,   88,   87,   86,   85,   82,   81,   80,
       77,   76,   75,   73,   71,   70,   69,   68,   67,   66,
       65,   64,   63,   62,   61,   60,   57,   53,   52,   46,
       45,   42,   41,   40,   39,   28,   24,   15,    7,    5,
        3, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,

     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961
    ) ;


-- copy whatever the last rule matched to the standard output

procedure ECHO is
begin
   if Text_IO.is_open(user_output_file) then
     Text_IO.put( user_output_file, yytext );
   else
     Text_IO.put( yytext );
   end if;
end ECHO;

-- enter a start condition.
-- Using procedure requires a () after the ENTER, but makes everything
-- much neater.

procedure ENTER( state : integer ) is
begin
     yy_start := 1 + 2 * state;
end ENTER;

-- action number for EOF rule of a given start state
function YY_STATE_EOF(state : integer) return integer is
begin
     return YY_END_OF_BUFFER + state + 1;
end YY_STATE_EOF;

-- return all but the first 'n' matched characters back to the input stream
procedure yyless(n : integer) is
begin
        yy_ch_buf(yy_cp) := yy_hold_char; -- undo effects of setting up yytext
        yy_cp := yy_bp + n;
        yy_c_buf_p := yy_cp;
        YY_DO_BEFORE_ACTION; -- set up yytext again
end yyless;

-- redefine this if you have something you want each time.
procedure YY_USER_ACTION is
begin
        null;
end;

-- yy_get_previous_state - get the state just before the EOB char was reached

function yy_get_previous_state return yy_state_type is
    yy_current_state : yy_state_type;
    yy_c : short;
begin
    yy_current_state := yy_start;

    for yy_cp in yytext_ptr..yy_c_buf_p - 1 loop
	yy_c := yy_ec(yy_ch_buf(yy_cp));
	if yy_accept(yy_current_state) /= 0 then
	    yy_last_accepting_state := yy_current_state;
	    yy_last_accepting_cpos := yy_cp;
	end if;
	while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
	    yy_current_state := yy_def(yy_current_state);
	    if ( yy_current_state >= 1962 ) then
		yy_c := yy_meta(yy_c);
	    end if;
	end loop;
	yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
    end loop;

    return yy_current_state;
end yy_get_previous_state;

procedure yyrestart( input_file : file_type ) is
begin
   open_input(Text_IO.name(input_file));
end yyrestart;

begin -- of YYLex
<<new_file>>
        -- this is where we enter upon encountering an end-of-file and
        -- yywrap() indicating that we should continue processing

    if yy_init then
        if yy_start = 0 then
            yy_start := 1;      -- first start state
        end if;

        -- we put in the '\n' and start reading from [1] so that an
        -- initial match-at-newline will be true.

        yy_ch_buf(0) := ASCII.LF;
        yy_n_chars := 1;

        -- we always need two end-of-buffer characters. The first causes
        -- a transition to the end-of-buffer state. The second causes
        -- a jam in that state.

        yy_ch_buf(yy_n_chars) := YY_END_OF_BUFFER_CHAR;
        yy_ch_buf(yy_n_chars + 1) := YY_END_OF_BUFFER_CHAR;

        yy_eof_has_been_seen := false;

        yytext_ptr := 1;
        yy_c_buf_p := yytext_ptr;
        yy_hold_char := yy_ch_buf(yy_c_buf_p);
        yy_init := false;
-- UMASS CODES :
--   Initialization
        tok_begin_line := 1;
        tok_end_line := 1;
        tok_begin_col := 0;
        tok_end_col := 0;
        token_at_end_of_line := false;
        line_number_of_saved_tok_line1 := 0;
        line_number_of_saved_tok_line2 := 0;
-- END OF UMASS CODES.
    end if; -- yy_init

    loop                -- loops until end-of-file is reached

-- UMASS CODES :
--    if last matched token is end_of_line, we must
--    update the token_end_line and reset tok_end_col.
    if Token_At_End_Of_Line then
      Tok_End_Line := Tok_End_Line + 1;
      Tok_End_Col := 0;
      Token_At_End_Of_Line := False;
    end if;
-- END OF UMASS CODES.

        yy_cp := yy_c_buf_p;

        -- support of yytext
        yy_ch_buf(yy_cp) := yy_hold_char;

        -- yy_bp points to the position in yy_ch_buf of the start of the
        -- current run.
	yy_bp := yy_cp;
	yy_current_state := yy_start;
	loop
		yy_c := yy_ec(yy_ch_buf(yy_cp));
		if yy_accept(yy_current_state) /= 0 then
		    yy_last_accepting_state := yy_current_state;
		    yy_last_accepting_cpos := yy_cp;
		end if;
		while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
		    yy_current_state := yy_def(yy_current_state);
		    if ( yy_current_state >= 1962 ) then
			yy_c := yy_meta(yy_c);
		    end if;
		end loop;
		yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
	    yy_cp := yy_cp + 1;
if ( yy_current_state = 1961 ) then
    exit;
end if;
	end loop;
	yy_cp := yy_last_accepting_cpos;
	yy_current_state := yy_last_accepting_state;

<<next_action>>
	    yy_act := yy_accept(yy_current_state);
            YY_DO_BEFORE_ACTION;
            YY_USER_ACTION;

        if aflex_debug then  -- output acceptance info. for (-d) debug mode
            Text_IO.put( Standard_Error, "--accepting rule #" );
            Text_IO.put( Standard_Error, INTEGER'IMAGE(yy_act) );
            Text_IO.put_line( Standard_Error, "(""" & yytext & """)");
        end if;

-- UMASS CODES :
--   Update tok_begin_line, tok_end_line, tok_begin_col and tok_end_col
--   after matching the token.
        if yy_act /= YY_END_OF_BUFFER and then yy_act /= 0 then
-- Token are matched only when yy_act is not yy_end_of_buffer or 0.
          Tok_Begin_Line := Tok_End_Line;
          Tok_Begin_Col := Tok_End_Col + 1;
          Tok_End_Col := Tok_Begin_Col + yy_cp - yy_bp - 1;
          if yy_ch_buf ( yy_bp ) = ASCII.LF then
            Token_At_End_Of_Line := True;
          end if;
        end if;
-- END OF UMASS CODES.

<<do_action>>   -- this label is used only to access EOF actions
            case yy_act is
		when 0 => -- must backtrack
		-- undo the effects of YY_DO_BEFORE_ACTION
		yy_ch_buf(yy_cp) := yy_hold_char;
		yy_cp := yy_last_accepting_cpos;
		yy_current_state := yy_last_accepting_state;
		goto next_action;



-- /* ... */ -style comments
when 1 => 
--# line 55 "rc.l"

         RC_Help.RC_Comment(YYText(3..YYLength-2));
         

-- // -style comment -> skip rest of line.
when 2 => 
--# line 60 "rc.l"

         RC_Help.RC_Comment(YYText);
                      linenum:= linenum + 1;
         

when 3 => 
--# line 65 "rc.l"
 return BAR_t; 

when 4 => 
--# line 66 "rc.l"
 return COMMA_t; 

when 5 => 
--# line 67 "rc.l"
 return LBRACE_t; 

when 6 => 
--# line 68 "rc.l"
 return RBRACE_t; 

when 7 => 
--# line 69 "rc.l"
 return C_INCLUDE_t; 

when 8 => 
--# line 70 "rc.l"
 return NOT_t; 

-----------
-- Noise --
-----------
when 9 => 
--# line 76 "rc.l"
 null;  -- skip rest of line - was  return C_CRAP_t; 

when 10 => 
--# line 77 "rc.l"
 null; 

when 11 => 
--# line 78 "rc.l"
 null; 

when 12 => 
--# line 79 "rc.l"
 null; 

when 13 => 
--# line 80 "rc.l"
 null; 

when 14 => 
--# line 81 "rc.l"
 null; 

when 15 => 
--# line 82 "rc.l"
 null; 

when 16 => 
--# line 83 "rc.l"
 null; 

when 17 => 
--# line 84 "rc.l"
 null; 

---------------
-- Resources --
---------------
when 18 => 
--# line 90 "rc.l"
 return DIALOG_t; 

when 19 => 
--# line 91 "rc.l"
 return DIALOGEX_t; 

when 20 => 
--# line 92 "rc.l"
 return MENU_t; 

when 21 => 
--# line 93 "rc.l"
 return DLGINCLUDE_t; 

when 22 => 
--# line 94 "rc.l"
 return TEXTINCLUDE_t; 

when 23 => 
--# line 95 "rc.l"
 return GUIDELINES_t; 

when 24 => 
--# line 96 "rc.l"
 return DESIGNINFO_t; 

when 25 => 
--# line 97 "rc.l"
 return RT_MANIFEST_t; 

when 26 => 
--# line 98 "rc.l"
 return MOVEABLE_t; 

when 27 => 
--# line 99 "rc.l"
 return PURE_t; 

when 28 => 
--# line 100 "rc.l"
 return FIXED_t; 

when 29 => 
--# line 101 "rc.l"
 return PRELOAD_t; 

when 30 => 
--# line 102 "rc.l"
 return DISCARDABLE_t; 

when 31 => 
--# line 103 "rc.l"
 return LANGUAGE_t; 

when 32 => 
--# line 104 "rc.l"
 return STYLE_t; 

when 33 => 
--# line 105 "rc.l"
 return EXSTYLE_t; 

when 34 => 
--# line 106 "rc.l"
 return CAPTION_t; 

when 35 => 
--# line 107 "rc.l"
 return CLASS_t; 

when 36 => 
--# line 108 "rc.l"
 return FONT_t; 

when 37 => 
--# line 109 "rc.l"
 return LTEXT_t; 

when 38 => 
--# line 110 "rc.l"
 return CTEXT_t; 

when 39 => 
--# line 111 "rc.l"
 return RTEXT_t; 

when 40 => 
--# line 113 "rc.l"
 return BEGIN_t; 

when 41 => 
--# line 114 "rc.l"
 return END_t; 

when 42 => 
--# line 116 "rc.l"
 return CONTROL_t; 

when 43 => 
--# line 117 "rc.l"
 return EDITTEXT_t; 

when 44 => 
--# line 118 "rc.l"
 return COMBOBOX_t; 

when 45 => 
--# line 119 "rc.l"
 return GROUPBOX_t; 

when 46 => 
--# line 120 "rc.l"
 return LISTBOX_t; 

when 47 => 
--# line 122 "rc.l"
 return RADIOBUTTON_t; 

when 48 => 
--# line 123 "rc.l"
 return AUTORADIOBUTTON_t; 

when 49 => 
--# line 125 "rc.l"
 return CHECKBOX_t; 

when 50 => 
--# line 126 "rc.l"
 return AUTOCHECKBOX_t; 

when 51 => 
--# line 127 "rc.l"
 return AUTO3STATE_t; 

when 52 => 
--# line 128 "rc.l"
 return STATE3_t; 

when 53 => 
--# line 130 "rc.l"
 return PUSHBUTTON_t; 

when 54 => 
--# line 131 "rc.l"
 return DEFPUSHBUTTON_t; 

when 55 => 
--# line 133 "rc.l"
 return SCROLLBAR_t; 

-----------
-- Menus --
-----------
when 56 => 
--# line 138 "rc.l"
 return CHECKED_t; 

when 57 => 
--# line 139 "rc.l"
 return GRAYED_t; 

when 58 => 
--# line 140 "rc.l"
 return HELP_t; 

when 59 => 
--# line 141 "rc.l"
 return INACTIVE_t; 

when 60 => 
--# line 142 "rc.l"
 return MENUBARBREAK_t; 

when 61 => 
--# line 143 "rc.l"
 return MENUBREAK_t; 

when 62 => 
--# line 144 "rc.l"
 return MENUITEM_t; 

when 63 => 
--# line 145 "rc.l"
 return POPUP_t; 

when 64 => 
--# line 146 "rc.l"
 return SEPARATOR_t; 

------------------
-- Accelerators --
------------------
when 65 => 
--# line 151 "rc.l"
 return ACCELERATORS_t; 

when 66 => 
--# line 152 "rc.l"
 return CHARACTERISTICS_t; 

when 67 => 
--# line 153 "rc.l"
 return VERSION_t; 

when 68 => 
--# line 154 "rc.l"
 return ASCII_t; 

when 69 => 
--# line 155 "rc.l"
 return VIRTKEY_t; 

when 70 => 
--# line 156 "rc.l"
 return NOINVERT_t; 

when 71 => 
--# line 157 "rc.l"
 return ALT_t; 

when 72 => 
--# line 158 "rc.l"
 return SHIFT_t; 

--------------
-- Versions --
--------------
when 73 => 
--# line 164 "rc.l"
 return VERSIONINFO_t; 

when 74 => 
--# line 165 "rc.l"
 return FILEVERSION_t; 

when 75 => 
--# line 166 "rc.l"
 return PRODUCTVERSION_t; 

when 76 => 
--# line 167 "rc.l"
 return FILEFLAGSMASK_t; 

when 77 => 
--# line 168 "rc.l"
 return FILEFLAGS_t; 

when 78 => 
--# line 169 "rc.l"
 return FILEOS_t; 

when 79 => 
--# line 170 "rc.l"
 return FILETYPE_t; 

when 80 => 
--# line 171 "rc.l"
 return FILESUBTYPE_t; 

when 81 => 
--# line 172 "rc.l"
 return BLOCK_t; 

when 82 => 
--# line 173 "rc.l"
 return VALUE_t; 

-------------------
-- Graphic items --
-------------------
when 83 => 
--# line 178 "rc.l"
 return ICON_t; 

when 84 => 
--# line 179 "rc.l"
 return BITMAP_t; 

when 85 => 
--# line 180 "rc.l"
 return CURSOR_t; 

--------------
-- Toolbars --
--------------
when 86 => 
--# line 185 "rc.l"
 return TOOLBAR_t; 

when 87 => 
--# line 186 "rc.l"
 return BUTTON_t; 

when 88 => 
--# line 187 "rc.l"
 return SEPARATOR_t; 

when 89 => 
--# line 189 "rc.l"
 return STRINGTABLE_t; 

------------------
-- Window Class --
------------------
when 90 => 
--# line 194 "rc.l"
 return ANIMATE_CLASS_t; 

when 91 => 
--# line 195 "rc.l"
 return DATETIMEPICK_CLASS_t; 

when 92 => 
--# line 196 "rc.l"
 return MONTHCAL_CLASS_t; 

when 93 => 
--# line 197 "rc.l"
 return PROGRESS_CLASS_t; 

when 94 => 
--# line 198 "rc.l"
 return TRACKBAR_CLASS_t; 

when 95 => 
--# line 199 "rc.l"
 return UPDOWN_CLASS_t; 

when 96 => 
--# line 200 "rc.l"
 return WC_LISTVIEW_t; 

when 97 => 
--# line 201 "rc.l"
 return WC_TABCONTROL_t; 

when 98 => 
--# line 202 "rc.l"
 return WC_TREEVIEW_t; 

when 99 => 
--# line 203 "rc.l"
 return WC_STATIC_t; 

------------
-- Styles --
------------
-- Window style
when 100 => 
--# line 210 "rc.l"
 return WS_BORDER_t; 

when 101 => 
--# line 211 "rc.l"
 return WS_CAPTION_t; 

when 102 => 
--# line 212 "rc.l"
 return WS_CHILD_t; 

when 103 => 
--# line 213 "rc.l"
 return WS_CLIPCHILDREN_t; 

when 104 => 
--# line 214 "rc.l"
 return WS_CLIPSIBLINGS_t; 

when 105 => 
--# line 215 "rc.l"
 return WS_DISABLED_t; 

when 106 => 
--# line 216 "rc.l"
 return WS_DLGFRAME_t; 

when 107 => 
--# line 217 "rc.l"
 return WS_GROUP_t; 

when 108 => 
--# line 218 "rc.l"
 return WS_HSCROLL_t; 

when 109 => 
--# line 219 "rc.l"
 return WS_MINIMIZEBOX_t; 

when 110 => 
--# line 220 "rc.l"
 return WS_MAXIMIZEBOX_t; 

when 111 => 
--# line 221 "rc.l"
 return WS_POPUP_t; 

when 112 => 
--# line 222 "rc.l"
 return WS_SIZEBOX_t; 

when 113 => 
--# line 223 "rc.l"
 return WS_SYSMENU_t; 

when 114 => 
--# line 224 "rc.l"
 return WS_TABSTOP_t; 

when 115 => 
--# line 225 "rc.l"
 return WS_VISIBLE_t; 

when 116 => 
--# line 226 "rc.l"
 return WS_VSCROLL_t; 

when 117 => 
--# line 227 "rc.l"
 return WS_THICKFRAME_t; 

-- Dialog style
when 118 => 
--# line 230 "rc.l"
 return DS_3DLOOK_t; 

when 119 => 
--# line 231 "rc.l"
 return DS_CENTER_t; 

when 120 => 
--# line 232 "rc.l"
 return DS_CENTERMOUSE_t; 

when 121 => 
--# line 233 "rc.l"
 return DS_CONTROL_t; 

when 122 => 
--# line 234 "rc.l"
 return DS_FIXEDSYS_t; 

when 123 => 
--# line 235 "rc.l"
 return DS_LOCALEDIT_t; 

when 124 => 
--# line 236 "rc.l"
 return DS_MODALFRAME_t; 

when 125 => 
--# line 237 "rc.l"
 return DS_NOIDLEMSG_t; 

when 126 => 
--# line 238 "rc.l"
 return DS_SETFOREGROUND_t; 

when 127 => 
--# line 239 "rc.l"
 return DS_CONTEXTHELP_t; 

when 128 => 
--# line 240 "rc.l"
 return DS_SHELLFONT_t; 

when 129 => 
--# line 241 "rc.l"
 return DS_SETFONT_t; 

when 130 => 
--# line 242 "rc.l"
 return DS_SYSMODAL_t; 

-- Static styles
when 131 => 
--# line 245 "rc.l"
 return SS_BITMAP_t; 

when 132 => 
--# line 246 "rc.l"
 return SS_BLACKFRAME_t; 

when 133 => 
--# line 247 "rc.l"
 return SS_BLACKRECT_t; 

when 134 => 
--# line 248 "rc.l"
 return SS_CENTERIMAGE_t; 

when 135 => 
--# line 249 "rc.l"
 return SS_ENDELLIPSIS_t; 

when 136 => 
--# line 250 "rc.l"
 return SS_GRAYFRAME_t; 

when 137 => 
--# line 251 "rc.l"
 return SS_GRAYRECT_t; 

when 138 => 
--# line 252 "rc.l"
 return SS_ICON_t; 

when 139 => 
--# line 253 "rc.l"
 return SS_LEFT_t; 

when 140 => 
--# line 254 "rc.l"
 return SS_LEFTNOWORDWRAP_t; 

when 141 => 
--# line 255 "rc.l"
 return SS_NOPREFIX_t; 

when 142 => 
--# line 256 "rc.l"
 return SS_NOTIFY_t; 

when 143 => 
--# line 257 "rc.l"
 return SS_REALSIZEIMAGE_t; 

when 144 => 
--# line 258 "rc.l"
 return SS_RIGHT_t; 

when 145 => 
--# line 259 "rc.l"
 return SS_SIMPLE_t; 

when 146 => 
--# line 260 "rc.l"
 return SS_SUNKEN_t; 

when 147 => 
--# line 261 "rc.l"
 return SS_WHITERECT_t; 

-- Edit styles
when 148 => 
--# line 264 "rc.l"
 return ES_AUTOHSCROLL_t; 

when 149 => 
--# line 265 "rc.l"
 return ES_AUTOVSCROLL_t; 

when 150 => 
--# line 266 "rc.l"
 return ES_CENTER_t; 

when 151 => 
--# line 267 "rc.l"
 return ES_LEFT_t; 

when 152 => 
--# line 268 "rc.l"
 return ES_MULTILINE_t; 

when 153 => 
--# line 269 "rc.l"
 return ES_NOHIDESEL_t; 

when 154 => 
--# line 270 "rc.l"
 return ES_NUMBER_t; 

when 155 => 
--# line 271 "rc.l"
 return ES_OEMCONVERT_t; 

when 156 => 
--# line 272 "rc.l"
 return ES_PASSWORD_t; 

when 157 => 
--# line 273 "rc.l"
 return ES_READONLY_t; 

when 158 => 
--# line 274 "rc.l"
 return ES_RIGHT_t; 

when 159 => 
--# line 275 "rc.l"
 return ES_UPPERCASE_t; 

when 160 => 
--# line 276 "rc.l"
 return ES_WANTRETURN_t; 

-- Box/Button styles
when 161 => 
--# line 279 "rc.l"
 return BS_3STATE_t; 

when 162 => 
--# line 280 "rc.l"
 return BS_AUTO3STATE_t; 

when 163 => 
--# line 281 "rc.l"
 return BS_AUTOCHECKBOX_t; 

when 164 => 
--# line 282 "rc.l"
 return BS_AUTORADIOBUTTON_t; 

when 165 => 
--# line 283 "rc.l"
 return BS_BITMAP_t; 

when 166 => 
--# line 284 "rc.l"
 return BS_BOTTOM_t; 

when 167 => 
--# line 285 "rc.l"
 return BS_CENTER_t; 

when 168 => 
--# line 286 "rc.l"
 return BS_CHECKBOX_t; 

when 169 => 
--# line 287 "rc.l"
 return BS_DEFPUSHBUTTON_t; 

when 170 => 
--# line 288 "rc.l"
 return BS_FLAT_t; 

when 171 => 
--# line 289 "rc.l"
 return BS_LEFT_t; 

when 172 => 
--# line 290 "rc.l"
 return BS_LEFTTEXT_t; 

when 173 => 
--# line 291 "rc.l"
 return BS_MULTILINE_t; 

when 174 => 
--# line 292 "rc.l"
 return BS_OWNERDRAW_t; 

when 175 => 
--# line 293 "rc.l"
 return BS_PUSHBUTTON_t; 

when 176 => 
--# line 294 "rc.l"
 return BS_PUSHLIKE_t; 

when 177 => 
--# line 295 "rc.l"
 return BS_RADIOBUTTON_t; 

when 178 => 
--# line 296 "rc.l"
 return BS_RIGHT_t; 

when 179 => 
--# line 297 "rc.l"
 return BS_TEXT_t; 

when 180 => 
--# line 298 "rc.l"
 return BS_TOP_t; 

when 181 => 
--# line 299 "rc.l"
 return BS_VCENTER_t; 

-- Combo-box styles
when 182 => 
--# line 302 "rc.l"
 return CBS_AUTOHSCROLL_t; 

when 183 => 
--# line 303 "rc.l"
 return CBS_SIMPLE_t; 

when 184 => 
--# line 304 "rc.l"
 return CBS_DISABLENOSCROLL_t; 

when 185 => 
--# line 305 "rc.l"
 return CBS_DROPDOWN_t; 

when 186 => 
--# line 306 "rc.l"
 return CBS_DROPDOWNLIST_t; 

when 187 => 
--# line 307 "rc.l"
 return CBS_HASSTRINGS_t; 

when 188 => 
--# line 308 "rc.l"
 return CBS_OWNERDRAWFIXED_t; 

when 189 => 
--# line 309 "rc.l"
 return CBS_SORT_t; 

-- Listbox styles
when 190 => 
--# line 312 "rc.l"
 return LBS_DISABLENOSCROLL_t; 

when 191 => 
--# line 313 "rc.l"
 return LBS_EXTENDEDSEL_t; 

when 192 => 
--# line 314 "rc.l"
 return LBS_HASSTRINGS_t; 

when 193 => 
--# line 315 "rc.l"
 return LBS_MULTIPLESEL_t; 

when 194 => 
--# line 316 "rc.l"
 return LBS_MULTICOLUMN_t; 

when 195 => 
--# line 317 "rc.l"
 return LBS_NOINTEGRALHEIGHT_t; 

when 196 => 
--# line 318 "rc.l"
 return LBS_NOSEL_t; 

when 197 => 
--# line 319 "rc.l"
 return LBS_NOTIFY_t; 

when 198 => 
--# line 320 "rc.l"
 return LBS_OWNERDRAWFIXED_t; 

when 199 => 
--# line 321 "rc.l"
 return LBS_SORT_t; 

when 200 => 
--# line 322 "rc.l"
 return LBS_USETABSTOPS_t; 

-- Progress bar styles
when 201 => 
--# line 325 "rc.l"
 return PBS_SMOOTH_t; 

when 202 => 
--# line 326 "rc.l"
 return PBS_VERTICAL_t; 

-- Scrollbar styles
when 203 => 
--# line 329 "rc.l"
 return SBS_VERT_t; 

-- Trackbar styles
when 204 => 
--# line 332 "rc.l"
 return TBS_AUTOTICKS_t; 

when 205 => 
--# line 333 "rc.l"
 return TBS_BOTTOM_t; 

when 206 => 
--# line 334 "rc.l"
 return TBS_BOTH_t; 

when 207 => 
--# line 335 "rc.l"
 return TBS_NOTICKS_t; 

when 208 => 
--# line 336 "rc.l"
 return TBS_VERT_t; 

when 209 => 
--# line 337 "rc.l"
 return TBS_TOP_t; 

when 210 => 
--# line 338 "rc.l"
 return TBS_TOOLTIPS_t; 

-- Up-down styles
when 211 => 
--# line 341 "rc.l"
 return UDS_HORZ_t; 

when 212 => 
--# line 342 "rc.l"
 return UDS_ARROWKEYS_t; 

when 213 => 
--# line 343 "rc.l"
 return UDS_WRAP_t; 

when 214 => 
--# line 344 "rc.l"
 return UDS_NOTHOUSANDS_t; 

when 215 => 
--# line 345 "rc.l"
 return UDS_SETBUDDYINT_t; 

-- Listview styles
when 216 => 
--# line 348 "rc.l"
 return LVS_AUTOARRANGE_t; 

when 217 => 
--# line 349 "rc.l"
 return LVS_ALIGNLEFT_t; 

when 218 => 
--# line 350 "rc.l"
 return LVS_ICON_t; 

when 219 => 
--# line 351 "rc.l"
 return LVS_LIST_t; 

when 220 => 
--# line 352 "rc.l"
 return LVS_NOSORTHEADER_t; 

when 221 => 
--# line 353 "rc.l"
 return LVS_REPORT_t; 

when 222 => 
--# line 354 "rc.l"
 return LVS_SHOWSELALWAYS_t; 

when 223 => 
--# line 355 "rc.l"
 return LVS_SINGLESEL_t; 

when 224 => 
--# line 356 "rc.l"
 return LVS_SORTASCENDING_t; 

-- Treeview styles
when 225 => 
--# line 359 "rc.l"
 return TVS_DISABLEDRAGDROP_t; 

when 226 => 
--# line 360 "rc.l"
 return TVS_EDITLABELS_t; 

when 227 => 
--# line 361 "rc.l"
 return TVS_INFOTIP_t; 

when 228 => 
--# line 362 "rc.l"
 return TVS_HASBUTTONS_t; 

when 229 => 
--# line 363 "rc.l"
 return TVS_HASLINES_t; 

when 230 => 
--# line 364 "rc.l"
 return TVS_LINESATROOT_t; 

when 231 => 
--# line 365 "rc.l"
 return TVS_NOSCROLL_t; 

when 232 => 
--# line 366 "rc.l"
 return TVS_NOTOOLTIPS_t; 

when 233 => 
--# line 367 "rc.l"
 return TVS_SHOWSELALWAYS_t; 

when 234 => 
--# line 368 "rc.l"
 return TVS_SINGLEEXPAND_t; 

when 235 => 
--# line 369 "rc.l"
 return TVS_TRACKSELECT_t; 

-- Date time picker styles
when 236 => 
--# line 372 "rc.l"
 return DTS_RIGHTALIGN_t; 

-- Month calendar styles
when 237 => 
--# line 375 "rc.l"
 return MCS_NOTODAY_t; 

-- Tab Control Styles
when 238 => 
--# line 378 "rc.l"
 return TCS_HOTTRACK_t; 

when 239 => 
--# line 379 "rc.l"
 return TCS_BUTTONS_t; 

-- Grid Styles
when 240 => 
--# line 382 "rc.l"
 return GS_COLUMNLABELS_t; 

when 241 => 
--# line 383 "rc.l"
 return GS_READONLY_t; 

-- Extended styles
when 242 => 
--# line 387 "rc.l"
 return WS_EX_ACCEPTFILES_t; 

when 243 => 
--# line 388 "rc.l"
 return WS_EX_APPWINDOW_t; 

when 244 => 
--# line 389 "rc.l"
 return WS_EX_CLIENTEDGE_t; 

when 245 => 
--# line 390 "rc.l"
 return WS_EX_CONTEXTHELP_t; 

when 246 => 
--# line 391 "rc.l"
 return WS_EX_CONTROLPARENT_t; 

when 247 => 
--# line 392 "rc.l"
 return WS_EX_DLGMODALFRAME_t; 

when 248 => 
--# line 393 "rc.l"
 return WS_EX_NOPARENTNOTIFY_t; 

when 249 => 
--# line 394 "rc.l"
 return WS_EX_RIGHT_t; 

when 250 => 
--# line 395 "rc.l"
 return WS_EX_STATICEDGE_t; 

when 251 => 
--# line 396 "rc.l"
 return WS_EX_TOOLWINDOW_t; 

when 252 => 
--# line 397 "rc.l"
 return WS_EX_TOPMOST_t; 

when 253 => 
--# line 398 "rc.l"
 return WS_EX_TRANSPARENT_t; 

-- Misc --
when 254 => 
--# line 401 "rc.l"
 return IDC_STATIC_t; 

when 255 => 
--# line 403 "rc.l"
 yylval.intval := 0; return NUMBER; 

when 256 => 
--# line 404 "rc.l"
 yylval.intval := 1; return NUMBER; 

when 257 => 
--# line 406 "rc.l"
 yylval.intval   := 0;
                   yylval.floatval := 0.0;
                   return NUMBER;
                 

when 258 => 
--# line 411 "rc.l"
 begin
                     yylval.intval := Long_Long_Integer'Value(yytext);
                   exception
                     when Constraint_Error =>
                      -- declare
                      --   msg: constant String:=
                      --    "Error with integer ? [" & yytext & ']';
                      -- begin
                      --   Put_Line(Standard_Error, msg);
                      --   raise Constraint_Error with msg;
                      -- end;
                      yylval.intval := -1;
                      -- not nice at all, but a >2**31 number
                      -- seems to appear only at top (some checksum)
                   end;
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 259 => 
--# line 429 "rc.l"
 yylval.intval := Long_Long_Integer'Value("8#"&yytext&'#');
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 260 => 
--# line 433 "rc.l"

                   yylval.floatval := Long_Float'Value(yytext);
                   return FLOAT_t;
                   

when 261 => 
--# line 438 "rc.l"
 declare
                     hexa_c: String:= yytext;
                     hexa_last: Integer:= hexa_c'Last;
                   begin
                     if hexa_c(hexa_last)='L' then
                       hexa_last:= hexa_last - 1;
                     end if;
                     yylval.intval := Long_Long_Integer'Value("16#" & hexa_c(hexa_c'First+2 .. hexa_last) & '#');
                     yylval.floatval:= Long_Float( yylval.intval );
                     return NUMBER;
                   end;
                

when 262 => 
--# line 451 "rc.l"
return RCString; -- borrowed from ada95.l

-- Doesn't work with double quotes
-- \"({NOTGUIL})*\"    {return RCString;}
when 263 => 
--# line 456 "rc.l"
return INCString;

when 264 => 
--# line 458 "rc.l"
 return IDENT_t; 

when 265 => 
--# line 461 "rc.l"
 null; -- \t  ;

when 266 => 
--# line 462 "rc.l"
linenum:= linenum+1;

when 267 => 
--# line 464 "rc.l"
 null; -- ??
                     -- C: return *yytext;
                   

-- "("                { return '('; }
-- ")"                { return ')'; }
-- "}"                { return '}'; }
-- "{"                { return '{'; }
when 268 => 
--# line 472 "rc.l"
ECHO;
when YY_END_OF_BUFFER + INITIAL + 1 => 
    return End_Of_Input;
                when YY_END_OF_BUFFER =>
                    -- undo the effects of YY_DO_BEFORE_ACTION
                    yy_ch_buf(yy_cp) := yy_hold_char;

                    yytext_ptr := yy_bp;

                    case yy_get_next_buffer is
                        when EOB_ACT_END_OF_FILE =>
                            begin
                            if yywrap then
                                -- note: because we've taken care in
                                -- yy_get_next_buffer() to have set up yytext,
                                -- we can now set up yy_c_buf_p so that if some
                                -- total hoser (like aflex itself) wants
                                -- to call the scanner after we return the
                                -- End_Of_Input, it'll still work - another
                                -- End_Of_Input will get returned.

                                yy_c_buf_p := yytext_ptr;

                                yy_act := YY_STATE_EOF((yy_start - 1) / 2);

                                goto do_action;
                            else
                                --  start processing a new file
                                yy_init := true;
                                goto new_file;
                            end if;
                            end;
                        when EOB_ACT_RESTART_SCAN =>
                            yy_c_buf_p := yytext_ptr;
                            yy_hold_char := yy_ch_buf(yy_c_buf_p);
                        when EOB_ACT_LAST_MATCH =>
                            yy_c_buf_p := yy_n_chars;
                            yy_current_state := yy_get_previous_state;

                            yy_cp := yy_c_buf_p;
                            yy_bp := yytext_ptr;
                            goto next_action;
                        when others => null;
                        end case; -- case yy_get_next_buffer()
                when others =>
                    Text_IO.put( "action # " );
                    Text_IO.put( INTEGER'IMAGE(yy_act) );
                    Text_IO.new_line;
                    raise AFLEX_INTERNAL_ERROR;
            end case; -- case (yy_act)
        end loop; -- end of loop waiting for end of file
end YYLex;
--# line 472 "rc.l"
