--  Warning: This lexical scanner is automatically generated by AFLEX.
--           It is useless to modify it. Change the ".Y" & ".L" files instead.
with Text_IO; use Text_IO;
with rc_dfa; use rc_dfa; 
with rc_io; use rc_io; 
--# line 1 "rc.l"
--------------------------------------------------------------------------
--  RC.l
--
--  Resource Compiler script lexer file (AFLEX)
--
--  Copyright (c) Gautier de Montmollin 2008..2009
--  SWITZERLAND
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.
-- NB: this is the MIT License, as found 28-Jul-2008 on the site
-- http://www.opensource.org/licenses/mit-license.php
--------------------------------------------------------------------------
--
-- Change log:
--
-- 30-Apr-2009 GdM: Some additions for matching ResEdit 1.4.4.19 suppl. tags
-- ...
-- 28-Jul-2008 GdM: Created
--
--# line 52 "rc.l"


with RC_Tokens; use RC_Tokens;
with RC_Help;   use RC_Help;

function YYLex return Token is
subtype Short is Integer range -32768..32767;
    yy_act : Integer;
    yy_c   : Short;

-- returned upon end-of-file
YY_END_TOK : constant Integer := 0;
YY_END_OF_BUFFER : constant := 251;
subtype yy_state_type is Integer;
yy_current_state : yy_state_type;
INITIAL : constant := 0;
yy_accept : constant array(0..1808) of Short :=
    (   0,
      242,  242,  251,  250,  247,  248,  250,  250,    4,  242,
      242,  250,  239,  240,  250,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,    5,    3,    6,  247,    0,
      244,    0,    0,    0,    0,    0,  242,  242,  240,    0,
      242,    0,    0,  241,    0,  240,    0,  245,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,    0,  242,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,    0,    0,    0,    0,    0,    0,    0,  242,    0,
        0,    0,    2,  241,  243,  246,   71,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,   41,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,    8,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,    0,
        0,    0,    0,    0,   11,    0,    0,    0,    0,    0,
        0,    1,  243,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,   36,  246,  246,  246,   58,   83,  246,  246,  246,
      246,  246,  246,  246,  246,   20,  246,  246,  246,  246,
      246,  246,  246,  246,   27,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  237,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  246,  246,   68,  246,  246,  246,   40,  246,   81,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,   35,  246,  246,   38,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  238,  246,
      246,  246,  246,  246,   28,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
       37,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,   63,  246,  246,  246,  246,  246,
      246,   39,  246,  246,  246,   72,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,   32,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,   82,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,    0,    0,   15,    0,
       14,    0,    0,    0,    0,    0,    0,  246,  246,  246,
      246,  246,   84,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  173,  246,   87,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,   85,  246,  246,  246,   18,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,   57,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
       52,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,    0,    0,   16,    0,   11,
        0,    0,    0,    0,   10,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  164,  165,  246,  246,
      246,  246,  246,  246,   34,  246,  246,  246,  246,  246,
      246,  246,  246,  246,   56,  246,   42,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,   33,  246,    0,   78,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,   46,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,   29,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  136,
      137,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  201,  246,  246,  246,   86,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,   67,
       69,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,    0,    9,
        0,   11,    7,    0,   17,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  172,  246,  246,  246,  246,  246,
      246,  246,  182,  246,   49,   44,  246,  246,  246,   19,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,   43,  246,  246,  246,  246,  246,
      246,  246,  246,  153,  246,  246,  246,  246,  246,  246,
       45,  246,  246,   59,   31,  246,  246,  246,  246,  246,

      246,  246,  246,  192,  246,  246,  246,  209,  210,  246,
      246,  246,  246,  246,  246,  246,   62,  246,   26,   70,
      246,  246,  246,  246,  246,  246,  195,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  141,  246,  246,
      246,  246,  246,  198,  246,  246,  246,  200,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  203,
      246,  205,  246,  246,  246,  246,  246,  246,  246,  246,
      102,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  106,  246,  246,  246,  110,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  156,

      246,  246,  246,  160,  161,  162,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  117,  118,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  147,  246,  149,  246,  246,  246,  246,  246,  246,
      246,    0,   79,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  189,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,   61,  246,  246,  246,  246,  246,
      246,  246,   55,   64,  130,  246,  246,  246,  246,  246,
      246,  246,  246,  142,  143,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,   99,  246,  246,  100,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,   51,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  174,  246,
      246,  246,  246,  246,  176,  246,  246,  246,   24,  246,
       21,  246,  246,  120,  246,  246,  246,  246,  128,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,    0,   77,  246,  246,  246,  246,   23,  236,  246,

      246,  246,  246,  246,  246,  190,  246,  246,  246,  246,
      246,  212,  246,  246,  246,  246,  246,  246,  246,  246,
       53,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  197,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  101,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  107,  246,
      246,  111,  112,  113,  246,  114,  115,  246,  246,  246,
      246,  246,  246,  246,  246,  166,  246,  246,  246,  170,
      246,  246,  246,  246,  246,  246,  246,  246,  246,   30,

      246,  246,  121,  246,  246,  246,  246,  246,  129,  246,
      246,  246,  246,  246,  151,  152,  246,  246,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  246,  223,  246,  246,  246,  246,  246,
       47,   25,  246,  246,  246,  246,  135,  246,  139,  246,
      246,   89,  246,  199,  246,  246,   22,  246,  246,  246,
      215,  246,  246,  246,  246,  246,  246,  246,   73,   96,
      246,   98,  246,  104,  105,  246,  246,  246,  246,  246,
      246,  231,  246,  246,  246,  246,  246,  246,  246,   65,
      246,   50,  246,  246,  246,  246,  246,  167,  168,  246,

      246,  246,  246,  178,  246,  246,  246,  246,  246,  246,
      246,  122,  246,  124,  246,  127,  246,  246,  246,  148,
      246,  154,  246,  246,    0,   80,  246,    0,   74,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,   60,  246,  194,  246,  246,  246,  132,
      246,  246,  246,  246,  144,  246,  202,  224,  246,  246,
      217,  246,  219,  246,  246,  246,  246,   95,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,   90,  246,  157,  246,  246,  246,  169,
      246,  246,  246,  246,  246,  246,  246,  246,   54,  246,

      246,  123,  246,  246,  246,  246,  150,  155,  246,  246,
      246,  246,  246,  246,  246,  246,  246,  208,  246,  246,
      246,  246,  246,  246,  246,  131,  246,  246,  246,  246,
      196,  246,  246,  246,  246,  246,  204,  246,   97,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  234,  246,
      246,  246,  116,  246,  246,  246,  246,  171,  246,  246,
      246,  180,  246,  246,  246,  119,  126,  246,  222,  145,
      146,    0,   76,  246,  246,  246,  185,  246,  246,  246,
      246,  246,  246,  246,  246,  246,   92,  246,   93,  133,
      134,  246,  246,   94,  216,  246,  220,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  246,  109,
      108,   48,  158,  246,  246,  175,  246,  246,  246,   66,
      246,  246,  246,  184,  187,  186,  246,  246,  193,  207,
      246,  246,  246,    0,   75,  246,  246,  246,  218,  246,
      206,  103,  246,  226,  246,  246,  246,  246,  246,  246,
      246,  246,  163,  246,  179,  246,  246,  125,  246,  246,
      246,  211,  246,  246,  246,  140,  246,  246,  227,  246,
      246,  246,  232,  233,  246,  246,  246,  246,  246,  246,
      246,  246,  213,  214,  138,  221,  225,  228,  246,  246,
      235,  159,  246,  181,   91,  246,  246,  191,  246,  246,

      177,  183,  246,  229,  246,  188,  230,    0
    ) ;

yy_ec : constant array(ASCII.NUL..Character'Last) of short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   13,
       14,   13,   13,   13,   13,   15,   15,    1,    1,   16,
        1,   17,    1,    1,   19,   20,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       28,   35,   36,   37,   38,   39,   40,   41,   42,   43,
        1,    1,    1,    1,   18,    1,   19,   20,   21,   22,

       23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
       33,   34,   28,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,    1,    1, others=> 1

    ) ;

yy_meta : constant array(0..46) of short :=
    (   0,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
        1,    4,    4,    4,    4,    1,    1,    3,    4,    4,
        4,    4,    4,    4,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    1,    1,    1
    ) ;

yy_base : constant array(0..1838) of Short :=
    (   0,
        0,    0, 2208, 2209, 2205, 2209, 2202,   25, 2209,   41,
       53,   51,   67,   60, 2188,    0,   57,   61,   90,   75,
      122,   73,   23, 2181,   28,  106,   80, 2170,   84,   77,
      129,  118,   96,  137,   50, 2209, 2209, 2209, 2200, 2197,
     2196, 2176,  110,   83, 2163, 2165,  155,  161,  167,  179,
      183, 2190, 2192,  189,    0,  195, 2177, 2209,    0, 2172,
     2155, 2164, 2169, 2152, 2163, 2150, 2153, 2167, 2147, 2149,
     2146,  164, 2162,  115, 2157, 2144, 2141,  187,  153, 2152,
     2158, 2139,  201,  207, 2147, 2151, 2154, 2135, 2140,   91,
     2137,  129, 2141, 2137, 2133, 2144, 2145, 2131, 2126, 2125,

     2137, 2123, 2122, 2125,  185,  198, 2120, 2121,  203,  192,
     2132,  211, 2117, 2117, 2117, 2123, 2131,  211, 2112, 2111,
     2105, 2112,  212, 2108, 2107, 2120, 2111, 2105, 2104, 2120,
     2119, 2112,  205, 2113,  230, 2113, 2114, 2110,  225, 2125,
      236, 2127, 2209,  244, 2099, 2105,    0, 2096, 2099, 2092,
     2097, 2092, 2101,  254, 2084, 2083, 2101, 2083, 2096, 2080,
     2095, 2077, 2072, 2076, 2088, 2076, 2082, 2078, 2086, 2079,
      280, 2087, 2067,    0,  298, 2066, 2066, 2078, 2077, 2062,
     2056, 2059, 2074, 2061, 2062, 2075, 2071, 2066, 2072, 2052,
     2047, 2069, 2068, 2047, 2047, 2060, 2050,    0, 2063, 2042,

     2049,  223, 2055, 2051, 2049, 2044, 2033, 2055, 2039, 2052,
     2046,  319, 2032, 2041, 2037, 2048, 2047, 2027, 2033, 2041,
     2038, 2042, 2041, 2025, 2019, 2020, 2018,  233,  340, 2027,
     2029, 2029, 2024, 2047, 2209,  241,  257, 2019, 2023, 2024,
     2040, 2209, 2209, 2015, 2025, 2016,  251, 2010, 2022, 2011,
     2003, 2000,  216, 2014, 2013, 2005, 2011, 1995, 1992, 1993,
      263, 1997, 2008, 1995, 2000,  273, 2007, 1996, 1988, 1990,
     1987, 1984, 1987, 1982, 1980, 1992, 1983, 1996, 1982, 1991,
      228, 1985, 1978, 1977, 1976,  254, 1973, 1970, 1968, 1982,
     1966, 1965, 1979, 1982,  275, 1966, 1980, 1956, 1974,  289,

     1974,    0, 1972, 1960, 1970,    0,    0, 1956, 1954, 1952,
      358, 1969, 1951,  288, 1955,  294, 1960, 1966, 1945, 1944,
     1948, 1948, 1942, 1944,    0, 1958, 1944, 1957, 1938, 1935,
     1943, 1937, 1934,  270, 1947, 1937, 1933, 1946, 1943, 1932,
      314,  228, 1938, 1940, 1930, 1938,  363, 1934, 1932, 1938,
     1928,    0,  371,  324, 1916, 1932, 1927, 1924, 1925, 1914,
       50, 1917,  380,  278, 1908, 1913, 1911,  308, 1913,  158,
      326,  321, 1913, 1941, 1940, 1918,  344,  280, 1903, 1909,
     1915, 1915, 1900,    0, 1900, 1909, 1915,    0, 1899,    0,
     1895, 1894, 1893, 1892, 1896, 1903, 1907, 1901, 1894, 1891,

     1886, 1899, 1895, 1885, 1895, 1885, 1883, 1877,  340, 1895,
     1873,  345, 1891,  350,    0, 1891, 1877,    0, 1874, 1881,
     1871, 1874, 1880, 1869, 1882, 1872, 1869, 1868, 1858, 1877,
     1875, 1869, 1858, 1871, 1857, 1865, 1868, 1853, 1857, 1858,
     1856, 1855, 1849, 1865, 1858, 1848, 1849, 1850,    0, 1849,
     1842, 1839, 1834, 1852,    0, 1852, 1853, 1842, 1834, 1843,
     1850, 1841, 1826, 1847, 1827, 1831, 1823, 1829, 1825, 1827,
        0,  355, 1838, 1831, 1824, 1833,  378, 1822,  334, 1817,
     1832, 1832, 1828, 1827,    0, 1830, 1827, 1824, 1808, 1825,
     1812,    0, 1820, 1812, 1822,    0, 1803, 1820, 1806, 1815,

     1817, 1802, 1810, 1799, 1813, 1806, 1799, 1797, 1801, 1813,
     1801,    0, 1787, 1791, 1790, 1789, 1798, 1787, 1787, 1799,
     1797, 1797, 1783, 1787, 1780, 1786, 1776, 1777, 1776, 1773,
     1775,    0, 1773, 1782, 1768, 1784, 1782, 1778, 1765, 1765,
     1771, 1770, 1760, 1770, 1776, 1760, 1771, 1750, 1758, 1755,
     1745, 1751, 1766, 1758, 1748, 1762, 1759, 1778, 2209, 1777,
     2209, 1776, 1775,  384, 1755, 1757, 1772, 1739, 1750, 1735,
     1748, 1748,    0, 1750, 1735, 1736, 1729, 1728, 1730, 1726,
     1725, 1724, 1737, 1733, 1731, 1731,    0, 1724,    0, 1723,
     1717, 1717, 1719, 1715, 1718, 1718, 1713, 1710, 1713, 1723,

     1711, 1713,    0, 1711, 1715, 1713, 1716, 1716, 1707, 1703,
     1698, 1697, 1710, 1713, 1712, 1708, 1705, 1698, 1696, 1701,
     1684, 1691, 1686, 1685, 1701, 1699, 1571, 1580, 1575, 1577,
     1562, 1575, 1578,  411, 1576, 1561, 1559,    0,   91,  132,
      142,  232,  256,  298,  321,  350,  358,  394,  360,  370,
      386,  382,  397,  388,  393,  393,  396,  399,  401,  400,
      399,  402,  415,  416,  421,  411,  407,  408,  422,  408,
      410,  410,  410,  422,  415,  431,  415,  422,  433,  421,
      436,  418,  429,  425,  428,  434,  439,  432,  438,  431,
        0,  432,  433,  434,  435,  440,  440,  439,  456,  443,

      460,  444,  457,  450,  447,  452,  451,  452,  451,  470,
      472,  459,  450,  456,  457,  474,  473,  475,  461,  469,
      466,  482,  478,  484,  466,  471,  480,  481,  471,  487,
      480,  476,  492,  487,  480,  514,  515, 2209,  519, 2209,
      520,  501,  522,  523, 2209,  508,  510,  510,  509,  504,
      495,  519,  515,  502,  513,  499,    0,  501,  512,  506,
      522,  510,  507,  508,    0,  513,  528,  514,  513,  527,
      517,  516,  532,  515,    0,  516,    0,  535,  539,  528,
      520,  543,  525,  531,  542,  543,  545,  538,  539,  540,
      538,  542,  540,  548,  538,  550,  554,  552,  557,  548,

      542,  550,  547,  550,  551,    0,  562,  585, 2209,  589,
      562,  578,  566,  562,  572,  570,  585,  586,  591,  588,
      576,  576,  582,  592,  589,  594,  581,  582,    0,  595,
      588,  590,  586,  591,  592,  586,  590,  595,  609,  611,
      600,  602,  613,  600,  601,    0,  600,  604,  604,  605,
      619,  607,  626,  613,  628,  619,  626,  620,  616,    0,
      620,  630,  618,  618,  626,  634,  635,  640,  627,  635,
      635,  633,    0,  627,  628,  636,    0,  632,  648,  636,
      647,  650,  640,  634,  642,  633,  651,  645,  659,  654,
        0,  643,  656,  651,  646,  663,  660,  666,  653,  670,

      656,  671,  663,  661,  668,  660,  665,  665,  668,  671,
      672,  670,  686,  684,  671,  680,  690,  678,  709, 2209,
      710, 2209, 2209,  711, 2209,  678,  695,  680,  689,  686,
      697,  685,  696,  704,  690,  694,  691,  691,  705,  699,
      708,  693,  705,  713,    0,  711,  709,  716,  715,  701,
      704,  710,    0,  706,    0,    0,  708,  705,  720,    0,
      725,  724,  718,  713,  708,  717,  715,  729,  729,  731,
      723,  732,  735,  722,    0,  724,  725,  727,  733,  729,
      733,  733,  735,    0,  747,  746,  734,  729,  771,  754,
        0,  760,  757,    0,    0,  765,  754,  752,  763,  754,

      762,  769,  759,    0,  776,  764,  778,    0,    0,  763,
      764,  764,  782,  780,  768,  775,    0,  787,    0,    0,
      779,  784,  790,  776,  773,  788,    0,  777,  778,  780,
      794,  784,  790,  798,  789,  799,  797,    0,  802,  794,
      792,  808,  793,    0,  798,  811,  796,    0,  799,  797,
      818,  799,  811,  802,  804,  806,  809,  807,  804,    0,
      812,    0,  816,  815,  821,  828,  818,  824,  817,  820,
        0,  827,  825,  837,  836,  824,  832,  828,  827,  837,
      844,  831,  847,    0,  837,  841,  842,    0,  837,  839,
      839,  849,  844,  845,  843,  847,  855,  859,  860,    0,

      844,  859,  861,    0,    0,    0,  858,  844,  859,  852,
      851,  860,  852,  856,  856,  863,  861,  860,  874,  874,
      871,  872,  863,  868,  872,  880,    0,  873,  868,  876,
      865,  886,  874,  879,  874,  889,  880,  895,  896,  895,
      896,    0,  891,    0,  880,  885,  891,  903,  886,  923,
      899,  932, 2209,  969,  903,  901,  917,  911,  920,  908,
      923,  922,    0,  904,  925,  928,  919,  915,  914,  915,
      930,  919,  937,  935,    0,  938,  939,  926,  941,  931,
      931,  929,    0,    0,    0,  931,  956,  954,  955,  962,
      944,  960,  945,    0,    0,  966,  960,  964,  961,  964,

      967,  976,  974,  976,  961,  967,  973,  982,  969,  973,
      981,  976,  968,  988,  984,  986,    0,  973,  988,    0,
      980,  996,  994,  987,  996,  980,  998,  985, 1004,  998,
      988,  996,  996,  996,  999,  987,  988,  991,  995, 1000,
     1000, 1013, 1007, 1003, 1020,    0, 1007, 1003, 1023, 1022,
     1017, 1025, 1009, 1015, 1029, 1012, 1027, 1014,    0, 1031,
     1030, 1014, 1028, 1021,    0, 1021, 1037, 1022,    0, 1037,
        0, 1028, 1036,    0, 1027, 1037, 1046, 1030,    0, 1042,
     1036, 1039, 1040, 1036, 1037, 1041, 1051, 1053, 1034, 1041,
     1040, 1076, 2209, 1079, 1070, 1068, 1060,    0,    0, 1070,

     1071, 1070, 1065, 1069, 1075,    0, 1066, 1066, 1080, 1069,
     1079,    0, 1076, 1086, 1066, 1090, 1080, 1092, 1076, 1083,
        0, 1082, 1078, 1097, 1096, 1087, 1085, 1083, 1088, 1081,
     1103, 1106, 1105, 1108,    0, 1094, 1097, 1111, 1110, 1104,
     1098, 1113, 1103, 1101, 1109, 1103, 1111, 1119, 1107, 1108,
     1112, 1106, 1112, 1108,    0, 1119, 1128, 1128, 1118, 1126,
     1122, 1132, 1121, 1120, 1131, 1119, 1127, 1125,    0, 1139,
     1140,    0,    0,    0, 1145,    0,    0, 1129, 1130, 1127,
     1132, 1133, 1142, 1139, 1135,    0, 1151, 1135, 1143,    0,
     1140, 1143, 1147, 1148, 1149, 1163, 1146, 1155, 1152,    0,

     1148, 1164,    0, 1151, 1158, 1165, 1156, 1155,    0, 1166,
     1161, 1162, 1173, 1162,    0,    0, 1175, 1164, 1164, 1200,
     1246, 1178, 1190, 1181, 1184, 1192, 1183, 1200, 1183, 1197,
     1203, 1200, 1205, 1202,    0, 1197, 1208, 1198, 1202, 1211,
        0,    0, 1200, 1195, 1214, 1198,    0, 1200,    0, 1209,
     1200,    0, 1209,    0, 1203, 1211,    0, 1222, 1209, 1207,
        0, 1221, 1228, 1232, 1241, 1219, 1245, 1229,    0,    0,
     1233,    0, 1240,    0,    0, 1231, 1237, 1233, 1230, 1239,
     1250,    0, 1253, 1248, 1240, 1243, 1258, 1259, 1249,    0,
     1245,    0, 1245, 1260, 1264, 1265, 1249,    0,    0, 1255,

     1255, 1256, 1260, 1264, 1270, 1256, 1270, 1280, 1267, 1264,
     1271,    0, 1279,    0, 1270,    0, 1279, 1275, 1276,    0,
     1270,    0, 1276, 1280, 1307, 2209, 1310, 1317, 2209, 1356,
     1289, 1287, 1299, 1287, 1292, 1310, 1290, 1298, 1295, 1301,
     1315, 1305, 1304,    0, 1301,    0, 1305, 1303, 1317,    0,
     1316, 1315, 1321, 1313,    0, 1309,    0,    0, 1310, 1315,
        0, 1315,    0, 1315, 1320, 1315, 1320,    0, 1323, 1334,
     1344, 1347, 1347, 1334, 1344, 1343, 1353, 1345, 1341, 1360,
     1347, 1348, 1359,    0, 1350,    0, 1351, 1347, 1349,    0,
     1355, 1358, 1353, 1363, 1355, 1368, 1372, 1373,    0, 1372,

     1362,    0, 1359, 1366, 1369, 1373,    0,    0, 1403, 1377,
     1392, 1380, 1386, 1395, 1391, 1398, 1389,    0, 1399, 1403,
     1386, 1405, 1392, 1397, 1394,    0, 1408, 1396, 1393, 1415,
        0, 1399, 1400, 1404, 1402, 1399,    0, 1418,    0, 1416,
     1415, 1410, 1422, 1419, 1412, 1413, 1429, 1430,    0, 1418,
     1413, 1414,    0, 1424, 1416, 1421, 1426,    0, 1430, 1440,
     1426,    0, 1436, 1428, 1435,    0,    0, 1434,    0,    0,
        0, 1464, 2209, 1467, 1456, 1449,    0, 1448, 1451, 1456,
     1458, 1450, 1464, 1465, 1470, 1463,    0, 1513,    0,    0,
        0, 1456, 1467,    0,    0, 1456,    0, 1475, 1459, 1460,

     1467, 1458, 1474, 1477, 1482, 1470, 1478, 1471, 1482,    0,
        0,    0,    0, 1469, 1475,    0, 1473, 1472, 1469,    0,
     1504, 1503, 1491,    0,    0,    0, 1504, 1487,    0,    0,
     1496, 1490, 1501, 1531, 2209, 1559, 1516, 1513,    0, 1495,
        0,    0, 1515,    0, 1516, 1510, 1506, 1509, 1520, 1504,
     1513, 1513,    0, 1514,    0, 1525, 1513,    0, 1517, 1524,
     1529,    0, 1517, 1529, 1521,    0, 1520, 1533,    0, 1537,
     1549, 1536,    0,    0, 1537, 1545, 1548, 1557, 1544, 1551,
     1557, 1561,    0,    0,    0,    0,    0,    0, 1552, 1558,
        0,    0, 1556,    0,    0, 1557, 1562,    0, 1552, 1566,

        0,    0, 1554,    0, 1550,    0,    0, 2209, 1605, 1609,
     1611, 1615, 1619, 1589, 1623, 1627, 1631, 1635, 1639, 1643,
     1647, 1651, 1655, 1659, 1663, 1667, 1671, 1675, 1679, 1683,
     1687, 1691, 1695, 1699, 1703, 1707, 1711, 1715
    ) ;

yy_def : constant array(0..1838) of Short :=
    (   0,
     1808,    1, 1808, 1808, 1808, 1808, 1809, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1810, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1808, 1808, 1808, 1808, 1809,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1812, 1813, 1808, 1814, 1808, 1810, 1808, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1808, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1808, 1808, 1808, 1815, 1808, 1808, 1808, 1808, 1812,
     1816, 1813, 1808, 1808, 1814, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1808,
     1808, 1808, 1808, 1815, 1808, 1815, 1815, 1808, 1808, 1808,
     1812, 1808, 1808, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1808, 1817, 1818, 1808, 1815, 1815, 1808, 1808,
     1808, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1808, 1817, 1808, 1818,
     1808, 1819, 1820, 1815, 1808, 1808, 1821, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1822, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1823, 1819, 1808, 1820, 1808,
     1824, 1808, 1825, 1821, 1808, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1826, 1808, 1822,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1823, 1808,
     1824, 1808, 1808, 1825, 1808, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1827, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1828,
     1811, 1829, 1808, 1827, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1830, 1808, 1828, 1294, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1294, 1831,
     1832, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1294, 1833, 1808, 1831, 1834, 1808, 1832,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1835, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1836, 1808, 1835, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1837, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1838, 1808, 1837, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,

     1811, 1811, 1811, 1811, 1811, 1811, 1811,    0, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808
    ) ;

yy_nxt : constant array(0..2255) of Short :=
    (   0,
        4,    5,    6,    7,    8,    4,    4,    9,   10,   11,
       12,   13,   14,   14,   14,   15,    4,   16,   17,   18,
       19,   20,   21,   22,   23,   24,   25,   16,   16,   26,
       27,   28,   16,   29,   30,   31,   32,   33,   34,   35,
       16,   16,   16,   36,   37,   38,   42,   43,   95,   96,
       47,   44,   48,   49,   49,   49,   52,   92,   45,   97,
       93,   53,   46,   50,   51,   51,   51,   51,  537,   47,
      130,   56,   56,   56,   56,   50,   47,   60,   48,   54,
       54,   48,   50,   65,  538,  131,   61,   66,   62,   50,
       67,   89,   63,   77,   64,  111,   68,   78,   69,   90,

      103,   79,  104,  107,   80,   91,  135,   55,   70,   71,
       81,   82,  105,  112,  136,   72,  108,  125,  109,   73,
      178,  110,   74,  814,   98,   99,   75,   76,   83,  126,
       83,  179,  100,   84,   84,   84,   84,  119,  120,  133,
      121,  134,  101,   85,  102,  161,  162,  181,  113,  114,
      122,  115,  123,   86,  116,  127,  124,   87,  815,  128,
      816,  182,   88,  129,  117,  118,   51,   51,   51,   51,
       47,  168,   48,   48,   48,   48,   47,   50,   56,   56,
       56,   56,  158,   50,  551,   83,  159,   83,  169,   50,
      139,  139,  139,  139,   51,   51,   51,   51,   47,  552,

      144,  144,  144,   48,   47,   50,   56,   56,   56,   56,
      166,   50,  139,  139,  139,  139,  195,   50,   84,   84,
       84,   84,  167,  196,  197,  201,  203,  204,  206,  213,
      220,  231,  235,  207,  198,  202,  139,  139,  139,  139,
      232,  141,  393,  235,  323,  214,  242,  324,  394,  221,
      427,  236,  215,   47,  507,  144,  144,  144,   48,  235,
      428,  237,  359,  377,  385,  508,   50,  251,  360,  361,
      817,  386,  252,  253,  254,  255,  433,  256,  378,  434,
      818,  402,  235,  257,  258,  387,  259,  260,  261,  403,
      262,  408,  263,  280,  409,  435,  497,  444,  410,  498,

      281,  445,  564,  282,  543,  411,  472,  544,  412,  283,
      284,  285,  450,  479,  473,  286,  289,  474,  290,  475,
      480,  451,  476,  477,  452,  453,  548,  454,  291,  292,
      293,  294,  295,  819,  549,  296,  505,  297,  334,  335,
      506,  336,  527,  337,  553,  338,  235,  555,  339,  528,
      340,  554,  662,  341,  342,  529,  556,  820,  343,  362,
      363,  364,  365,  530,  366,  367,  592,  563,  663,  599,
      368,  596,  600,  369,  593,  370,  371,  597,  372,  462,
      463,  513,  514,  464,  653,  821,  235,  822,  465,  466,
      467,  826,  654,  468,  515,  469,  522,  523,  540,  516,

      524,  517,  525,  659,  827,  541,  526,  741,  828,  542,
      660,  808,  808,  809,  808,  808,  808,  808,  808,  808,
      823,  808,  829,  830,  831,  832,  808,  808,  833,  824,
      825,  834,  835,  836,  837,  838,  839,  840,  841,  842,
      843,  844,  845,  846,  847,  848,  849,  850,  851,  852,
      853,  854,  855,  856,  808,  808,  808,  857,  858,  859,
      860,  861,  862,  863,  864,  865,  866,  867,  868,  869,
      870,  871,  872,  873,  874,  875,  876,  877,  878,  879,
      880,  881,  882,  883,  884,  885,  886,  887,  888,  889,
      890,  891,  892,  893,  894,  895,  896,  897,  898,  899,

      900,  901,  902,  908,  903,  909,  910,  911,  912,  913,
      914,  915,  916,  917,  918,  904,  920,  738,  905,  906,
      907,  740,  922,  923,  925,  745,  926,  927,  928,  929,
      930,  931,  932,  935,  936,  937,  938,  939,  940,  933,
      941,  942,  944,  945,  946,  947,  948,  949,  950,  951,
      952,  943,  953,  934,  954,  955,  956,  957,  958,  959,
      960,  961,  962,  963,  964,  965,  967,  968,  969,  970,
      971,  972,  973,  974,  975,  976,  978,  966,  979,  980,
      981,  982,  983,  984,  985,  986,  987,  809,  977,  808,
      808,  809,  808,  808,  808,  808,  808,  808,  988,  808,

      989,  990,  991,  992,  808,  808,  993,  994,  995,  996,
      997,  998,  999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
     1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
     1017, 1018,  808,  808,  808, 1019, 1020, 1021, 1022, 1023,
     1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
     1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
     1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055,
     1056, 1045, 1057, 1058, 1059, 1060, 1061, 1053, 1062, 1063,
     1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
     1074, 1075, 1077, 1079, 1080, 1078, 1081, 1082, 1084, 1083,

     1085, 1086, 1087, 1088, 1076, 1089, 1090, 1091, 1092, 1093,
     1094,  920,  922,  925, 1095, 1096, 1097, 1098, 1099, 1100,
     1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
     1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
     1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
     1131, 1132, 1133, 1134, 1135, 1137, 1138, 1136, 1139, 1140,
     1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
     1151, 1152, 1152, 1153, 1152, 1152, 1152, 1152, 1152, 1152,
     1155, 1152, 1156, 1157, 1158, 1159, 1152, 1152, 1160, 1161,
     1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,

     1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
     1182, 1183, 1184, 1185, 1152, 1152, 1152, 1186, 1188, 1189,
     1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1187, 1198,
     1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
     1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
     1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
     1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
     1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
     1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
     1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,

     1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
     1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
     1289, 1290, 1291, 1292, 1292, 1293, 1292, 1292, 1292, 1292,
     1292, 1292, 1296, 1292, 1153, 1297, 1298, 1299, 1292, 1292,
     1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310,
     1311, 1312, 1313, 1295, 1314, 1315, 1304, 1316, 1317, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1292, 1292, 1292, 1152,
     1152, 1153, 1152, 1152, 1152, 1152, 1152, 1152, 1325, 1152,
     1326, 1327, 1328, 1329, 1152, 1152, 1330, 1331, 1332, 1333,
     1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,

     1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
     1354, 1355, 1152, 1152, 1152, 1356, 1357, 1358, 1359, 1360,
     1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
     1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
     1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
     1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
     1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
     1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1293, 1292,
     1292, 1293, 1292, 1292, 1292, 1292, 1292, 1292, 1419, 1292,
     1420, 1421, 1422, 1423, 1292, 1292, 1424, 1425, 1426, 1427,

     1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
     1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
     1448, 1449, 1292, 1292, 1292, 1450, 1451, 1452, 1453, 1454,
     1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
     1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
     1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485,
     1486, 1487, 1488, 1489, 1490, 1491, 1480, 1492, 1493, 1494,
     1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
     1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
     1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,

     1525, 1525, 1526, 1525, 1525, 1525, 1525, 1525, 1525, 1531,
     1525, 1532, 1533, 1534, 1535, 1525, 1525, 1536, 1537, 1538,
     1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
     1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
     1559, 1560, 1561, 1525, 1525, 1525, 1528, 1528, 1529, 1528,
     1528, 1528, 1528, 1528, 1528, 1562, 1528, 1563, 1564, 1565,
     1566, 1528, 1528, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
     1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
     1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1528,
     1528, 1528, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,

     1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1526,
     1525, 1525, 1526, 1525, 1525, 1525, 1525, 1525, 1525, 1529,
     1525, 1610, 1611, 1612, 1613, 1525, 1525, 1614, 1615, 1616,
     1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
     1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
     1637, 1638, 1639, 1525, 1525, 1525, 1528, 1528, 1529, 1528,
     1528, 1528, 1528, 1528, 1528, 1640, 1528, 1641, 1642, 1643,
     1644, 1528, 1528, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
     1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
     1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1528,

     1528, 1528, 1671, 1672, 1672, 1673, 1672, 1672, 1672, 1672,
     1672, 1672, 1675, 1672, 1676, 1677, 1678, 1679, 1672, 1672,
     1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
     1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
     1700, 1701, 1702, 1703, 1704, 1705, 1672, 1672, 1672, 1706,
     1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
     1717, 1718, 1719, 1720, 1721, 1722, 1673, 1672, 1672, 1673,
     1672, 1672, 1672, 1672, 1672, 1672, 1723, 1672, 1724, 1725,
     1726, 1727, 1672, 1672, 1728, 1729, 1730, 1731, 1732, 1733,
     1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,

     1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
     1672, 1672, 1672, 1734, 1734, 1735, 1734, 1734, 1734, 1734,
     1734, 1734, 1757, 1734, 1758, 1759, 1760, 1761, 1734, 1734,
     1762, 1763, 1764, 1735, 1765, 1766, 1767, 1768, 1769, 1770,
     1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
     1781, 1782, 1783, 1784, 1785, 1786, 1734, 1734, 1734, 1734,
     1734, 1735, 1734, 1734, 1734, 1734, 1734, 1734, 1787, 1734,
     1788, 1789, 1790, 1791, 1734, 1734, 1792, 1793, 1794, 1795,
     1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
     1806, 1807,  145,  813,  812,  811,  807,  806,  805,  804,

      803,  802, 1734, 1734, 1734,   40,  801,   40,   40,   57,
       57,   57,   57,   59,   59,  140,  140,  140,  140,  142,
      142,  142,  142,  234,  234,  234,  234,  241,  241,  241,
      241,  558,  558,  558,  558,  560,  560,  560,  560,  737,
      737,  737,  737,  739,  739,  739,  739,  744,  744,  744,
      744,  810,  810,  810,  810,  919,  919,  919,  919,  921,
      921,  921,  921,  924,  924,  924,  924,  808,  808,  808,
      808, 1154, 1154, 1154, 1154, 1294, 1294, 1294, 1294, 1152,
     1152, 1152, 1152, 1292, 1292, 1292, 1292, 1527, 1527, 1527,
     1527, 1530, 1530, 1530, 1530, 1525, 1525, 1525, 1525, 1528,

     1528, 1528, 1528, 1674, 1674, 1674, 1674, 1672, 1672, 1672,
     1672, 1736, 1736, 1736, 1736, 1734, 1734, 1734, 1734,  800,
      799,  798,  797,  796,  795,  794,  793,  792,  791,  790,
      789,  788,  787,  786,  785,  784,  783,  782,  781,  780,
      779,  778,  777,  776,  775,  774,  773,  772,  771,  770,
      769,  768,  767,  766,  765,  764,  763,  762,  761,  760,
      759,  758,  757,  756,  755,  754,  753,  752,  751,  750,
      749,  748,  747,  746,  745,  743,  742,  740,  738,  561,
      559,  736,  735,  734,  733,  732,  731,  730,  729,  728,
      727,  726,  725,  724,  723,  722,  721,  720,  719,  718,

      717,  716,  715,  714,  713,  712,  711,  710,  709,  708,
      707,  706,  705,  704,  703,  702,  701,  700,  699,  698,
      697,  696,  695,  694,  693,  692,  691,  690,  689,  688,
      687,  686,  685,  684,  683,  682,  681,  680,  679,  678,
      677,  676,  675,  674,  673,  672,  671,  670,  669,  668,
      667,  666,  665,  664,  661,  658,  657,  656,  655,  652,
      651,  650,  649,  648,  647,  646,  645,  644,  643,  642,
      641,  640,  639,  638,  637,  636,  635,  634,  633,  632,
      631,  630,  629,  628,  627,  626,  625,  624,  623,  622,
      621,  620,  619,  618,  617,  616,  615,  614,  613,  612,

      611,  610,  609,  608,  607,  606,  605,  604,  603,  602,
      601,  598,  595,  594,  591,  590,  589,  588,  587,  586,
      585,  584,  583,  582,  581,  580,  579,  578,  577,  576,
      575,  574,  573,  572,  571,  570,  569,  568,  567,  566,
      565,  562,  561,  559,  557,  550,  547,  546,  545,  539,
      536,  535,  534,  533,  532,  531,  521,  520,  519,  518,
      512,  511,  510,  509,  504,  503,  502,  501,  500,  499,
      496,  495,  494,  493,  492,  491,  490,  489,  488,  487,
      486,  485,  484,  483,  482,  481,  478,  471,  470,  461,
      460,  459,  458,  457,  456,  455,  449,  448,  447,  446,

      443,  442,  441,  440,  439,  438,  437,  436,  432,  431,
      430,  429,  426,  425,  424,  423,  422,  421,  420,  419,
      418,  417,  416,  415,  414,  413,  407,  406,  405,  404,
      401,  400,  399,  398,  397,  396,  395,  392,  391,  390,
      389,  388,  384,  383,  382,  141,  381,  380,  379,  235,
      376,  375,  374,  373,  358,  357,  356,  355,  354,  353,
      352,  351,  350,  349,  348,  347,  346,  345,  344,  333,
      332,  331,  330,  329,  328,  327,  326,  325,  322,  321,
      320,  319,  318,  317,  316,  315,  314,  313,  312,  311,
      310,  309,  308,  307,  306,  305,  304,  303,  302,  301,

      300,  299,  298,  288,  287,  279,  278,  277,  276,  275,
      274,  273,  272,  271,  270,  269,  268,  267,  266,  265,
      264,  250,  249,  248,  247,  246,  245,  244,  243,  143,
      141,  240,  239,  238,  233,  230,  229,  228,  227,  226,
      225,  224,  223,  222,  219,  218,  217,  216,  212,  211,
      210,  209,  208,  205,  200,  199,  194,  193,  192,  191,
      190,  189,  188,  187,  186,  185,  184,  183,  180,  177,
      176,  175,  174,  173,  172,  171,  170,  165,  164,  163,
      160,  157,  156,  155,  154,  153,  152,  151,  150,  149,
      148,  147,  146,   58,  143,  141,  138,  137,  132,   40,

       41,   39,  106,   94,   58,   41,   39, 1808,    3, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808
    ) ;

yy_chk : constant array(0..2255) of Short :=
    (   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    8,    8,   25,   25,
       10,    8,   10,   10,   10,   10,   12,   23,    8,   25,
       23,   12,    8,   10,   11,   11,   11,   11,  361,   14,
       35,   14,   14,   14,   14,   11,   13,   17,   13,   13,
       13,   13,   14,   18,  361,   35,   17,   18,   17,   13,
       18,   22,   17,   20,   17,   30,   18,   20,   18,   22,

       27,   20,   27,   29,   20,   22,   44,   13,   19,   19,
       20,   20,   27,   30,   44,   19,   29,   33,   29,   19,
       90,   29,   19,  639,   26,   26,   19,   19,   21,   33,
       21,   90,   26,   21,   21,   21,   21,   32,   32,   43,
       32,   43,   26,   21,   26,   74,   74,   92,   31,   31,
       32,   31,   32,   21,   31,   34,   32,   21,  640,   34,
      641,   92,   21,   34,   31,   31,   47,   47,   47,   47,
       48,   79,   48,   48,   48,   48,   49,   47,   49,   49,
       49,   49,   72,   48,  370,   50,   72,   50,   79,   49,
       50,   50,   50,   50,   51,   51,   51,   51,   54,  370,

       54,   54,   54,   54,   56,   51,   56,   56,   56,   56,
       78,   54,   83,   83,   83,   83,  105,   56,   84,   84,
       84,   84,   78,  105,  106,  109,  110,  110,  112,  118,
      123,  133,  135,  112,  106,  109,  139,  139,  139,  139,
      133,  141,  253,  236,  202,  118,  141,  202,  253,  123,
      281,  135,  118,  144,  342,  144,  144,  144,  144,  237,
      281,  135,  228,  236,  247,  342,  144,  154,  228,  228,
      642,  247,  154,  154,  154,  154,  286,  154,  237,  286,
      643,  261,  378,  154,  154,  247,  154,  154,  154,  261,
      154,  266,  154,  171,  266,  286,  334,  295,  266,  334,

      171,  295,  378,  171,  364,  266,  314,  364,  266,  171,
      171,  171,  300,  316,  314,  171,  175,  314,  175,  314,
      316,  300,  314,  314,  300,  300,  368,  300,  175,  175,
      175,  175,  175,  644,  368,  175,  341,  175,  212,  212,
      341,  212,  354,  212,  371,  212,  377,  372,  212,  354,
      212,  371,  479,  212,  212,  354,  372,  645,  212,  229,
      229,  229,  229,  354,  229,  229,  409,  377,  479,  414,
      229,  412,  414,  229,  409,  229,  229,  412,  229,  311,
      311,  347,  347,  311,  472,  646,  564,  647,  311,  311,
      311,  649,  472,  311,  347,  311,  353,  353,  363,  347,

      353,  347,  353,  477,  650,  363,  353,  564,  651,  363,
      477,  634,  634,  634,  634,  634,  634,  634,  634,  634,
      648,  634,  652,  653,  654,  655,  634,  634,  656,  648,
      648,  657,  658,  659,  660,  661,  662,  663,  664,  665,
      666,  667,  668,  669,  670,  671,  672,  673,  674,  675,
      676,  677,  678,  679,  634,  634,  634,  680,  681,  682,
      683,  684,  685,  686,  687,  688,  689,  690,  692,  693,
      694,  695,  696,  696,  697,  698,  699,  700,  701,  702,
      703,  704,  705,  705,  706,  707,  708,  709,  710,  711,
      712,  713,  714,  715,  716,  717,  718,  719,  720,  721,

      722,  723,  724,  725,  724,  726,  727,  728,  729,  730,
      731,  732,  733,  734,  735,  724,  736,  737,  724,  724,
      724,  739,  741,  742,  743,  744,  746,  747,  748,  749,
      750,  751,  752,  753,  754,  755,  756,  758,  759,  752,
      760,  761,  762,  763,  764,  766,  767,  768,  769,  770,
      771,  761,  772,  752,  773,  774,  776,  778,  779,  780,
      781,  782,  783,  784,  785,  786,  787,  788,  789,  790,
      791,  792,  793,  794,  795,  796,  797,  786,  798,  799,
      800,  801,  802,  803,  804,  805,  807,  808,  796,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  811,  810,

      812,  813,  814,  815,  810,  810,  816,  817,  818,  819,
      820,  821,  822,  823,  824,  825,  826,  827,  828,  830,
      831,  832,  833,  834,  835,  836,  837,  838,  839,  840,
      841,  842,  810,  810,  810,  843,  844,  845,  847,  848,
      849,  850,  851,  852,  853,  854,  855,  856,  857,  858,
      859,  861,  862,  863,  864,  865,  866,  867,  868,  869,
      870,  871,  872,  874,  875,  876,  878,  879,  880,  881,
      882,  870,  883,  884,  885,  886,  887,  879,  888,  889,
      890,  892,  893,  894,  895,  896,  897,  898,  899,  900,
      901,  902,  903,  904,  905,  903,  906,  907,  908,  907,

      909,  910,  911,  912,  902,  913,  914,  915,  916,  917,
      918,  919,  921,  924,  926,  927,  928,  929,  930,  931,
      932,  933,  934,  935,  936,  937,  938,  939,  940,  941,
      942,  943,  944,  946,  947,  948,  949,  950,  951,  952,
      954,  957,  958,  959,  961,  962,  963,  964,  965,  966,
      967,  968,  969,  970,  971,  972,  973,  971,  974,  976,
      977,  978,  979,  980,  981,  982,  983,  985,  986,  987,
      988,  989,  989,  989,  989,  989,  989,  989,  989,  989,
      990,  989,  992,  993,  996,  997,  989,  989,  998,  999,
     1000, 1001, 1002, 1003, 1005, 1006, 1007, 1010, 1011, 1012,

     1013, 1014, 1015, 1016, 1018, 1021, 1022, 1023, 1024, 1025,
     1026, 1028, 1029, 1030,  989,  989,  989, 1031, 1032, 1033,
     1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1031, 1043,
     1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
     1056, 1057, 1058, 1059, 1061, 1063, 1064, 1065, 1066, 1067,
     1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
     1079, 1080, 1081, 1082, 1082, 1083, 1085, 1086, 1087, 1089,
     1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
     1101, 1102, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
     1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,

     1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
     1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1146,
     1147, 1148, 1149, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
     1150, 1150, 1151, 1150, 1152, 1155, 1156, 1157, 1150, 1150,
     1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168,
     1169, 1170, 1171, 1150, 1172, 1173, 1161, 1174, 1176, 1177,
     1178, 1179, 1180, 1181, 1182, 1186, 1150, 1150, 1150, 1154,
     1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1187, 1154,
     1188, 1189, 1190, 1191, 1154, 1154, 1192, 1193, 1196, 1197,
     1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,

     1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218,
     1219, 1221, 1154, 1154, 1154, 1222, 1223, 1224, 1225, 1226,
     1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
     1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247,
     1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
     1258, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270,
     1272, 1273, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283,
     1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294,
     1294, 1294, 1294, 1294, 1294, 1294, 1294, 1294, 1295, 1294,
     1296, 1297, 1300, 1301, 1294, 1294, 1302, 1303, 1304, 1305,

     1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317,
     1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
     1329, 1330, 1294, 1294, 1294, 1331, 1332, 1333, 1334, 1336,
     1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
     1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357,
     1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
     1368, 1370, 1371, 1375, 1378, 1379, 1362, 1380, 1381, 1382,
     1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1394,
     1395, 1396, 1397, 1398, 1399, 1401, 1402, 1404, 1405, 1406,
     1407, 1408, 1410, 1411, 1412, 1413, 1414, 1417, 1418, 1419,

     1420, 1420, 1420, 1420, 1420, 1420, 1420, 1420, 1420, 1422,
     1420, 1423, 1424, 1425, 1426, 1420, 1420, 1427, 1428, 1429,
     1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440,
     1443, 1444, 1445, 1446, 1448, 1450, 1451, 1453, 1455, 1456,
     1458, 1459, 1460, 1420, 1420, 1420, 1421, 1421, 1421, 1421,
     1421, 1421, 1421, 1421, 1421, 1462, 1421, 1463, 1464, 1465,
     1466, 1421, 1421, 1467, 1468, 1471, 1473, 1476, 1477, 1478,
     1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
     1491, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1421,
     1421, 1421, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,

     1511, 1513, 1515, 1517, 1518, 1519, 1521, 1523, 1524, 1525,
     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1528,
     1527, 1531, 1532, 1533, 1534, 1527, 1527, 1535, 1536, 1537,
     1538, 1539, 1540, 1541, 1542, 1543, 1545, 1547, 1548, 1549,
     1551, 1552, 1553, 1554, 1556, 1559, 1560, 1562, 1564, 1565,
     1566, 1567, 1569, 1527, 1527, 1527, 1530, 1530, 1530, 1530,
     1530, 1530, 1530, 1530, 1530, 1570, 1530, 1571, 1572, 1573,
     1574, 1530, 1530, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
     1582, 1583, 1585, 1587, 1588, 1589, 1591, 1592, 1593, 1594,
     1595, 1596, 1597, 1598, 1600, 1601, 1603, 1604, 1605, 1530,

     1530, 1530, 1606, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
     1609, 1609, 1610, 1609, 1611, 1612, 1613, 1614, 1609, 1609,
     1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
     1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638,
     1640, 1641, 1642, 1643, 1644, 1645, 1609, 1609, 1609, 1646,
     1647, 1648, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659,
     1660, 1661, 1663, 1664, 1665, 1668, 1672, 1674, 1674, 1674,
     1674, 1674, 1674, 1674, 1674, 1674, 1675, 1674, 1676, 1678,
     1679, 1680, 1674, 1674, 1681, 1682, 1683, 1684, 1685, 1686,
     1692, 1693, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704,

     1705, 1706, 1707, 1708, 1709, 1714, 1715, 1717, 1718, 1719,
     1674, 1674, 1674, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
     1688, 1688, 1721, 1688, 1722, 1723, 1727, 1728, 1688, 1688,
     1731, 1732, 1733, 1734, 1737, 1738, 1740, 1743, 1745, 1746,
     1747, 1748, 1749, 1750, 1751, 1752, 1754, 1756, 1757, 1759,
     1760, 1761, 1763, 1764, 1765, 1767, 1688, 1688, 1688, 1736,
     1736, 1736, 1736, 1736, 1736, 1736, 1736, 1736, 1768, 1736,
     1770, 1771, 1772, 1775, 1736, 1736, 1776, 1777, 1778, 1779,
     1780, 1781, 1782, 1789, 1790, 1793, 1796, 1797, 1799, 1800,
     1803, 1805, 1814,  637,  636,  635,  633,  632,  631,  630,

      629,  628, 1736, 1736, 1736, 1809,  627, 1809, 1809, 1810,
     1810, 1810, 1810, 1811, 1811, 1812, 1812, 1812, 1812, 1813,
     1813, 1813, 1813, 1815, 1815, 1815, 1815, 1816, 1816, 1816,
     1816, 1817, 1817, 1817, 1817, 1818, 1818, 1818, 1818, 1819,
     1819, 1819, 1819, 1820, 1820, 1820, 1820, 1821, 1821, 1821,
     1821, 1822, 1822, 1822, 1822, 1823, 1823, 1823, 1823, 1824,
     1824, 1824, 1824, 1825, 1825, 1825, 1825, 1826, 1826, 1826,
     1826, 1827, 1827, 1827, 1827, 1828, 1828, 1828, 1828, 1829,
     1829, 1829, 1829, 1830, 1830, 1830, 1830, 1831, 1831, 1831,
     1831, 1832, 1832, 1832, 1832, 1833, 1833, 1833, 1833, 1834,

     1834, 1834, 1834, 1835, 1835, 1835, 1835, 1836, 1836, 1836,
     1836, 1837, 1837, 1837, 1837, 1838, 1838, 1838, 1838,  626,
      625,  624,  623,  622,  621,  620,  619,  618,  617,  616,
      615,  614,  613,  612,  611,  610,  609,  608,  607,  606,
      605,  604,  602,  601,  600,  599,  598,  597,  596,  595,
      594,  593,  592,  591,  590,  588,  586,  585,  584,  583,
      582,  581,  580,  579,  578,  577,  576,  575,  574,  572,
      571,  570,  569,  568,  567,  566,  565,  563,  562,  560,
      558,  557,  556,  555,  554,  553,  552,  551,  550,  549,
      548,  547,  546,  545,  544,  543,  542,  541,  540,  539,

      538,  537,  536,  535,  534,  533,  531,  530,  529,  528,
      527,  526,  525,  524,  523,  522,  521,  520,  519,  518,
      517,  516,  515,  514,  513,  511,  510,  509,  508,  507,
      506,  505,  504,  503,  502,  501,  500,  499,  498,  497,
      495,  494,  493,  491,  490,  489,  488,  487,  486,  484,
      483,  482,  481,  480,  478,  476,  475,  474,  473,  470,
      469,  468,  467,  466,  465,  464,  463,  462,  461,  460,
      459,  458,  457,  456,  454,  453,  452,  451,  450,  448,
      447,  446,  445,  444,  443,  442,  441,  440,  439,  438,
      437,  436,  435,  434,  433,  432,  431,  430,  429,  428,

      427,  426,  425,  424,  423,  422,  421,  420,  419,  417,
      416,  413,  411,  410,  408,  407,  406,  405,  404,  403,
      402,  401,  400,  399,  398,  397,  396,  395,  394,  393,
      392,  391,  389,  387,  386,  385,  383,  382,  381,  380,
      379,  376,  375,  374,  373,  369,  367,  366,  365,  362,
      360,  359,  358,  357,  356,  355,  351,  350,  349,  348,
      346,  345,  344,  343,  340,  339,  338,  337,  336,  335,
      333,  332,  331,  330,  329,  328,  327,  326,  324,  323,
      322,  321,  320,  319,  318,  317,  315,  313,  312,  310,
      309,  308,  305,  304,  303,  301,  299,  298,  297,  296,

      294,  293,  292,  291,  290,  289,  288,  287,  285,  284,
      283,  282,  280,  279,  278,  277,  276,  275,  274,  273,
      272,  271,  270,  269,  268,  267,  265,  264,  263,  262,
      260,  259,  258,  257,  256,  255,  254,  252,  251,  250,
      249,  248,  246,  245,  244,  241,  240,  239,  238,  234,
      233,  232,  231,  230,  227,  226,  225,  224,  223,  222,
      221,  220,  219,  218,  217,  216,  215,  214,  213,  211,
      210,  209,  208,  207,  206,  205,  204,  203,  201,  200,
      199,  197,  196,  195,  194,  193,  192,  191,  190,  189,
      188,  187,  186,  185,  184,  183,  182,  181,  180,  179,

      178,  177,  176,  173,  172,  170,  169,  168,  167,  166,
      165,  164,  163,  162,  161,  160,  159,  158,  157,  156,
      155,  153,  152,  151,  150,  149,  148,  146,  145,  142,
      140,  138,  137,  136,  134,  132,  131,  130,  129,  128,
      127,  126,  125,  124,  122,  121,  120,  119,  117,  116,
      115,  114,  113,  111,  108,  107,  104,  103,  102,  101,
      100,   99,   98,   97,   96,   95,   94,   93,   91,   89,
       88,   87,   86,   85,   82,   81,   80,   77,   76,   75,
       73,   71,   70,   69,   68,   67,   66,   65,   64,   63,
       62,   61,   60,   57,   53,   52,   46,   45,   42,   41,

       40,   39,   28,   24,   15,    7,    5,    3, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808, 1808,
     1808, 1808, 1808, 1808, 1808
    ) ;


-- copy whatever the last rule matched to the standard output

procedure ECHO is
begin
   if Text_IO.is_open(user_output_file) then
     Text_IO.put( user_output_file, yytext );
   else
     Text_IO.put( yytext );
   end if;
end ECHO;

-- enter a start condition.
-- Using procedure requires a () after the ENTER, but makes everything
-- much neater.

procedure ENTER( state : integer ) is
begin
     yy_start := 1 + 2 * state;
end ENTER;

-- action number for EOF rule of a given start state
function YY_STATE_EOF(state : integer) return integer is
begin
     return YY_END_OF_BUFFER + state + 1;
end YY_STATE_EOF;

-- return all but the first 'n' matched characters back to the input stream
procedure yyless(n : integer) is
begin
        yy_ch_buf(yy_cp) := yy_hold_char; -- undo effects of setting up yytext
        yy_cp := yy_bp + n;
        yy_c_buf_p := yy_cp;
        YY_DO_BEFORE_ACTION; -- set up yytext again
end yyless;

-- redefine this if you have something you want each time.
procedure YY_USER_ACTION is
begin
        null;
end;

-- yy_get_previous_state - get the state just before the EOB char was reached

function yy_get_previous_state return yy_state_type is
    yy_current_state : yy_state_type;
    yy_c : short;
begin
    yy_current_state := yy_start;

    for yy_cp in yytext_ptr..yy_c_buf_p - 1 loop
	yy_c := yy_ec(yy_ch_buf(yy_cp));
	if yy_accept(yy_current_state) /= 0 then
	    yy_last_accepting_state := yy_current_state;
	    yy_last_accepting_cpos := yy_cp;
	end if;
	while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
	    yy_current_state := yy_def(yy_current_state);
	    if ( yy_current_state >= 1809 ) then
		yy_c := yy_meta(yy_c);
	    end if;
	end loop;
	yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
    end loop;

    return yy_current_state;
end yy_get_previous_state;

procedure yyrestart( input_file : file_type ) is
begin
   open_input(Text_IO.name(input_file));
end yyrestart;

begin -- of YYLex
<<new_file>>
        -- this is where we enter upon encountering an end-of-file and
        -- yywrap() indicating that we should continue processing

    if yy_init then
        if yy_start = 0 then
            yy_start := 1;      -- first start state
        end if;

        -- we put in the '\n' and start reading from [1] so that an
        -- initial match-at-newline will be true.

        yy_ch_buf(0) := ASCII.LF;
        yy_n_chars := 1;

        -- we always need two end-of-buffer characters. The first causes
        -- a transition to the end-of-buffer state. The second causes
        -- a jam in that state.

        yy_ch_buf(yy_n_chars) := YY_END_OF_BUFFER_CHAR;
        yy_ch_buf(yy_n_chars + 1) := YY_END_OF_BUFFER_CHAR;

        yy_eof_has_been_seen := false;

        yytext_ptr := 1;
        yy_c_buf_p := yytext_ptr;
        yy_hold_char := yy_ch_buf(yy_c_buf_p);
        yy_init := false;
-- UMASS CODES :
--   Initialization
        tok_begin_line := 1;
        tok_end_line := 1;
        tok_begin_col := 0;
        tok_end_col := 0;
        token_at_end_of_line := false;
        line_number_of_saved_tok_line1 := 0;
        line_number_of_saved_tok_line2 := 0;
-- END OF UMASS CODES.
    end if; -- yy_init

    loop                -- loops until end-of-file is reached

-- UMASS CODES :
--    if last matched token is end_of_line, we must
--    update the token_end_line and reset tok_end_col.
    if Token_At_End_Of_Line then
      Tok_End_Line := Tok_End_Line + 1;
      Tok_End_Col := 0;
      Token_At_End_Of_Line := False;
    end if;
-- END OF UMASS CODES.

        yy_cp := yy_c_buf_p;

        -- support of yytext
        yy_ch_buf(yy_cp) := yy_hold_char;

        -- yy_bp points to the position in yy_ch_buf of the start of the
        -- current run.
	yy_bp := yy_cp;
	yy_current_state := yy_start;
	loop
		yy_c := yy_ec(yy_ch_buf(yy_cp));
		if yy_accept(yy_current_state) /= 0 then
		    yy_last_accepting_state := yy_current_state;
		    yy_last_accepting_cpos := yy_cp;
		end if;
		while yy_chk(yy_base(yy_current_state) + yy_c) /= yy_current_state loop
		    yy_current_state := yy_def(yy_current_state);
		    if ( yy_current_state >= 1809 ) then
			yy_c := yy_meta(yy_c);
		    end if;
		end loop;
		yy_current_state := yy_nxt(yy_base(yy_current_state) + yy_c);
	    yy_cp := yy_cp + 1;
if ( yy_current_state = 1808 ) then
    exit;
end if;
	end loop;
	yy_cp := yy_last_accepting_cpos;
	yy_current_state := yy_last_accepting_state;

<<next_action>>
	    yy_act := yy_accept(yy_current_state);
            YY_DO_BEFORE_ACTION;
            YY_USER_ACTION;

        if aflex_debug then  -- output acceptance info. for (-d) debug mode
            Text_IO.put( Standard_Error, "--accepting rule #" );
            Text_IO.put( Standard_Error, INTEGER'IMAGE(yy_act) );
            Text_IO.put_line( Standard_Error, "(""" & yytext & """)");
        end if;

-- UMASS CODES :
--   Update tok_begin_line, tok_end_line, tok_begin_col and tok_end_col
--   after matching the token.
        if yy_act /= YY_END_OF_BUFFER and then yy_act /= 0 then
-- Token are matched only when yy_act is not yy_end_of_buffer or 0.
          Tok_Begin_Line := Tok_End_Line;
          Tok_Begin_Col := Tok_End_Col + 1;
          Tok_End_Col := Tok_Begin_Col + yy_cp - yy_bp - 1;
          if yy_ch_buf ( yy_bp ) = ASCII.LF then
            Token_At_End_Of_Line := True;
          end if;
        end if;
-- END OF UMASS CODES.

<<do_action>>   -- this label is used only to access EOF actions
            case yy_act is
		when 0 => -- must backtrack
		-- undo the effects of YY_DO_BEFORE_ACTION
		yy_ch_buf(yy_cp) := yy_hold_char;
		yy_cp := yy_last_accepting_cpos;
		yy_current_state := yy_last_accepting_state;
		goto next_action;



-- /* ... */ -style comments
when 1 => 
--# line 55 "rc.l"

         RC_Help.RC_Comment(YYText(3..YYLength-2));
         

-- // -style comment -> skip rest of line.
when 2 => 
--# line 60 "rc.l"

         RC_Help.RC_Comment(YYText);
                      linenum:= linenum + 1;
         

when 3 => 
--# line 65 "rc.l"
 return BAR_t; 

when 4 => 
--# line 66 "rc.l"
 return COMMA_t; 

when 5 => 
--# line 67 "rc.l"
 return LBRACE_t; 

when 6 => 
--# line 68 "rc.l"
 return RBRACE_t; 

when 7 => 
--# line 69 "rc.l"
 return C_INCLUDE_t; 

when 8 => 
--# line 70 "rc.l"
 return NOT_t; 

-----------
-- Noise --
-----------
when 9 => 
--# line 76 "rc.l"
 null;  -- skip rest of line - was  return C_CRAP_t; 

when 10 => 
--# line 77 "rc.l"
 null; 

when 11 => 
--# line 78 "rc.l"
 null; 

when 12 => 
--# line 79 "rc.l"
 null; 

when 13 => 
--# line 80 "rc.l"
 null; 

when 14 => 
--# line 81 "rc.l"
 null; 

when 15 => 
--# line 82 "rc.l"
 null; 

when 16 => 
--# line 83 "rc.l"
 null; 

when 17 => 
--# line 84 "rc.l"
 null; 

---------------
-- Resources --
---------------
when 18 => 
--# line 90 "rc.l"
 return DIALOG_t; 

when 19 => 
--# line 91 "rc.l"
 return DIALOGEX_t; 

when 20 => 
--# line 92 "rc.l"
 return MENU_t; 

when 21 => 
--# line 93 "rc.l"
 return DLGINCLUDE_t; 

when 22 => 
--# line 94 "rc.l"
 return TEXTINCLUDE_t; 

when 23 => 
--# line 95 "rc.l"
 return GUIDELINES_t; 

when 24 => 
--# line 96 "rc.l"
 return DESIGNINFO_t; 

when 25 => 
--# line 97 "rc.l"
 return RT_MANIFEST_t;     

when 26 => 
--# line 98 "rc.l"
 return MOVEABLE_t; 

when 27 => 
--# line 99 "rc.l"
 return PURE_t; 

when 28 => 
--# line 100 "rc.l"
 return FIXED_t; 

when 29 => 
--# line 101 "rc.l"
 return PRELOAD_t; 

when 30 => 
--# line 102 "rc.l"
 return DISCARDABLE_t; 

when 31 => 
--# line 103 "rc.l"
 return LANGUAGE_t; 

when 32 => 
--# line 104 "rc.l"
 return STYLE_t; 

when 33 => 
--# line 105 "rc.l"
 return EXSTYLE_t; 

when 34 => 
--# line 106 "rc.l"
 return CAPTION_t; 

when 35 => 
--# line 107 "rc.l"
 return CLASS_t; 

when 36 => 
--# line 108 "rc.l"
 return FONT_t; 

when 37 => 
--# line 109 "rc.l"
 return LTEXT_t; 

when 38 => 
--# line 110 "rc.l"
 return CTEXT_t; 

when 39 => 
--# line 111 "rc.l"
 return RTEXT_t; 

when 40 => 
--# line 113 "rc.l"
 return BEGIN_t; 

when 41 => 
--# line 114 "rc.l"
 return END_t; 

when 42 => 
--# line 116 "rc.l"
 return CONTROL_t; 

when 43 => 
--# line 117 "rc.l"
 return EDITTEXT_t; 

when 44 => 
--# line 118 "rc.l"
 return COMBOBOX_t; 

when 45 => 
--# line 119 "rc.l"
 return GROUPBOX_t; 

when 46 => 
--# line 120 "rc.l"
 return LISTBOX_t; 

when 47 => 
--# line 122 "rc.l"
 return RADIOBUTTON_t; 

when 48 => 
--# line 123 "rc.l"
 return AUTORADIOBUTTON_t; 

when 49 => 
--# line 125 "rc.l"
 return CHECKBOX_t; 

when 50 => 
--# line 126 "rc.l"
 return AUTOCHECKBOX_t; 

when 51 => 
--# line 127 "rc.l"
 return AUTO3STATE_t; 

when 52 => 
--# line 128 "rc.l"
 return STATE3_t; 

when 53 => 
--# line 130 "rc.l"
 return PUSHBUTTON_t; 

when 54 => 
--# line 131 "rc.l"
 return DEFPUSHBUTTON_t; 

when 55 => 
--# line 133 "rc.l"
 return SCROLLBAR_t; 

-----------
-- Menus --
-----------
when 56 => 
--# line 138 "rc.l"
 return CHECKED_t; 

when 57 => 
--# line 139 "rc.l"
 return GRAYED_t; 

when 58 => 
--# line 140 "rc.l"
 return HELP_t; 

when 59 => 
--# line 141 "rc.l"
 return INACTIVE_t; 

when 60 => 
--# line 142 "rc.l"
 return MENUBARBREAK_t; 

when 61 => 
--# line 143 "rc.l"
 return MENUBREAK_t; 

when 62 => 
--# line 144 "rc.l"
 return MENUITEM_t; 

when 63 => 
--# line 145 "rc.l"
 return POPUP_t; 

when 64 => 
--# line 146 "rc.l"
 return SEPARATOR_t; 

------------------
-- Accelerators --
------------------
when 65 => 
--# line 151 "rc.l"
 return ACCELERATORS_t; 

when 66 => 
--# line 152 "rc.l"
 return CHARACTERISTICS_t; 

when 67 => 
--# line 153 "rc.l"
 return VERSION_t; 

when 68 => 
--# line 154 "rc.l"
 return ASCII_t; 

when 69 => 
--# line 155 "rc.l"
 return VIRTKEY_t; 

when 70 => 
--# line 156 "rc.l"
 return NOINVERT_t; 

when 71 => 
--# line 157 "rc.l"
 return ALT_t; 

when 72 => 
--# line 158 "rc.l"
 return SHIFT_t; 

--------------
-- Versions --
--------------
when 73 => 
--# line 164 "rc.l"
 return VERSIONINFO_t; 

when 74 => 
--# line 165 "rc.l"
 return FILEVERSION_t; 

when 75 => 
--# line 166 "rc.l"
 return PRODUCTVERSION_t; 

when 76 => 
--# line 167 "rc.l"
 return FILEFLAGSMASK_t; 

when 77 => 
--# line 168 "rc.l"
 return FILEFLAGS_t; 

when 78 => 
--# line 169 "rc.l"
 return FILEOS_t; 

when 79 => 
--# line 170 "rc.l"
 return FILETYPE_t; 

when 80 => 
--# line 171 "rc.l"
 return FILESUBTYPE_t; 

when 81 => 
--# line 172 "rc.l"
 return BLOCK_t; 

when 82 => 
--# line 173 "rc.l"
 return VALUE_t; 

-------------------
-- Graphic items --
-------------------
when 83 => 
--# line 178 "rc.l"
 return ICON_t; 

when 84 => 
--# line 179 "rc.l"
 return BITMAP_t; 

when 85 => 
--# line 180 "rc.l"
 return CURSOR_t; 

--------------
-- Toolbars --
--------------
when 86 => 
--# line 185 "rc.l"
 return TOOLBAR_t; 

when 87 => 
--# line 186 "rc.l"
 return BUTTON_t; 

when 88 => 
--# line 187 "rc.l"
 return SEPARATOR_t; 

when 89 => 
--# line 189 "rc.l"
 return STRINGTABLE_t; 

------------------
-- Window Class --
------------------
when 90 => 
--# line 194 "rc.l"
 return ANIMATE_CLASS_t; 

when 91 => 
--# line 195 "rc.l"
 return DATETIMEPICK_CLASS_t; 

when 92 => 
--# line 196 "rc.l"
 return MONTHCAL_CLASS_t; 

when 93 => 
--# line 197 "rc.l"
 return PROGRESS_CLASS_t; 

when 94 => 
--# line 198 "rc.l"
 return TRACKBAR_CLASS_t; 

when 95 => 
--# line 199 "rc.l"
 return UPDOWN_CLASS_t; 

when 96 => 
--# line 200 "rc.l"
 return WC_LISTVIEW_t; 

when 97 => 
--# line 201 "rc.l"
 return WC_TABCONTROL_t; 

when 98 => 
--# line 202 "rc.l"
 return WC_TREEVIEW_t; 

when 99 => 
--# line 203 "rc.l"
 return WC_STATIC_t; 

------------
-- Styles --
------------
-- Window style
when 100 => 
--# line 210 "rc.l"
 return WS_BORDER_t; 

when 101 => 
--# line 211 "rc.l"
 return WS_CAPTION_t; 

when 102 => 
--# line 212 "rc.l"
 return WS_CHILD_t; 

when 103 => 
--# line 213 "rc.l"
 return WS_CLIPSIBLINGS_t; 

when 104 => 
--# line 214 "rc.l"
 return WS_DISABLED_t; 

when 105 => 
--# line 215 "rc.l"
 return WS_DLGFRAME_t; 

when 106 => 
--# line 216 "rc.l"
 return WS_GROUP_t; 

when 107 => 
--# line 217 "rc.l"
 return WS_HSCROLL_t; 

when 108 => 
--# line 218 "rc.l"
 return WS_MINIMIZEBOX_t; 

when 109 => 
--# line 219 "rc.l"
 return WS_MAXIMIZEBOX_t; 

when 110 => 
--# line 220 "rc.l"
 return WS_POPUP_t; 

when 111 => 
--# line 221 "rc.l"
 return WS_SIZEBOX_t; 

when 112 => 
--# line 222 "rc.l"
 return WS_SYSMENU_t; 

when 113 => 
--# line 223 "rc.l"
 return WS_TABSTOP_t; 

when 114 => 
--# line 224 "rc.l"
 return WS_VISIBLE_t; 

when 115 => 
--# line 225 "rc.l"
 return WS_VSCROLL_t; 

when 116 => 
--# line 226 "rc.l"
 return WS_THICKFRAME_t; 

-- Dialog style
when 117 => 
--# line 229 "rc.l"
 return DS_3DLOOK_t; 

when 118 => 
--# line 230 "rc.l"
 return DS_CENTER_t; 

when 119 => 
--# line 231 "rc.l"
 return DS_CENTERMOUSE_t; 

when 120 => 
--# line 232 "rc.l"
 return DS_CONTROL_t; 

when 121 => 
--# line 233 "rc.l"
 return DS_FIXEDSYS_t; 

when 122 => 
--# line 234 "rc.l"
 return DS_LOCALEDIT_t; 

when 123 => 
--# line 235 "rc.l"
 return DS_MODALFRAME_t; 

when 124 => 
--# line 236 "rc.l"
 return DS_NOIDLEMSG_t; 

when 125 => 
--# line 237 "rc.l"
 return DS_SETFOREGROUND_t; 

when 126 => 
--# line 238 "rc.l"
 return DS_CONTEXTHELP_t; 

when 127 => 
--# line 239 "rc.l"
 return DS_SHELLFONT_t; 

when 128 => 
--# line 240 "rc.l"
 return DS_SETFONT_t; 

when 129 => 
--# line 241 "rc.l"
 return DS_SYSMODAL_t; 

-- Static styles
when 130 => 
--# line 244 "rc.l"
 return SS_BITMAP_t; 

when 131 => 
--# line 245 "rc.l"
 return SS_BLACKFRAME_t; 

when 132 => 
--# line 246 "rc.l"
 return SS_BLACKRECT_t; 

when 133 => 
--# line 247 "rc.l"
 return SS_CENTERIMAGE_t; 

when 134 => 
--# line 248 "rc.l"
 return SS_ENDELLIPSIS_t; 

when 135 => 
--# line 249 "rc.l"
 return SS_GRAYRECT_t; 

when 136 => 
--# line 250 "rc.l"
 return SS_ICON_t; 

when 137 => 
--# line 251 "rc.l"
 return SS_LEFT_t; 

when 138 => 
--# line 252 "rc.l"
 return SS_LEFTNOWORDWRAP_t; 

when 139 => 
--# line 253 "rc.l"
 return SS_NOPREFIX_t; 

when 140 => 
--# line 254 "rc.l"
 return SS_REALSIZEIMAGE_t; 

when 141 => 
--# line 255 "rc.l"
 return SS_RIGHT_t; 

when 142 => 
--# line 256 "rc.l"
 return SS_SIMPLE_t; 

when 143 => 
--# line 257 "rc.l"
 return SS_SUNKEN_t; 

when 144 => 
--# line 258 "rc.l"
 return SS_WHITERECT_t; 

-- Edit styles
when 145 => 
--# line 261 "rc.l"
 return ES_AUTOHSCROLL_t; 

when 146 => 
--# line 262 "rc.l"
 return ES_AUTOVSCROLL_t; 

when 147 => 
--# line 263 "rc.l"
 return ES_CENTER_t; 

when 148 => 
--# line 264 "rc.l"
 return ES_MULTILINE_t; 

when 149 => 
--# line 265 "rc.l"
 return ES_NUMBER_t; 

when 150 => 
--# line 266 "rc.l"
 return ES_OEMCONVERT_t; 

when 151 => 
--# line 267 "rc.l"
 return ES_PASSWORD_t; 

when 152 => 
--# line 268 "rc.l"
 return ES_READONLY_t; 

when 153 => 
--# line 269 "rc.l"
 return ES_RIGHT_t; 

when 154 => 
--# line 270 "rc.l"
 return ES_UPPERCASE_t; 

when 155 => 
--# line 271 "rc.l"
 return ES_WANTRETURN_t; 

-- Box/Button styles
when 156 => 
--# line 274 "rc.l"
 return BS_3STATE_t; 

when 157 => 
--# line 275 "rc.l"
 return BS_AUTO3STATE_t; 

when 158 => 
--# line 276 "rc.l"
 return BS_AUTOCHECKBOX_t; 

when 159 => 
--# line 277 "rc.l"
 return BS_AUTORADIOBUTTON_t; 

when 160 => 
--# line 278 "rc.l"
 return BS_BITMAP_t; 

when 161 => 
--# line 279 "rc.l"
 return BS_BOTTOM_t; 

when 162 => 
--# line 280 "rc.l"
 return BS_CENTER_t; 

when 163 => 
--# line 281 "rc.l"
 return BS_DEFPUSHBUTTON_t; 

when 164 => 
--# line 282 "rc.l"
 return BS_FLAT_t; 

when 165 => 
--# line 283 "rc.l"
 return BS_LEFT_t; 

when 166 => 
--# line 284 "rc.l"
 return BS_LEFTTEXT_t; 

when 167 => 
--# line 285 "rc.l"
 return BS_MULTILINE_t; 

when 168 => 
--# line 286 "rc.l"
 return BS_OWNERDRAW_t; 

when 169 => 
--# line 287 "rc.l"
 return BS_PUSHBUTTON_t; 

when 170 => 
--# line 288 "rc.l"
 return BS_PUSHLIKE_t; 

when 171 => 
--# line 289 "rc.l"
 return BS_RADIOBUTTON_t; 

when 172 => 
--# line 290 "rc.l"
 return BS_RIGHT_t; 

when 173 => 
--# line 291 "rc.l"
 return BS_TOP_t; 

when 174 => 
--# line 292 "rc.l"
 return BS_VCENTER_t; 

-- Combo-box styles
when 175 => 
--# line 295 "rc.l"
 return CBS_AUTOHSCROLL_t; 

when 176 => 
--# line 296 "rc.l"
 return CBS_SIMPLE_t; 

when 177 => 
--# line 297 "rc.l"
 return CBS_DISABLENOSCROLL_t; 

when 178 => 
--# line 298 "rc.l"
 return CBS_DROPDOWN_t; 

when 179 => 
--# line 299 "rc.l"
 return CBS_DROPDOWNLIST_t; 

when 180 => 
--# line 300 "rc.l"
 return CBS_HASSTRINGS_t; 

when 181 => 
--# line 301 "rc.l"
 return CBS_OWNERDRAWFIXED_t; 

when 182 => 
--# line 302 "rc.l"
 return CBS_SORT_t; 

-- Listbox styles
when 183 => 
--# line 305 "rc.l"
 return LBS_DISABLENOSCROLL_t; 

when 184 => 
--# line 306 "rc.l"
 return LBS_EXTENDEDSEL_t; 

when 185 => 
--# line 307 "rc.l"
 return LBS_HASSTRINGS_t; 

when 186 => 
--# line 308 "rc.l"
 return LBS_MULTIPLESEL_t; 

when 187 => 
--# line 309 "rc.l"
 return LBS_MULTICOLUMN_t; 

when 188 => 
--# line 310 "rc.l"
 return LBS_NOINTEGRALHEIGHT_t; 

when 189 => 
--# line 311 "rc.l"
 return LBS_NOSEL_t; 

when 190 => 
--# line 312 "rc.l"
 return LBS_NOTIFY_t; 

when 191 => 
--# line 313 "rc.l"
 return LBS_OWNERDRAWFIXED_t; 

when 192 => 
--# line 314 "rc.l"
 return LBS_SORT_t; 

when 193 => 
--# line 315 "rc.l"
 return LBS_USETABSTOPS_t; 

-- Progress bar styles
when 194 => 
--# line 318 "rc.l"
 return PBS_VERTICAL_t;

-- Scrollbar styles
when 195 => 
--# line 321 "rc.l"
 return SBS_VERT_t; 

-- Trackbar styles
when 196 => 
--# line 324 "rc.l"
 return TBS_AUTOTICKS_t; 

when 197 => 
--# line 325 "rc.l"
 return TBS_BOTTOM_t; 

when 198 => 
--# line 326 "rc.l"
 return TBS_BOTH_t; 

when 199 => 
--# line 327 "rc.l"
 return TBS_NOTICKS_t; 

when 200 => 
--# line 328 "rc.l"
 return TBS_VERT_t; 

when 201 => 
--# line 329 "rc.l"
 return TBS_TOP_t; 

when 202 => 
--# line 330 "rc.l"
 return TBS_TOOLTIPS_t; 

-- Up-down styles
when 203 => 
--# line 333 "rc.l"
 return UDS_HORZ_t; 

when 204 => 
--# line 334 "rc.l"
 return UDS_ARROWKEYS_t; 

when 205 => 
--# line 335 "rc.l"
 return UDS_WRAP_t; 

when 206 => 
--# line 336 "rc.l"
 return UDS_NOTHOUSANDS_t; 

-- Listview styles
when 207 => 
--# line 339 "rc.l"
 return LVS_AUTOARRANGE_t; 

when 208 => 
--# line 340 "rc.l"
 return LVS_ALIGNLEFT_t; 

when 209 => 
--# line 341 "rc.l"
 return LVS_ICON_t; 

when 210 => 
--# line 342 "rc.l"
 return LVS_LIST_t; 

when 211 => 
--# line 343 "rc.l"
 return LVS_NOSORTHEADER_t; 

when 212 => 
--# line 344 "rc.l"
 return LVS_REPORT_t; 

when 213 => 
--# line 345 "rc.l"
 return LVS_SHOWSELALWAYS_t; 

when 214 => 
--# line 346 "rc.l"
 return LVS_SORTASCENDING_t; 

-- Treeview styles
when 215 => 
--# line 349 "rc.l"
 return TVS_INFOTIP_t; 

when 216 => 
--# line 350 "rc.l"
 return TVS_HASBUTTONS_t; 

when 217 => 
--# line 351 "rc.l"
 return TVS_HASLINES_t; 

when 218 => 
--# line 352 "rc.l"
 return TVS_LINESATROOT_t; 

when 219 => 
--# line 353 "rc.l"
 return TVS_NOSCROLL_t; 

when 220 => 
--# line 354 "rc.l"
 return TVS_NOTOOLTIPS_t; 

when 221 => 
--# line 355 "rc.l"
 return TVS_SHOWSELALWAYS_t; 

-- Date time picker styles
when 222 => 
--# line 358 "rc.l"
 return DTS_RIGHTALIGN_t; 

-- Month calendar styles
when 223 => 
--# line 361 "rc.l"
 return MCS_NOTODAY_t; 

-- Tab Control Styles
when 224 => 
--# line 364 "rc.l"
 return TCS_HOTTRACK_t; 

-- Extended styles
when 225 => 
--# line 367 "rc.l"
 return WS_EX_ACCEPTFILES_t; 

when 226 => 
--# line 368 "rc.l"
 return WS_EX_APPWINDOW_t; 

when 227 => 
--# line 369 "rc.l"
 return WS_EX_CLIENTEDGE_t; 

when 228 => 
--# line 370 "rc.l"
 return WS_EX_CONTEXTHELP_t; 

when 229 => 
--# line 371 "rc.l"
 return WS_EX_CONTROLPARENT_t; 

when 230 => 
--# line 372 "rc.l"
 return WS_EX_NOPARENTNOTIFY_t; 

when 231 => 
--# line 373 "rc.l"
 return WS_EX_RIGHT_t; 

when 232 => 
--# line 374 "rc.l"
 return WS_EX_STATICEDGE_t; 

when 233 => 
--# line 375 "rc.l"
 return WS_EX_TOOLWINDOW_t; 

when 234 => 
--# line 376 "rc.l"
 return WS_EX_TOPMOST_t; 

when 235 => 
--# line 377 "rc.l"
 return WS_EX_TRANSPARENT_t; 

-- Misc --
when 236 => 
--# line 380 "rc.l"
 return IDC_STATIC_t; 

when 237 => 
--# line 382 "rc.l"
 yylval.intval := 0; return NUMBER; 

when 238 => 
--# line 383 "rc.l"
 yylval.intval := 1; return NUMBER; 

when 239 => 
--# line 385 "rc.l"
 yylval.intval   := 0;
                   yylval.floatval := 0.0;
                   return NUMBER;
                 

when 240 => 
--# line 390 "rc.l"
 begin
                     yylval.intval := Long_Long_Integer'Value(yytext);
                   exception
                     when Constraint_Error =>
                      -- declare
                      --   msg: constant String:=
                      --    "Error with integer ? [" & yytext & ']';
                      -- begin
                      --   Put_Line(Standard_Error, msg);
                      --   raise Constraint_Error with msg;
                      -- end;
                      yylval.intval := -1;
                      -- not nice at all, but a >2**31 number
                      -- seems to appear only at top (some checksum)
                   end;
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 241 => 
--# line 408 "rc.l"
 yylval.intval := Long_Long_Integer'Value("8#"&yytext&'#');
                   yylval.floatval:= Long_Float( yylval.intval );
                   return NUMBER;

when 242 => 
--# line 412 "rc.l"

                   yylval.floatval := Long_Float'Value(yytext);
                   return FLOAT_t;
                   

when 243 => 
--# line 417 "rc.l"
 declare
                     hexa_c: String:= yytext;
                     hexa_last: Integer:= hexa_c'Last;
                   begin
                     if hexa_c(hexa_last)='L' then
                       hexa_last:= hexa_last - 1;
                     end if;
                     yylval.intval := Long_Long_Integer'Value("16#" & hexa_c(hexa_c'First+2 .. hexa_last) & '#');
                     yylval.floatval:= Long_Float( yylval.intval );
                     return NUMBER;
                   end;
                

when 244 => 
--# line 430 "rc.l"
return RCString; -- borrowed from ada95.l

-- Doesn't work with double quotes
-- \"({NOTGUIL})*\"    {return RCString;}
when 245 => 
--# line 435 "rc.l"
return INCString;

when 246 => 
--# line 437 "rc.l"
 return IDENT_t; 

when 247 => 
--# line 440 "rc.l"
 null; -- \t  ;

when 248 => 
--# line 441 "rc.l"
linenum:= linenum+1;

when 249 => 
--# line 443 "rc.l"
 null; -- ??
                     -- C: return *yytext;
                   

-- "("                { return '('; }
-- ")"                { return ')'; }
-- "}"                { return '}'; }
-- "{"                { return '{'; }
when 250 => 
--# line 451 "rc.l"
ECHO;
when YY_END_OF_BUFFER + INITIAL + 1 => 
    return End_Of_Input;
                when YY_END_OF_BUFFER =>
                    -- undo the effects of YY_DO_BEFORE_ACTION
                    yy_ch_buf(yy_cp) := yy_hold_char;

                    yytext_ptr := yy_bp;

                    case yy_get_next_buffer is
                        when EOB_ACT_END_OF_FILE =>
                            begin
                            if yywrap then
                                -- note: because we've taken care in
                                -- yy_get_next_buffer() to have set up yytext,
                                -- we can now set up yy_c_buf_p so that if some
                                -- total hoser (like aflex itself) wants
                                -- to call the scanner after we return the
                                -- End_Of_Input, it'll still work - another
                                -- End_Of_Input will get returned.

                                yy_c_buf_p := yytext_ptr;

                                yy_act := YY_STATE_EOF((yy_start - 1) / 2);

                                goto do_action;
                            else
                                --  start processing a new file
                                yy_init := true;
                                goto new_file;
                            end if;
                            end;
                        when EOB_ACT_RESTART_SCAN =>
                            yy_c_buf_p := yytext_ptr;
                            yy_hold_char := yy_ch_buf(yy_c_buf_p);
                        when EOB_ACT_LAST_MATCH =>
                            yy_c_buf_p := yy_n_chars;
                            yy_current_state := yy_get_previous_state;

                            yy_cp := yy_c_buf_p;
                            yy_bp := yytext_ptr;
                            goto next_action;
                        when others => null;
                        end case; -- case yy_get_next_buffer()
                when others =>
                    Text_IO.put( "action # " );
                    Text_IO.put( INTEGER'IMAGE(yy_act) );
                    Text_IO.new_line;
                    raise AFLEX_INTERNAL_ERROR;
            end case; -- case (yy_act)
        end loop; -- end of loop waiting for end of file
end YYLex;
--# line 451 "rc.l"
